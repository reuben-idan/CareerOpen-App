{"version":3,"file":"JobList-B9_x0NEq.js","sources":["../../src/pages/JobList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { jobService } from \"../services\";\r\nimport JobCard from \"../components/jobs/JobCard\";\r\nimport JobSearch from \"../components/jobs/JobSearch\";\r\nimport Sidebar from \"../components/layout/Sidebar\";\r\nimport { EmployerLogos, GlassCard, LoadingSpinner } from \"../components\";\r\nimport { FunnelIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst JobList = () => {\r\n  const [jobs, setJobs] = useState({ results: [], count: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  \r\n  // Search and filter states\r\n  const [filters, setFilters] = useState({\r\n    search: searchParams.get('search') || '',\r\n    location: searchParams.get('location') || '',\r\n    job_type: searchParams.get('job_type') || '',\r\n    company: searchParams.get('company') || '',\r\n    min_salary: searchParams.get('min_salary') || '',\r\n    max_salary: searchParams.get('max_salary') || '',\r\n    is_remote: searchParams.get('is_remote') === 'true' || false,\r\n    skills: searchParams.get('skills') || '',\r\n    ordering: searchParams.get('ordering') || '-created_at',\r\n    page: parseInt(searchParams.get('page') || '1'),\r\n    page_size: 10,\r\n  });\r\n\r\n  // Fetch jobs when filters change\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Convert filters to query params\r\n        const params = new URLSearchParams();\r\n        Object.entries(filters).forEach(([key, value]) => {\r\n          if (value !== '' && value !== false) {\r\n            params.append(key, value);\r\n          }\r\n        });\r\n        \r\n        // Update URL with current filters\r\n        setSearchParams(params);\r\n        \r\n        // Fetch jobs using the jobService\r\n        const response = await jobService.searchJobs(params.toString());\r\n        setJobs(response.data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching jobs\", err);\r\n        setError(\"Failed to load jobs. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [filters, setSearchParams]);\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      search: searchTerm,\r\n      page: 1 // Reset to first page on new search\r\n    }));\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n      page: 1 // Reset to first page on filter change\r\n    }));\r\n  };\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      page: newPage\r\n    }));\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({\r\n      search: '',\r\n      location: '',\r\n      job_type: '',\r\n      company: '',\r\n      min_salary: '',\r\n      max_salary: '',\r\n      is_remote: false,\r\n      skills: '',\r\n      ordering: '-created_at',\r\n      page: 1,\r\n      page_size: 10,\r\n    });\r\n  };\r\n\r\n  const hasActiveFilters = Object.entries(filters).some(\r\n    ([key, value]) => \r\n      value && \r\n      !['page', 'page_size', 'ordering'].includes(key) && \r\n      value !== (key === 'is_remote' ? false : '')\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 ml-0 md:ml-64\">\r\n        <div className=\"container mx-auto px-4 py-8\">\r\n          {/* Header Section */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-6\">\r\n              <div className=\"flex-1\">\r\n                <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\r\n                  Find Your Dream Job\r\n                </h1>\r\n                <p className=\"text-lg text-gray-600\">\r\n                  Browse through {jobs.count || 0} job listings and find the perfect match for your skills\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Search and Filters */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n              {/* Search Bar */}\r\n              <div className=\"mb-6\">\r\n                <JobSearch \r\n                  initialQuery={filters.search}\r\n                  onSearch={handleSearch}\r\n                />\r\n              </div>\r\n\r\n              {/* Filter Toggle */}\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <h2 className=\"text-lg font-medium text-gray-700 dark:text-gray-300\">\r\n                  Filters\r\n                </h2>\r\n                <button\r\n                  onClick={() => setShowFilters(!showFilters)}\r\n                  className=\"flex items-center gap-2 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\"\r\n                >\r\n                  <FunnelIcon className=\"h-5 w-5\" />\r\n                  {showFilters ? 'Hide Filters' : 'Show Filters'}\r\n                </button>\r\n              </div>\r\n\r\n              {/* Filters Panel */}\r\n              {showFilters && (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\r\n                  {/* Job Type Filter */}\r\n                  <div>\r\n                    <label htmlFor=\"job_type\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                      Job Type\r\n                    </label>\r\n                    <select\r\n                      id=\"job_type\"\r\n                      name=\"job_type\"\r\n                      value={filters.job_type}\r\n                      onChange={handleFilterChange}\r\n                      className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                    >\r\n                      <option value=\"\">All Types</option>\r\n                      <option value=\"full_time\">Full Time</option>\r\n                      <option value=\"part_time\">Part Time</option>\r\n                      <option value=\"contract\">Contract</option>\r\n                      <option value=\"internship\">Internship</option>\r\n                      <option value=\"temporary\">Temporary</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  {/* Location Filter */}\r\n                  <div>\r\n                    <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                      Location\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"location\"\r\n                      name=\"location\"\r\n                      value={filters.location}\r\n                      onChange={handleFilterChange}\r\n                      placeholder=\"City, State, or Remote\"\r\n                      className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Salary Range */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                      Salary Range\r\n                    </label>\r\n                    <div className=\"flex gap-2\">\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"min_salary\"\r\n                        name=\"min_salary\"\r\n                        value={filters.min_salary}\r\n                        onChange={handleFilterChange}\r\n                        placeholder=\"Min\"\r\n                        className=\"w-1/2 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                      />\r\n                      <input\r\n                        type=\"number\"\r\n                        id=\"max_salary\"\r\n                        name=\"max_salary\"\r\n                        value={filters.max_salary}\r\n                        onChange={handleFilterChange}\r\n                        placeholder=\"Max\"\r\n                        className=\"w-1/2 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Remote Work Toggle */}\r\n                  <div className=\"flex items-end\">\r\n                    <div className=\"flex items-center\">\r\n                      <input\r\n                        id=\"is_remote\"\r\n                        name=\"is_remote\"\r\n                        type=\"checkbox\"\r\n                        checked={filters.is_remote}\r\n                        onChange={handleFilterChange}\r\n                        className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700\"\r\n                      />\r\n                      <label htmlFor=\"is_remote\" className=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">\r\n                        Remote Only\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Active Filters */}\r\n              {hasActiveFilters && (\r\n                <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                  {Object.entries(filters).map(([key, value]) => {\r\n                    if (!value || key === 'page' || key === 'page_size' || key === 'ordering') return null;\r\n                    if (key === 'is_remote' && !value) return null;\r\n                    \r\n                    let displayValue = value;\r\n                    if (key === 'is_remote') displayValue = 'Remote';\r\n                    if (key === 'job_type') {\r\n                      displayValue = value.split('_').map(word => \r\n                        word.charAt(0).toUpperCase() + word.slice(1)\r\n                      ).join(' ');\r\n                    }\r\n                    \r\n                    return (\r\n                      <span \r\n                        key={key}\r\n                        className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100\"\r\n                      >\r\n                        {key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}: {displayValue}\r\n                        <button \r\n                          onClick={() => {\r\n                            setFilters(prev => ({\r\n                              ...prev,\r\n                              [key]: key === 'is_remote' ? false : '',\r\n                              page: 1\r\n                            }));\r\n                          }}\r\n                          className=\"ml-2 text-blue-500 hover:text-blue-700\"\r\n                        >\r\n                          <XMarkIcon className=\"h-3 w-3\" />\r\n                        </button>\r\n                      </span>\r\n                    );\r\n                  })}\r\n                  <button\r\n                    onClick={clearFilters}\r\n                    className=\"text-sm text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\"\r\n                  >\r\n                    Clear all filters\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Job Listings */}\r\n          <div className=\"mb-8\">\r\n            {loading ? (\r\n              <div className=\"flex justify-center items-center h-64\">\r\n                <LoadingSpinner size=\"lg\" />\r\n              </div>\r\n            ) : error ? (\r\n              <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4 text-center\">\r\n                <p className=\"text-red-700 dark:text-red-300\">{error}</p>\r\n                <button\r\n                  onClick={() => window.location.reload()}\r\n                  className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\r\n                >\r\n                  Retry\r\n                </button>\r\n              </div>\r\n            ) : jobs.results && jobs.results.length > 0 ? (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Showing <span className=\"font-medium\">{(filters.page - 1) * filters.page_size + 1}</span> to{' '}\r\n                    <span className=\"font-medium\">\r\n                      {Math.min(filters.page * filters.page_size, jobs.count)}\r\n                    </span>{' '}\r\n                    of <span className=\"font-medium\">{jobs.count}</span> jobs\r\n                  </p>\r\n                  <div className=\"flex items-center\">\r\n                    <label htmlFor=\"sort\" className=\"mr-2 text-sm text-gray-600 dark:text-gray-400\">\r\n                      Sort by:\r\n                    </label>\r\n                    <select\r\n                      id=\"sort\"\r\n                      name=\"ordering\"\r\n                      value={filters.ordering}\r\n                      onChange={handleFilterChange}\r\n                      className=\"rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white text-sm\"\r\n                    >\r\n                      <option value=\"-created_at\">Newest</option>\r\n                      <option value=\"created_at\">Oldest</option>\r\n                      <option value=\"-salary_max\">Salary: High to Low</option>\r\n                      <option value=\"salary_min\">Salary: Low to High</option>\r\n                      <option value=\"title\">Title: A-Z</option>\r\n                      <option value=\"-title\">Title: Z-A</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Job Cards */}\r\n                <div className=\"space-y-4\">\r\n                  {jobs.results.map((job) => (\r\n                    <JobCard \r\n                      key={job.id}\r\n                      job={job}\r\n                      onSave={null} // TODO: Implement save functionality\r\n                      isSaved={false} // TODO: Implement saved jobs check\r\n                    />\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Pagination */}\r\n                {jobs.count > filters.page_size && (\r\n                  <div className=\"flex justify-center mt-8\">\r\n                    <nav className=\"flex items-center gap-2\" aria-label=\"Pagination\">\r\n                      <button\r\n                        onClick={() => handlePageChange(Math.max(1, filters.page - 1))}\r\n                        disabled={filters.page === 1}\r\n                        className={`px-3 py-1 rounded-md ${filters.page === 1 ? 'text-gray-400 cursor-not-allowed' : 'text-blue-600 hover:bg-blue-50 dark:hover:bg-gray-700'}`}\r\n                      >\r\n                        Previous\r\n                      </button>\r\n                      \r\n                      {Array.from({ length: Math.ceil(jobs.count / filters.page_size) }, (_, i) => i + 1)\r\n                        .filter(page => \r\n                          page === 1 || \r\n                          page === filters.page || \r\n                          page === filters.page - 1 || \r\n                          page === filters.page + 1 ||\r\n                          page === Math.ceil(jobs.count / filters.page_size)\r\n                        )\r\n                        .map((page, index, array) => {\r\n                          // Add ellipsis if there's a gap\r\n                          if (index > 0 && array[index - 1] !== page - 1) {\r\n                            return (\r\n                              <span key={`ellipsis-${page}`} className=\"px-3 py-1\">\r\n                                ...\r\n                              </span>\r\n                            );\r\n                          }\r\n                          return (\r\n                            <button\r\n                              key={page}\r\n                              onClick={() => handlePageChange(page)}\r\n                              className={`px-3 py-1 rounded-md ${\r\n                                filters.page === page\r\n                                  ? 'bg-blue-600 text-white'\r\n                                  : 'text-blue-600 hover:bg-blue-50 dark:hover:bg-gray-700'\r\n                              }`}\r\n                            >\r\n                              {page}\r\n                            </button>\r\n                          );\r\n                        })}\r\n                      \r\n                      <button\r\n                        onClick={() => handlePageChange(Math.min(Math.ceil(jobs.count / filters.page_size), filters.page + 1))}\r\n                        disabled={filters.page >= Math.ceil(jobs.count / filters.page_size)}\r\n                        className={`px-3 py-1 rounded-md ${filters.page >= Math.ceil(jobs.count / filters.page_size) ? 'text-gray-400 cursor-not-allowed' : 'text-blue-600 hover:bg-blue-50 dark:hover:bg-gray-700'}`}\r\n                      >\r\n                        Next\r\n                      </button>\r\n                    </nav>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-12\">\r\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">No jobs found</h3>\r\n                <p className=\"text-gray-500 dark:text-gray-400\">\r\n                  {hasActiveFilters \r\n                    ? 'Try adjusting your search or filter criteria.'\r\n                    : 'There are currently no job listings available. Please check back later.'}\r\n                </p>\r\n                {hasActiveFilters && (\r\n                  <button\r\n                    onClick={clearFilters}\r\n                    className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\r\n                  >\r\n                    Clear all filters\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Featured Companies */}\r\n          <div className=\"mb-12\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Featured Companies</h2>\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n              <EmployerLogos />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Testimonials */}\r\n          <div className=\"mb-12\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">What Our Users Say</h2>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <GlassCard className=\"p-6\">\r\n                <div className=\"flex items-center mb-4\">\r\n                  <div className=\"h-12 w-12 rounded-full bg-blue-100 flex items-center justify-center text-blue-600 font-bold text-xl\">\r\n                    JD\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <h4 className=\"font-medium text-gray-900 dark:text-white\">John Doe</h4>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">Senior Developer</p>\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-gray-600 dark:text-gray-300\">\r\n                  \"Found my dream job within a week of using CareerOpen. The application process was seamless!\"\r\n                </p>\r\n              </GlassCard>\r\n              <GlassCard className=\"p-6\">\r\n                <div className=\"flex items-center mb-4\">\r\n                  <div className=\"h-12 w-12 rounded-full bg-green-100 flex items-center justify-center text-green-600 font-bold text-xl\">\r\n                    AS\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <h4 className=\"font-medium text-gray-900 dark:text-white\">Alex Smith</h4>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">Product Manager</p>\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-gray-600 dark:text-gray-300\">\r\n                  \"The job matching algorithm is spot on. I received offers that perfectly matched my skills and experience.\"\r\n                </p>\r\n              </GlassCard>\r\n              <GlassCard className=\"p-6\">\r\n                <div className=\"flex items-center mb-4\">\r\n                  <div className=\"h-12 w-12 rounded-full bg-purple-100 flex items-center justify-center text-purple-600 font-bold text-xl\">\r\n                    MJ\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <h4 className=\"font-medium text-gray-900 dark:text-white\">Maria Johnson</h4>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">UX Designer</p>\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-gray-600 dark:text-gray-300\">\r\n                  \"The application tracking system is a game-changer. I could easily keep track of all my applications in one place.\"\r\n                </p>\r\n              </GlassCard>\r\n            </div>\r\n          </div>\r\n\r\n          {/* CTA Section */}\r\n          <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 rounded-xl p-8 md:p-12 text-center text-white\">\r\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Ready to find your next opportunity?</h2>\r\n            <p className=\"text-xl mb-8 max-w-3xl mx-auto\">\r\n              Join thousands of professionals who found their dream jobs through CareerOpen\r\n            </p>\r\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n              <button className=\"px-6 py-3 bg-white text-blue-700 font-medium rounded-lg hover:bg-blue-50 transition-colors\">\r\n                Browse Jobs\r\n              </button>\r\n              <button className=\"px-6 py-3 border-2 border-white text-white font-medium rounded-lg hover:bg-white hover:bg-opacity-10 transition-colors\">\r\n                Create Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n"],"names":["JobList","jobs","setJobs","useState","results","count","loading","setLoading","error","setError","searchParams","setSearchParams","useSearchParams","showFilters","setShowFilters","filters","setFilters","search","get","location","job_type","company","min_salary","max_salary","is_remote","skills","ordering","page","parseInt","page_size","useEffect","async","params","URLSearchParams","Object","entries","forEach","key","value","append","response","jobService","searchJobs","toString","data","err","console","fetchJobs","handleFilterChange","e","name","type","checked","target","prev","handlePageChange","newPage","window","scrollTo","clearFilters","hasActiveFilters","some","includes","jsxs","className","children","jsx","Sidebar","JobSearch","initialQuery","onSearch","searchTerm","onClick","FunnelIcon","htmlFor","id","onChange","placeholder","map","displayValue","split","word","charAt","toUpperCase","slice","join","XMarkIcon","LoadingSpinner","size","reload","length","Math","min","job","JobCard","onSave","isSaved","max","disabled","Array","from","ceil","_","i","filter","index","array","EmployerLogos","GlassCard"],"mappings":"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"}