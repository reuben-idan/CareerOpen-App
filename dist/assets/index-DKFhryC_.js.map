{"version":3,"mappings":"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","names":["ThemeContext","createContext","ThemeProvider","children","theme","setTheme","useState","savedTheme","useEffect","toggleTheme","prevTheme","setLightTheme","setDarkTheme","jsx","useTheme","context","useContext","PropTypes","Web3Context","Web3Provider","isMetaMaskInstalled","setIsMetaMaskInstalled","isConnected","setIsConnected","account","setAccount","error","setError","isInitialized","setIsInitialized","accounts","err","value","ENV","REQUEST_TIMEOUT","api","axios","config","_a","token","authService","handleError","safeError","networkError","status","data","originalRequest","newToken","errorMessage","fieldErrors","_","field","errors","apiError","response","_b","request","method","url","apiClient","params","file","fieldName","formData","key","item","API_BASE_URL","ENDPOINTS","jobId","buildUrl","endpoint","baseUrl","path","TOKEN_KEYS","isRefreshing","failedQueue","processQueue","prom","email","password","access","refresh","userData","forceRefresh","cachedUser","registrationData","resolve","reject","refreshToken","user","userStr","e","userId","profileData","storageService","filePath","fileExtension","fileName","ProfileContext","useProfile","ProfileProvider","useUser","profile","setProfile","loading","setLoading","retryCount","setRetryCount","createInitialProfile","initialData","_c","_d","fetchProfileById","useCallback","cachedData","updateProfile","updatedData","updatedProfile","uploadProfilePicture","uploadCoverPhoto","UserContext","UserProvider","setUser","isLoading","setIsLoading","signUp","signIn","contextValue","prev","ToastContext","useToast","Toast","message","type","onClose","icons","CheckCircleIcon","ExclamationCircleIcon","InformationCircleIcon","colors","Icon","Transition","jsxs","XMarkIcon","ToastProvider","toast","setToast","showToast","hideToast","useAuthStore","apiService","credentials","id","getStoredAuth","stored","create","set","get","accessToken","useAuth","isAuthenticated","login","logout","checkAuth","username","signOut","Analytics","script","event","eventName","title","action","category","label","metric","jobTitle","query","analytics","LoadingSpinner","size","text","fullScreen","sizeClasses","spinner","ErrorBoundary","React","props","__publicField","errorInfo","ExclamationTriangleIcon","ArrowPathIcon","HomeIcon","checkHealth","HealthStatus","showDetails","className","setStatus","fetchHealthStatus","healthData","responseData","healthStatus","timestamp","intervalId","statusConfig","currentStatus","StatusIcon","formatTimestamp","handleRefresh","UserProfile","useParams","preferences","isProfileLoading","isEditing","setIsEditing","setFormData","isCurrentUser","setIsCurrentUser","handleInputChange","name","handleSubmit","PencilIcon","CheckIcon","UserCircleIcon","ProtectedRoute","redirectTo","requireAuth","location","useLocation","Navigate","PublicRoute","from","ProfilePage","lazy","JobListPage","__vitePreload","JobDetail","Feed","MyNetwork","Messages","SignUpPage","SignInPage","NotificationPage","SubscriptionPayment","SettingsPage","SavedJobsPage","JobApplicationsPage","JobPostPage","APITest","PublicLayout","AppLayout","App","HelmetProvider","Router","Suspense","AppRoutes","ToastContainer","Routes","Route","Outlet","initializeWeb3","createRoot","StrictMode"],"ignoreList":[],"sources":["../../src/context/ThemeContext.jsx","../../src/context/web3/index.jsx","../../src/services/api/api.js","../../src/config/api.js","../../src/services/api/auth.js","../../src/services/api/storage.js","../../src/context/profile/index.jsx","../../src/context/auth/index.jsx","../../src/context/toast/index.jsx","../../src/services/api/apiService.js","../../src/stores/authStore.js","../../src/hooks/useAuth.js","../../src/config/env.js","../../src/services/analytics/index.js","../../src/components/common/LoadingSpinner.jsx","../../src/components/common/ErrorBoundary.jsx","../../src/services/api/healthService.js","../../src/components/common/HealthStatus.jsx","../../src/components/profile/UserProfile.jsx","../../src/components/auth/ProtectedRoute.jsx","../../src/components/auth/PublicRoute.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(() => {\r\n    // Check localStorage for saved theme preference\r\n    const savedTheme = localStorage.getItem(\"theme\");\r\n    if (savedTheme) {\r\n      return savedTheme;\r\n    }\r\n    // Check system preference\r\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n      return \"dark\";\r\n    }\r\n    return \"light\";\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Save theme preference to localStorage\r\n    localStorage.setItem(\"theme\", theme);\r\n\r\n    // Apply theme to document\r\n    if (theme === \"dark\") {\r\n      document.documentElement.classList.add(\"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n    }\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const setLightTheme = () => {\r\n    setTheme(\"light\");\r\n  };\r\n\r\n  const setDarkTheme = () => {\r\n    setTheme(\"dark\");\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        toggleTheme,\r\n        setLightTheme,\r\n        setDarkTheme,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Web3Context = createContext();\r\n\r\nconst useWeb3 = () => {\r\n  const context = useContext(Web3Context);\r\n  if (!context) {\r\n    throw new Error(\"useWeb3 must be used within a Web3Provider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nconst Web3Provider = ({ children }) => {\r\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [account, setAccount] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isInitialized, setIsInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkMetaMask = async () => {\r\n      try {\r\n        // Check if window and ethereum are available\r\n        if (typeof window === \"undefined\" || !window.ethereum) {\r\n          setIsMetaMaskInstalled(false);\r\n          setError(\"MetaMask is not installed\");\r\n          setIsInitialized(true);\r\n          return;\r\n        }\r\n\r\n        // Check if it's actually MetaMask\r\n        if (!window.ethereum.isMetaMask) {\r\n          setIsMetaMaskInstalled(false);\r\n          setError(\"MetaMask is not installed\");\r\n          setIsInitialized(true);\r\n          return;\r\n        }\r\n\r\n        setIsMetaMaskInstalled(true);\r\n        setError(null);\r\n\r\n        // Check if already connected\r\n        try {\r\n          const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\r\n          if (accounts.length > 0) {\r\n            setAccount(accounts[0]);\r\n            setIsConnected(true);\r\n          }\r\n        } catch (err) {\r\n          console.warn(\"Error checking accounts:\", err);\r\n        }\r\n\r\n        // Listen for account changes\r\n        window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n          if (accounts.length > 0) {\r\n            setAccount(accounts[0]);\r\n            setIsConnected(true);\r\n          } else {\r\n            setAccount(null);\r\n            setIsConnected(false);\r\n          }\r\n        });\r\n\r\n        // Listen for chain changes\r\n        window.ethereum.on(\"chainChanged\", () => {\r\n          window.location.reload();\r\n        });\r\n\r\n        // Listen for disconnect\r\n        window.ethereum.on(\"disconnect\", () => {\r\n          setAccount(null);\r\n          setIsConnected(false);\r\n        });\r\n\r\n      } catch (err) {\r\n        console.error(\"Error checking MetaMask:\", err);\r\n        setError(err.message);\r\n      } finally {\r\n        setIsInitialized(true);\r\n      }\r\n    };\r\n\r\n    checkMetaMask();\r\n\r\n    return () => {\r\n      if (window.ethereum) {\r\n        window.ethereum.removeAllListeners();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      if (!isMetaMaskInstalled) {\r\n        throw new Error(\"MetaMask is not installed\");\r\n      }\r\n\r\n      if (!window.ethereum.isMetaMask) {\r\n        throw new Error(\"MetaMask is not installed\");\r\n      }\r\n\r\n      const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      if (accounts.length > 0) {\r\n        setAccount(accounts[0]);\r\n        setIsConnected(true);\r\n        setError(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error connecting wallet:\", err);\r\n      setError(err.message);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = () => {\r\n    setAccount(null);\r\n    setIsConnected(false);\r\n  };\r\n\r\n  const value = {\r\n    isMetaMaskInstalled,\r\n    isConnected,\r\n    account,\r\n    error,\r\n    isInitialized,\r\n    connectWallet,\r\n    disconnectWallet,\r\n  };\r\n\r\n  // Don't render children until initialized\r\n  if (!isInitialized) {\r\n    return null;\r\n  }\r\n\r\n  return <Web3Context.Provider value={value}>{children}</Web3Context.Provider>;\r\n};\r\n\r\nWeb3Provider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { useWeb3, Web3Provider }; ","import axios from 'axios';\nimport authService from './auth';\n\n// Environment configuration (Vite uses import.meta.env instead of process.env)\nconst ENV = {\n  API_URL: import.meta.env.VITE_API_URL || 'http://localhost:8000/api',\n  NODE_ENV: import.meta.env.MODE || 'development',\n  IS_DEV: import.meta.env.DEV,\n};\n\n// Request timeout (in milliseconds)\nconst REQUEST_TIMEOUT = 15000;\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: ENV.API_URL,\n  timeout: REQUEST_TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  withCredentials: true,\n});\n\n// Request interceptor for API calls\napi.interceptors.request.use(\n  async (config) => {\n    // Log authentication-related requests\n    const isAuthRequest = config.url?.includes('auth/');\n    \n    if (isAuthRequest && ENV.IS_DEV) {\n      console.log(`[API] Auth request to ${config.url}`, {\n        method: config.method?.toUpperCase(),\n        data: config.data,\n        headers: config.headers\n      });\n    }\n    \n    // Add auth token to request if available\n    const token = authService.getAccessToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n      \n      if (isAuthRequest && ENV.IS_DEV) {\n        console.log('[API] Added auth token to request');\n      }\n    }\n\n    // Log request in development\n    if (ENV.IS_DEV) {\n      console.log(`[API] ${config.method?.toUpperCase()} ${config.url}`, {\n        params: config.params,\n        data: config.data,\n      });\n    }\n\n    return config;\n  },\n  (error) => {\n    if (ENV.IS_DEV) {\n      console.error('[API] Request error:', error);\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Helper function to safely parse JSON\nconst safeJsonParse = (str) => {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    console.error('[API] Failed to parse JSON:', str);\n    return str;\n  }\n};\n\n// Enhanced error handling for API responses\nconst handleResponse = (response) => {\n  // Log successful responses in development\n  if (ENV.IS_DEV) {\n    try {\n      console.log(`[API] ${response?.config?.method?.toUpperCase() || 'UNKNOWN'} ${response?.config?.url || 'unknown-url'} - ${response?.status || 'no-status'}`, {\n        data: response?.data,\n      });\n    } catch (logError) {\n      console.error('[API] Error logging successful response:', logError);\n    }\n  }\n\n  try {\n    // Ensure we have valid JSON data if content-type is JSON\n    if (response?.data && typeof response.data === 'string' && \n        response.headers?.['content-type']?.includes('application/json')) {\n      response.data = safeJsonParse(response.data);\n    }\n    \n    // Return response data directly for easier consumption\n    return response?.data || {};\n  } catch (parseError) {\n    console.error('[API] Error processing response:', parseError);\n    return response?.data || {};\n  }\n};\n\n// Enhanced error handling for API errors\nconst handleError = async (error) => {\n  // Create a safe error object with all necessary properties\n  const safeError = {\n    message: 'An unexpected error occurred',\n    isNetworkError: false,\n    isServerError: false,\n    isAuthError: false,\n    status: null,\n    data: null,\n    originalError: error\n  };\n\n  // Log error in development with safe property access\n  if (ENV.IS_DEV) {\n    try {\n      console.error('[API] Response error:', {\n        url: error?.config?.url || 'unknown-url',\n        status: error?.response?.status || 'no-status',\n        data: error?.response?.data || 'no-data',\n        error: error?.message || 'unknown-error',\n        stack: error?.stack\n      });\n    } catch (logError) {\n      console.error('[API] Error logging error response:', logError);\n    }\n  }\n\n  // Handle network errors (no response from server)\n  if (!error.response) {\n    safeError.isNetworkError = true;\n    \n    // Check for specific error conditions\n    if (error.code === 'ECONNABORTED') {\n      safeError.message = 'Request timeout. Please check your connection and try again.';\n    } else if (error.message && error.message.includes('Network Error')) {\n      safeError.message = 'Network error. Please check your internet connection.';\n    } else if (error.message && error.message.includes('JSON')) {\n      safeError.message = 'Invalid server response. Please try again.';\n      safeError.isJsonError = true;\n    } else {\n      safeError.message = error.message || 'Unable to connect to the server. Please check your connection.';\n    }\n    \n    const networkError = new Error(safeError.message);\n    Object.assign(networkError, safeError);\n    return Promise.reject(networkError);\n  }\n\n  // Handle HTTP errors (response with error status)\n  const { status, data } = error.response;\n  safeError.status = status;\n  safeError.data = data;\n  safeError.isServerError = status >= 500;\n  safeError.isAuthError = status === 401 || status === 403;\n\n  // Handle token expiration (401 Unauthorized)\n  const originalRequest = error.config;\n  if (status === 401 && originalRequest && !originalRequest._retry) {\n    originalRequest._retry = true;\n\n    try {\n      // Try to refresh the token\n      const newToken = await authService.refreshToken();\n      \n      // Retry the original request with the new token\n      originalRequest.headers.Authorization = `Bearer ${newToken}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // If refresh fails, clear auth and redirect to login\n      authService.logout();\n      \n      // Only redirect if we're not already on the login page\n      if (typeof window !== 'undefined' && !window.location.pathname.includes('/login')) {\n        window.location.href = '/login';\n      }\n      \n      return Promise.reject(new Error('Your session has expired. Please log in again.'));\n    }\n  }\n\n  // Handle other error statuses\n  let errorMessage = 'An unexpected error occurred. Please try again.';\n  \n  if (status === 400 && data) {\n    // Handle validation errors\n    if (typeof data === 'object') {\n      // Handle field-specific validation errors\n      const fieldErrors = Object.entries(data)\n        .filter(([_, value]) => Array.isArray(value) && value.length > 0)\n        .map(([field, errors]) => `${field}: ${errors.join(', ')}`);\n      \n      if (fieldErrors.length > 0) {\n        errorMessage = fieldErrors.join('\\n');\n      } else if (data.detail) {\n        errorMessage = data.detail;\n      }\n    } else if (typeof data === 'string') {\n      errorMessage = data;\n    }\n  } else if (status === 403) {\n    errorMessage = data?.detail || 'You do not have permission to perform this action.';\n  } else if (status === 404) {\n    errorMessage = 'The requested resource was not found.';\n  } else if (status >= 500) {\n    errorMessage = 'A server error occurred. Please try again later.';\n  }\n\n  // Create a new error with a user-friendly message\n  const apiError = new Error(errorMessage);\n  apiError.status = status;\n  apiError.data = data;\n  \n  return Promise.reject(apiError);\n};\n\n// Add response interceptor\napi.interceptors.response.use(\n  response => {\n    // Log successful auth responses\n    if (response.config.url?.includes('auth/') && ENV.IS_DEV) {\n      console.log(`[API] Auth response from ${response.config.url}`, {\n        status: response.status,\n        data: response.data,\n        headers: response.headers\n      });\n    }\n    return response;\n  },\n  error => {\n    // Log auth errors\n    if (error.config?.url?.includes('auth/') && ENV.IS_DEV) {\n      console.error('[API] Auth error:', {\n        url: error.config.url,\n        method: error.config.method,\n        status: error.response?.status,\n        data: error.response?.data,\n        headers: error.config.headers\n      });\n    }\n    return handleError(error);\n  }\n);\n\n/**\n * Helper function to make API requests with better error handling\n * @param {string} method - HTTP method (get, post, put, delete, etc.)\n * @param {string} url - API endpoint URL\n * @param {Object} [data] - Request payload (for POST, PUT, PATCH)\n * @param {Object} [config] - Additional axios config\n * @returns {Promise<*>} API response data\n */\nconst request = async (method, url, data = null, config = {}) => {\n  try {\n    const response = await api({\n      method,\n      url,\n      data,\n      ...config,\n    });\n    return response;\n  } catch (error) {\n    // Error is already processed by the interceptor\n    throw error;\n  }\n};\n\n// Helper methods for common HTTP methods\nconst apiClient = {\n  get: (url, params = {}, config = {}) => \n    request('get', url, null, { params, ...config }),\n  \n  post: (url, data = {}, config = {}) => \n    request('post', url, data, config),\n  \n  put: (url, data = {}, config = {}) => \n    request('put', url, data, config),\n  \n  patch: (url, data = {}, config = {}) => \n    request('patch', url, data, config),\n  \n  delete: (url, config = {}) => \n    request('delete', url, null, config),\n  \n  // File upload helper\n  upload: (url, file, fieldName = 'file', data = {}, config = {}) => {\n    const formData = new FormData();\n    formData.append(fieldName, file);\n    \n    // Append additional data\n    Object.entries(data).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        value.forEach(item => formData.append(key, item));\n      } else if (value !== null && value !== undefined) {\n        formData.append(key, value);\n      }\n    });\n    \n    return apiClient.post(url, formData, {\n      ...config,\n      headers: {\n        ...config.headers,\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n};\n\nexport default apiClient;\n","/**\n * API Configuration\n * \n * This file contains all the API endpoint configurations for the application.\n * All endpoints should be defined here for consistency and easy maintenance.\n */\n\n// Hardcode the API base URL to ensure it's always correct\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\n// Log the API base URL for debugging\nconsole.log('[API] Using base URL:', API_BASE_URL);\n\nconst ENDPOINTS = {\n  // Auth endpoints\n  AUTH: {\n    // JWT Token endpoints\n    LOGIN: '/token/',\n    REFRESH: '/token/refresh/',\n    VERIFY: '/token/verify/',\n    \n    // User endpoints\n    REGISTER: '/auth/register/',\n    ME: '/auth/me/',\n    \n    // Alias for token endpoint for backward compatibility\n    TOKEN: '/token/',\n  },\n  \n  // Job endpoints\n  JOBS: {\n    BASE: '/jobs/',\n    FEATURED: '/jobs/featured/',\n    CATEGORIES: '/jobs/categories/',\n    APPLY: (jobId) => `/jobs/${jobId}/apply/`,\n  },\n  \n  // Network endpoints\n  NETWORK: {\n    BASE: '/network/',\n    CONNECTIONS: '/network/connections/',\n    REQUESTS: '/network/requests/',\n    RECOMMENDATIONS: '/network/recommendations/',\n  },\n  \n  // User endpoints\n  USERS: {\n    PROFILE: '/users/me/',\n    UPDATE_PROFILE: '/users/me/',\n    CHANGE_PASSWORD: '/users/change-password/',\n    RESET_PASSWORD: '/users/reset-password/',\n  },\n  \n  // System endpoints\n  SYSTEM: {\n    HEALTH: '/health/',\n    CONFIG: '/config/',\n  },\n};\n\n/**\n * Helper function to build full URL for an endpoint\n * @param {string|function} endpoint - The endpoint path or a function that returns the path\n * @returns {string} The full URL\n */\nconst buildUrl = (endpoint) => {\n  try {\n    // Ensure API_BASE_URL is properly formatted\n    let baseUrl = API_BASE_URL.trim();\n    \n    // Remove any trailing slashes\n    baseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, -1) : baseUrl;\n    \n    // If endpoint is a function, call it to get the path\n    if (typeof endpoint === 'function') {\n      endpoint = endpoint();\n    }\n    \n    // If no endpoint is provided, just return the base URL\n    if (!endpoint) return baseUrl;\n    \n    // Ensure endpoint is a string\n    let path = String(endpoint).trim();\n    \n    // Remove any leading slashes from the endpoint\n    path = path.startsWith('/') ? path.slice(1) : path;\n    \n    // Build the full URL\n    const url = `${baseUrl}/${path}`;\n    \n    // Log for debugging (remove in production)\n    if (import.meta.env.DEV) {\n      console.log(`[API] Building URL: ${url}`);\n    }\n    \n    return url;\n  } catch (error) {\n    console.error('[API] Error building URL:', error);\n    throw new Error(`Failed to build API URL: ${error.message}`);\n  }\n};\n\nexport { API_BASE_URL, ENDPOINTS, buildUrl };\n","import api from './api';\nimport { ENDPOINTS } from '../../config/api';\n\n// Token storage keys\nconst TOKEN_KEYS = {\n  ACCESS: 'accessToken',\n  REFRESH: 'refreshToken',\n  USER: 'user',\n};\n\n// Token refresh queue\nlet isRefreshing = false;\nlet failedQueue = [];\n\nconst processQueue = (error, token = null) => {\n  failedQueue.forEach(prom => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\n/**\n * Authentication service for handling user authentication and token management\n */\nconst authService = {\n  /**\n   * Login a user with email and password\n   * @param {string} email - User's email\n   * @param {string} password - User's password\n   * @returns {Promise<Object>} User data\n   */\n  async login(email, password) {\n    try {\n      console.log('Attempting login with endpoint:', ENDPOINTS.AUTH.LOGIN);\n      const response = await api.post(ENDPOINTS.AUTH.LOGIN, { username: email, password });\n      \n      if (!response || !response.data) {\n        throw new Error('No data received from server');\n      }\n      \n      console.log('Login response:', response.data);\n      \n      // Handle the JWT token response\n      const { access, refresh } = response.data;\n      \n      if (!access || !refresh) {\n        console.error('Missing tokens in response:', response.data);\n        throw new Error('Authentication failed: No tokens received');\n      }\n      \n      // Get user data using the token\n      const userResponse = await this.getCurrentUser(true);\n      const userData = userResponse || {};\n      \n      // Store tokens and user data\n      this.setAuthTokens({ access, refresh });\n      this.setUser(userData);\n      \n      return userData;\n    } catch (error) {\n      // Clear any existing auth data on error\n      this.clearAuth();\n      \n      // Handle different types of errors\n      if (error && error.response) {\n        // Server responded with an error status\n        const { status, data } = error.response;\n        const errorMessage = (data && (data.detail || data.message)) || 'Login failed. Please try again.';\n        \n        console.error(`Login error (${status}):`, errorMessage);\n        \n        if (status === 400) {\n          throw new Error('Invalid email or password');\n        } else if (status === 401) {\n          throw new Error('Your session has expired. Please log in again.');\n        } else if (status >= 500) {\n          console.error('Server error during login:', error.response);\n          throw new Error('Server error. Please try again later.');\n        } else {\n          throw new Error(errorMessage);\n        }\n      } else if (error && error.request) {\n        // Request was made but no response received\n        console.error('No response from server:', error.request);\n        throw new Error('Unable to connect to the server. Please check your connection.');\n      } else if (error && error.message) {\n        // Something happened in setting up the request\n        console.error('Request setup error:', error.message);\n        throw new Error(error.message);\n      } else {\n        // Unknown error\n        console.error('Unknown login error:', error);\n        throw new Error('An unexpected error occurred during login.');\n      }\n    }\n  },\n  \n  /**\n   * Logout the current user\n   */\n  logout() {\n    this.clearAuth();\n  },\n  \n  /**\n   * Get the current authenticated user\n   * @param {boolean} forceRefresh - Force refresh from server\n   * @returns {Promise<Object>} User data\n   */\n  async getCurrentUser(forceRefresh = false) {\n    // Return cached user if available and not forcing refresh\n    if (!forceRefresh) {\n      const cachedUser = this.getCachedUser();\n      if (cachedUser) {\n        return cachedUser;\n      }\n    }\n    \n    try {\n      const response = await api.get(ENDPOINTS.AUTH.ME);\n      const userData = response.data;\n      \n      if (!userData || typeof userData !== 'object') {\n        throw new Error('Invalid user data format received');\n      }\n      \n      // Ensure we have the required user fields\n      if (!userData.id || !userData.email) {\n        console.error('Missing required user fields:', userData);\n        throw new Error('Incomplete user data received');\n      }\n      \n      // Store the user data\n      this.setUser(userData);\n      return userData;\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      // Only clear auth if it's an authentication error\n      if (error.response?.status === 401) {\n        this.clearAuth();\n      }\n      throw error;\n    }\n  },\n  \n  /**\n   * Register a new user\n   * @param {Object} userData - User registration data\n   * @returns {Promise<Object>} New user data\n   */\n  async register(userData) {\n    try {\n      console.log('Attempting registration with endpoint:', ENDPOINTS.AUTH.REGISTER);\n      \n      // Transform the user data to match the backend's expected format\n      const registrationData = {\n        username: userData.email, // Using email as username\n        email: userData.email,\n        password: userData.password,\n        first_name: userData.first_name,\n        last_name: userData.last_name,\n        // Include any additional fields required by the backend\n      };\n      \n      const response = await api.post(ENDPOINTS.AUTH.REGISTER, registrationData);\n      console.log('Registration response:', response.data);\n      \n      // After successful registration, log the user in\n      if (response.data.id) {\n        return this.login(registrationData.email, registrationData.password);\n      }\n      \n      throw new Error('Registration failed: No user ID in response');\n    } catch (error) {\n      if (error.response?.data) {\n        throw new Error(\n          error.response.data.detail || \n          Object.values(error.response.data).flat().join('\\n') ||\n          'Registration failed. Please check your information and try again.'\n        );\n      }\n      throw error;\n    }\n  },\n  \n  /**\n   * Refresh the access token using the refresh token\n   * @returns {Promise<string>} New access token\n   */\n  async refreshToken() {\n    if (isRefreshing) {\n      return new Promise((resolve, reject) => {\n        failedQueue.push({ resolve, reject });\n      });\n    }\n    \n    isRefreshing = true;\n    const refreshToken = this.getRefreshToken();\n    \n    if (!refreshToken) {\n      this.clearAuth();\n      throw new Error('No refresh token available');\n    }\n    \n    try {\n      const response = await api.post('/auth/token/refresh/', { refresh: refreshToken });\n      const { access } = response.data;\n      \n      if (!access) {\n        throw new Error('No access token in refresh response');\n      }\n      \n      this.setAccessToken(access);\n      processQueue(null, access);\n      return access;\n    } catch (error) {\n      processQueue(error, null);\n      this.clearAuth();\n      throw error;\n    } finally {\n      isRefreshing = false;\n    }\n  },\n  \n  // Helper methods\n  setAuthTokens({ access, refresh }) {\n    if (access) {\n      localStorage.setItem(TOKEN_KEYS.ACCESS, access);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\n    }\n    if (refresh) {\n      localStorage.setItem(TOKEN_KEYS.REFRESH, refresh);\n    }\n  },\n  \n  setUser(user) {\n    if (user && user.id) {\n      localStorage.setItem(TOKEN_KEYS.USER, JSON.stringify(user));\n    }\n  },\n  \n  getAccessToken() {\n    return localStorage.getItem(TOKEN_KEYS.ACCESS);\n  },\n  \n  getRefreshToken() {\n    return localStorage.getItem(TOKEN_KEYS.REFRESH);\n  },\n  \n  getCachedUser() {\n    try {\n      const userStr = localStorage.getItem(TOKEN_KEYS.USER);\n      return userStr ? JSON.parse(userStr) : null;\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  },\n  \n  clearAuth() {\n    // Clear all auth-related items from localStorage\n    [TOKEN_KEYS.ACCESS, TOKEN_KEYS.REFRESH, TOKEN_KEYS.USER].forEach(key => {\n      try {\n        localStorage.removeItem(key);\n      } catch (e) {\n        console.error('Error removing item from localStorage:', e);\n      }\n    });\n    \n    // Safely delete the Authorization header\n    try {\n      if (api && api.defaults && api.defaults.headers && api.defaults.headers.common) {\n        delete api.defaults.headers.common['Authorization'];\n      } else if (api && api.defaults) {\n        // If headers.common doesn't exist, ensure it's an empty object\n        api.defaults.headers = api.defaults.headers || {};\n        api.defaults.headers.common = api.defaults.headers.common || {};\n        delete api.defaults.headers.common['Authorization'];\n      }\n    } catch (e) {\n      console.error('Error clearing Authorization header:', e);\n    }\n  },\n  \n  isAuthenticated() {\n    return !!this.getAccessToken();\n  },\n  \n  // Update user profile\n  async updateProfile(userId, profileData) {\n    try {\n      const response = await api.put(`/users/${userId}/`, profileData);\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  }\n};\n\nexport default authService;\n","import api from './api';\n\nconst storageService = {\n  /**\n   * Upload a file to the server\n   * @param {File} file - The file to upload\n   * @param {string} path - The path where to store the file (e.g., 'profile-pictures', 'documents')\n   * @returns {Promise<{url: string, path: string}>} The URL and path of the uploaded file\n   */\n  async uploadFile(file, path) {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('path', path);\n\n      const response = await api.post('/files/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      return response.data;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw new Error(error.response?.data?.message || 'Failed to upload file');\n    }\n  },\n\n  /**\n   * Delete a file from the server\n   * @param {string} filePath - The path of the file to delete\n   * @returns {Promise<void>}\n   */\n  async deleteFile(filePath) {\n    try {\n      await api.delete(`/files`, { data: { path: filePath } });\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      throw new Error(error.response?.data?.message || 'Failed to delete file');\n    }\n  },\n\n  /**\n   * Upload a profile picture\n   * @param {File} file - The image file to upload\n   * @param {string} userId - The ID of the user\n   * @returns {Promise<{url: string, path: string}>}\n   */\n  async uploadProfilePicture(file, userId) {\n    const fileExtension = file.name.split('.').pop();\n    const fileName = `profile-pictures/${userId}/profile.${fileExtension}`;\n    return await this.uploadFile(file, fileName);\n  },\n\n  /**\n   * Upload a cover photo\n   * @param {File} file - The image file to upload\n   * @param {string} userId - The ID of the user\n   * @returns {Promise<{url: string, path: string}>}\n   */\n  async uploadCoverPhoto(file, userId) {\n    const fileExtension = file.name.split('.').pop();\n    const fileName = `cover-photos/${userId}/cover.${fileExtension}`;\n    return await this.uploadFile(file, fileName);\n  },\n\n  /**\n   * Get file extension from URL\n   * @param {string} url - The file URL\n   * @returns {string} The file extension\n   */\n  getFileExtension(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      return pathname.split('.').pop().toLowerCase();\n    } catch (e) {\n      console.error('Error parsing URL:', e);\n      return '';\n    }\n  },\n\n  /**\n   * Extract file path from URL\n   * @param {string} url - The file URL\n   * @returns {string} The file path\n   */\n  getFilePathFromURL(url) {\n    try {\n      const urlObj = new URL(url);\n      // Remove the leading slash and any query parameters\n      return urlObj.pathname.substring(1);\n    } catch (e) {\n      console.error('Error parsing file path from URL:', e);\n      return '';\n    }\n  },\n};\n\nexport default storageService;\n","import React, { createContext, useContext, useState, useCallback, useEffect } from \"react\";\nimport { useUser } from \"../auth\";\nimport api from \"../../services/api/api\";\nimport storageService from \"../../services/api/storage\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileContext = createContext();\n\nconst useProfile = () => {\n  const context = useContext(ProfileContext);\n  if (!context) {\n    throw new Error(\"useProfile must be used within a ProfileProvider\");\n  }\n  return context;\n};\n\nconst ProfileProvider = ({ children }) => {\n  const { user } = useUser();\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const MAX_RETRIES = 3;\n  const RETRY_DELAY = 1000; // 1 second\n\n  // Create initial profile data\n  const createInitialProfile = (initialData = {}) => {\n    return {\n      name: initialData.name || user?.name || \"Anonymous User\",\n      email: initialData.email || user?.email || \"\",\n      title: initialData.title || \"No title provided\",\n      bio: initialData.bio || \"\",\n      location: initialData.location || \"\",\n      avatar: initialData.avatar || \"\",\n      phone: initialData.phone || \"\",\n      website: initialData.website || \"\",\n      skills: initialData.skills || [],\n      experience: initialData.experience || [],\n      education: initialData.education || [],\n      certifications: initialData.certifications || [],\n      languages: initialData.languages || [],\n      activities: initialData.activities || [],\n      stats: {\n        connections: initialData.stats?.connections || 0,\n        profileViews: initialData.stats?.profileViews || 0,\n        posts: initialData.stats?.posts || 0,\n        likes: initialData.stats?.likes || 0,\n      },\n      createdAt: initialData.createdAt || new Date().toISOString(),\n      updatedAt: initialData.updatedAt || new Date().toISOString(),\n    };\n  };\n\n  const fetchProfileById = useCallback(async (userId) => {\n    if (!userId) {\n      setError(\"No user ID provided\");\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Check for cached data first\n      const cachedData = localStorage.getItem(`profile_${userId}`);\n      if (cachedData) {\n        setProfile(JSON.parse(cachedData));\n      }\n\n      // Use /auth/me/ for the current user's profile instead of /auth/users/{id}/\n      const response = await api.get('/auth/me/');\n      \n      if (response) {\n        const profileData = createInitialProfile(response);\n        setProfile(profileData);\n        localStorage.setItem(`profile_${userId}`, JSON.stringify(profileData));\n        return profileData;\n      }\n      \n      // If no profile exists, we'll handle this case in the backend\n      // by returning a 404, which will be caught below\n      throw new Error('Profile not found');\n      \n    } catch (err) {\n      console.error(\"Error fetching profile:\", err);\n      setError(err.response?.data?.message || err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, [user]);\n\n  const updateProfile = useCallback(\n    async (updatedData) => {\n      if (!profile?.id) {\n        throw new Error(\"No profile to update\");\n      }\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Use the /auth/me/ endpoint for updating the current user's profile\n        const response = await api.patch('/auth/me/', updatedData);\n        const updatedProfile = createInitialProfile(response);\n        setProfile(updatedProfile);\n        localStorage.setItem(\n          `profile_${user.id}`,\n          JSON.stringify(updatedProfile)\n        );\n        return updatedProfile;\n      } catch (err) {\n        console.error(\"Error updating profile:\", err);\n        setError(err.response?.data?.message || err.message || 'Failed to update profile');\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [user?.id]\n  );\n  \n  // Upload profile picture\n  const uploadProfilePicture = useCallback(\n    async (file) => {\n      if (!profile?.id) {\n        throw new Error(\"No profile to update\");\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Upload the file using the storage service\n        const { url, path } = await storageService.uploadProfilePicture(file, profile.id);\n        \n        // Update the profile with the new avatar URL\n        return await updateProfile({ avatar: url });\n      } catch (err) {\n        console.error(\"Error uploading profile picture:\", err);\n        setError(err.response?.data?.message || err.message);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [profile, updateProfile]\n  );\n  \n  // Upload cover photo\n  const uploadCoverPhoto = useCallback(\n    async (file) => {\n      if (!profile?.id) {\n        throw new Error(\"No profile to update\");\n      }\n      \n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Upload the file using the storage service\n        const { url, path } = await storageService.uploadCoverPhoto(file, profile.id);\n        \n        // Update the profile with the new cover photo URL\n        return await updateProfile({ coverPhoto: url });\n      } catch (err) {\n        console.error(\"Error uploading cover photo:\", err);\n        setError(err.response?.data?.message || err.message);\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [profile, updateProfile]\n  );\n  \n  // Automatically fetch profile when user changes\n  useEffect(() => {\n    if (user?.id) {\n      fetchProfileById(user.id);\n    }\n  }, [user?.id]);\n\n  const value = {\n    profile,\n    loading,\n    error,\n    fetchProfileById,\n    updateProfile,\n    uploadProfilePicture,\n    uploadCoverPhoto,\n    retryCount,\n  };\n\n  return (\n    <ProfileContext.Provider value={value}>{children}</ProfileContext.Provider>\n  );\n};\n\nProfileProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { useProfile, ProfileProvider };\n","import { createContext, useContext, useState, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport authService from \"../../services/api/auth\";\nimport api from \"../../services/api/api\";\nimport { useProfile } from \"../profile\";\n\n// Create a Context for the user data\nconst UserContext = createContext();\n\n// UserContext provider component\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // User state initialized as null\n  const [isLoading, setIsLoading] = useState(true); // Loading state\n\n  useEffect(() => {\n    // Check if user is already authenticated\n    const checkAuth = async () => {\n      try {\n        if (authService.isAuthenticated()) {\n          const userData = await authService.getCurrentUser();\n          setUser(userData);\n        } else {\n          setUser(null);\n        }\n      } catch (error) {\n        console.error(\"Auth check failed:\", error);\n        setUser(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  // Sign up new user\n  const signUp = async (userData) => {\n    try {\n      const user = await authService.register(userData);\n      // After successful registration, log the user in\n      await signIn(userData.email, userData.password);\n      return user;\n    } catch (error) {\n      console.error(\"Sign up error:\", error);\n      throw error;\n    }\n  };\n\n  // Sign in user\n  const signIn = async (email, password) => {\n    try {\n      const userData = await authService.login(email, password);\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      console.error(\"Sign in error:\", error);\n      // Clear any existing tokens on failed login\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      setUser(null);\n      throw error;\n    }\n  };\n\n  // Sign out user\n  const signOut = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error(\"Sign out error:\", error);\n      // Continue with sign out even if the server call fails\n    } finally {\n      // Clear user state and tokens\n      setUser(null);\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      delete api.defaults.headers.common['Authorization'];\n    }\n  };\n\n  // Update user data\n  const updateUser = (userData) => {\n    setUser(prev => ({\n      ...prev,\n      ...userData\n    }));\n  };\n\n  const contextValue = {\n    user,\n    signUp,\n    signIn,\n    signOut,\n    updateUser,\n    isLoading,\n  };\n\n  return (\n    <UserContext.Provider value={contextValue}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// Custom hook to use the user context in any component\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error(\"useUser must be used within a UserProvider\");\n  }\n  return context;\n};\n\n// PropTypes validation for UserProvider\nUserProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { createContext, useContext, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Transition } from \"@headlessui/react\";\r\nimport {\r\n  CheckCircleIcon,\r\n  ExclamationCircleIcon,\r\n  InformationCircleIcon,\r\n  XMarkIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nconst ToastContext = createContext();\r\n\r\nexport const useToast = () => {\r\n  const context = useContext(ToastContext);\r\n  if (!context) {\r\n    throw new Error(\"useToast must be used within a ToastProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nconst Toast = ({ message, type, onClose }) => {\r\n  const icons = {\r\n    success: CheckCircleIcon,\r\n    error: ExclamationCircleIcon,\r\n    info: InformationCircleIcon,\r\n  };\r\n\r\n  const colors = {\r\n    success:\r\n      \"bg-green-50 text-green-800 dark:bg-green-900/20 dark:text-green-400\",\r\n    error: \"bg-red-50 text-red-800 dark:bg-red-900/20 dark:text-red-400\",\r\n    info: \"bg-blue-50 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400\",\r\n  };\r\n\r\n  const Icon = icons[type];\r\n\r\n  return (\r\n    <Transition\r\n      show={true}\r\n      enter=\"transform ease-out duration-300 transition\"\r\n      enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\r\n      enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\r\n      leave=\"transition ease-in duration-100\"\r\n      leaveFrom=\"opacity-100\"\r\n      leaveTo=\"opacity-0\"\r\n    >\r\n      <div className=\"fixed bottom-0 right-0 mb-4 mr-4 z-50\">\r\n        <div\r\n          className={`rounded-lg p-4 shadow-lg ${colors[type]} flex items-center`}\r\n        >\r\n          <Icon className=\"h-5 w-5 mr-2\" />\r\n          <p className=\"text-sm font-medium\">{message}</p>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"ml-4 text-gray-400 hover:text-gray-500 focus:outline-none\"\r\n          >\r\n            <XMarkIcon className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport const ToastProvider = ({ children }) => {\r\n  const [toast, setToast] = useState(null);\r\n\r\n  const showToast = useCallback((message, type = \"info\") => {\r\n    setToast({ message, type });\r\n    setTimeout(() => {\r\n      setToast(null);\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const hideToast = useCallback(() => {\r\n    setToast(null);\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ showToast, hideToast }}>\r\n      {children}\r\n      {toast && (\r\n        <Toast message={toast.message} type={toast.type} onClose={hideToast} />\r\n      )}\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nToastProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ToastProvider;\r\n","import axios from 'axios';\nimport { ENDPOINTS, buildUrl } from '../../config/api';\nimport { useAuthStore } from '../../stores/authStore';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: buildUrl(''),\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n  withCredentials: true,\n});\n\n// Request interceptor to add auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = useAuthStore.getState().accessToken;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    // If the error is 401 and we haven't already tried to refresh\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      if (originalRequest.url.includes(ENDPOINTS.AUTH.REFRESH)) {\n        // If we get 401 on refresh, clear auth and redirect to login\n        useAuthStore.getState().logout();\n        window.location.href = '/login';\n        return Promise.reject(error);\n      }\n\n      originalRequest._retry = true;\n      \n      try {\n        // Try to refresh the token\n        const refreshToken = useAuthStore.getState().refreshToken;\n        if (!refreshToken) {\n          throw new Error('No refresh token available');\n        }\n        \n        const response = await axios.post(\n          buildUrl(ENDPOINTS.AUTH.REFRESH),\n          { refresh: refreshToken }\n        );\n        \n        const { access } = response.data;\n        \n        // Update the auth store with the new token\n        useAuthStore.getState().setAccessToken(access);\n        \n        // Update the Authorization header\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        \n        // Retry the original request\n        return api(originalRequest);\n      } catch (error) {\n        // If refresh fails, clear auth and redirect to login\n        useAuthStore.getState().logout();\n        window.location.href = '/login';\n        return Promise.reject(error);\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API service methods\nexport const apiService = {\n  // Auth\n  login: (credentials) => api.post(ENDPOINTS.AUTH.LOGIN, credentials),\n  refreshToken: (refreshToken) => api.post(ENDPOINTS.AUTH.REFRESH, { refresh: refreshToken }),\n  \n  // Jobs\n  getJobs: (params = {}) => api.get(ENDPOINTS.JOBS.BASE, { params }),\n  getJob: (id) => api.get(`${ENDPOINTS.JOBS.BASE}${id}/`),\n  applyForJob: (jobId, data) => api.post(ENDPOINTS.JOBS.APPLY(jobId), data),\n  \n  // Network\n  getNetworkData: () => api.get(ENDPOINTS.NETWORK.BASE),\n  getConnections: () => api.get(ENDPOINTS.NETWORK.CONNECTIONS),\n  getConnectionRequests: () => api.get(ENDPOINTS.NETWORK.REQUESTS),\n  \n  // User\n  getProfile: () => api.get(ENDPOINTS.USERS.PROFILE),\n  updateProfile: (data) => api.patch(ENDPOINTS.USERS.UPDATE_PROFILE, data),\n  \n  // System\n  healthCheck: () => api.get(ENDPOINTS.SYSTEM.HEALTH),\n};\n\nexport default apiService;\n","import { create } from 'zustand';\nimport { apiService } from '../services/api/apiService';\n\n// Helper function to get stored auth data from localStorage\nconst getStoredAuth = () => {\n  if (typeof window === 'undefined') return null;\n  \n  const stored = localStorage.getItem('auth');\n  if (!stored) return null;\n  \n  try {\n    return JSON.parse(stored);\n  } catch (error) {\n    console.error('Error parsing stored auth data:', error);\n    return null;\n  }\n};\n\n// Create the auth store\nconst useAuthStore = create((set, get) => ({\n  // Initial state\n  user: null,\n  accessToken: null,\n  refreshToken: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  \n  // Initialize from localStorage\n  initialize: () => {\n    const stored = getStoredAuth();\n    if (stored) {\n      set({\n        user: stored.user,\n        accessToken: stored.accessToken,\n        refreshToken: stored.refreshToken,\n        isAuthenticated: !!stored.accessToken,\n      });\n    }\n  },\n  \n  // Login action\n  login: async (credentials) => {\n    set({ isLoading: true, error: null });\n    \n    try {\n      const response = await apiService.login(credentials);\n      const { access, refresh, user } = response.data;\n      \n      // Update state\n      set({\n        user,\n        accessToken: access,\n        refreshToken: refresh,\n        isAuthenticated: true,\n        isLoading: false,\n      });\n      \n      // Save to localStorage\n      localStorage.setItem('auth', JSON.stringify({\n        user,\n        accessToken: access,\n        refreshToken: refresh,\n      }));\n      \n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.detail || 'Login failed';\n      set({ error: errorMessage, isLoading: false });\n      return { success: false, error: errorMessage };\n    }\n  },\n  \n  // Logout action\n  logout: () => {\n    // Clear state\n    set({\n      user: null,\n      accessToken: null,\n      refreshToken: null,\n      isAuthenticated: false,\n    });\n    \n    // Clear localStorage\n    localStorage.removeItem('auth');\n    \n    // Return success status for better handling in components\n    return { success: true };\n  },\n  \n  // Set access token (used by the interceptor)\n  setAccessToken: (token) => {\n    set({ accessToken: token });\n    \n    // Update localStorage\n    const stored = getStoredAuth();\n    if (stored) {\n      stored.accessToken = token;\n      localStorage.setItem('auth', JSON.stringify(stored));\n    }\n  },\n  \n  // Check if the user is authenticated\n  checkAuth: async () => {\n    const { accessToken } = get();\n    if (!accessToken) return false;\n    \n    try {\n      // Try to fetch the user's profile to verify the token\n      await apiService.getProfile();\n      return true;\n    } catch (error) {\n      // If the token is invalid, log the user out\n      if (error.response?.status === 401) {\n        get().logout();\n      }\n      return false;\n    }\n  },\n}));\n\nexport { useAuthStore };\n","import { useAuthStore } from '../stores/authStore';\n\n/**\n * Custom hook that provides authentication state and methods\n * @returns {Object} Auth methods and state\n */\nconst useAuth = () => {\n  const {\n    user,\n    accessToken,\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    logout,\n    checkAuth,\n    refreshToken,\n  } = useAuthStore();\n\n  /**\n   * Login with email/username and password\n   * @param {string} username - User's username or email\n   * @param {string} password - User's password\n   * @returns {Promise<{success: boolean, error?: string}>} Login result\n   */\n  const signIn = async (username, password) => {\n    return await login({ username, password });\n  };\n\n  /**\n   * Sign up a new user\n   * @param {Object} userData - User registration data\n   * @returns {Promise<{success: boolean, error?: string}>} Signup result\n   */\n  const signUp = async (userData) => {\n    // TODO: Implement signup logic when the endpoint is available\n    console.log('Signup not implemented yet', userData);\n    return { success: false, error: 'Signup not implemented yet' };\n  };\n\n  /**\n   * Sign out the current user\n   */\n  const signOut = () => {\n    logout();\n  };\n\n  /**\n   * Update user profile\n   * @param {Object} profileData - Updated profile data\n   * @returns {Promise<{success: boolean, error?: string}>} Update result\n   */\n  const updateProfile = async (profileData) => {\n    // TODO: Implement profile update when the endpoint is available\n    console.log('Profile update not implemented yet', profileData);\n    return { success: false, error: 'Profile update not implemented yet' };\n  };\n\n  return {\n    // Auth state\n    user,\n    accessToken,\n    isAuthenticated,\n    isLoading,\n    error,\n    \n    // Auth methods\n    login: signIn,\n    signIn,\n    signUp,\n    logout: signOut,\n    signOut,\n    checkAuth,\n    refreshToken,\n    \n    // Profile methods (stubs for now)\n    updateUser: updateProfile,\n    updateProfile,\n    \n    // For compatibility with existing code\n    isInitializing: isLoading && !user,\n    isProfileLoading: false,\n  };\n};\n\nexport default useAuth;\n","// Environment configuration with fallbacks\r\nexport const config = {\r\n  apiUrl: import.meta.env.VITE_API_URL,\r\n  firebase: {\r\n    apiKey: import.meta.env.VITE_FIREBASE_API_KEY || \"placeholder-api-key\",\r\n    authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN || \"placeholder-auth-domain\",\r\n    projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID || \"placeholder-project-id\",\r\n    storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET || \"placeholder-storage-bucket\",\r\n    messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID || \"placeholder-sender-id\",\r\n    appId: import.meta.env.VITE_FIREBASE_APP_ID || \"placeholder-app-id\",\r\n  },\r\n  analytics: {\r\n    enabled: import.meta.env.VITE_ENABLE_ANALYTICS === \"true\",\r\n    trackingId: import.meta.env.VITE_GA_TRACKING_ID,\r\n  },\r\n  features: {\r\n    enablePayments: import.meta.env.VITE_ENABLE_PAYMENTS === \"true\",\r\n    enableNotifications: import.meta.env.VITE_ENABLE_NOTIFICATIONS !== \"false\",\r\n  },\r\n  seo: {\r\n    siteName: import.meta.env.VITE_SITE_NAME || \"CareerOpen\",\r\n    siteDescription:\r\n      import.meta.env.VITE_SITE_DESCRIPTION ||\r\n      \"Professional Job Board Platform\",\r\n    siteUrl: import.meta.env.VITE_SITE_URL || \"https://careeropen.com\",\r\n  },\r\n};\r\n\r\n// Check if we're in development mode\r\nexport const isDevelopment = import.meta.env.DEV;\r\n\r\n// Check if we're in production mode\r\nexport const isProduction = import.meta.env.PROD;\r\n\r\n// Validate configuration\r\nexport const validateConfig = () => {\r\n  const requiredFields = [\r\n    \"apiKey\",\r\n    \"authDomain\", \r\n    \"projectId\",\r\n    \"storageBucket\",\r\n    \"messagingSenderId\",\r\n    \"appId\"\r\n  ];\r\n\r\n  const missingFields = requiredFields.filter(field => \r\n    !config.firebase[field] || config.firebase[field].startsWith(\"placeholder\")\r\n  );\r\n\r\n  if (missingFields.length > 0 && isProduction) {\r\n    console.error(\"Missing Firebase configuration:\", missingFields);\r\n    throw new Error(`Missing required Firebase configuration: ${missingFields.join(\", \")}`);\r\n  }\r\n\r\n  return true;\r\n};\r\n","import { config } from \"../../config/env.js\";\r\n\r\nclass Analytics {\r\n  constructor() {\r\n    this.initialized = false;\r\n    this.queue = [];\r\n    this.config = config.analytics;\r\n  }\r\n\r\n  async initialize() {\r\n    if (this.initialized || !this.config.trackingId) return;\r\n\r\n    try {\r\n      // Load Google Analytics script\r\n      const script = document.createElement(\"script\");\r\n      script.src = `https://www.googletagmanager.com/gtag/js?id=${this.config.trackingId}`;\r\n      script.async = true;\r\n      document.head.appendChild(script);\r\n\r\n      // Initialize gtag\r\n      window.dataLayer = window.dataLayer || [];\r\n      window.gtag = function () {\r\n        window.dataLayer.push(arguments);\r\n      };\r\n      window.gtag(\"js\", new Date());\r\n      window.gtag(\"config\", this.config.trackingId);\r\n\r\n      this.initialized = true;\r\n\r\n      // Process queued events\r\n      this.queue.forEach((event) => this.track(event.name, event.params));\r\n      this.queue = [];\r\n    } catch (error) {\r\n      console.error(\"Failed to initialize analytics:\", error);\r\n    }\r\n  }\r\n\r\n  track(eventName, params = {}) {\r\n    if (!this.config.enabled) return;\r\n\r\n    try {\r\n      if (!this.initialized) {\r\n        this.queue.push({ name: eventName, params });\r\n        return;\r\n      }\r\n\r\n      window.gtag(\"event\", eventName, {\r\n        ...params,\r\n        timestamp: new Date().toISOString(),\r\n      });\r\n    } catch (error) {\r\n      console.error(`Failed to track event ${eventName}:`, error);\r\n    }\r\n  }\r\n\r\n  // Page view tracking\r\n  trackPageView(path, title) {\r\n    this.track(\"page_view\", {\r\n      page_path: path,\r\n      page_title: title,\r\n    });\r\n  }\r\n\r\n  // User interaction tracking\r\n  trackUserInteraction(action, category, label) {\r\n    this.track(\"user_interaction\", {\r\n      action,\r\n      category,\r\n      label,\r\n    });\r\n  }\r\n\r\n  // Error tracking\r\n  trackError(error, context = {}) {\r\n    this.track(\"error\", {\r\n      error_message: error.message,\r\n      error_stack: error.stack,\r\n      ...context,\r\n    });\r\n  }\r\n\r\n  // Performance tracking\r\n  trackPerformance(metric) {\r\n    this.track(\"performance\", metric);\r\n  }\r\n\r\n  // Job-specific tracking\r\n  trackJobView(jobId, jobTitle) {\r\n    this.trackUserInteraction(\"job_view\", \"jobs\", jobTitle);\r\n  }\r\n\r\n  trackJobApply(jobId, jobTitle) {\r\n    this.trackUserInteraction(\"job_apply\", \"jobs\", jobTitle);\r\n  }\r\n\r\n  trackProfileView(userId) {\r\n    this.trackUserInteraction(\"profile_view\", \"profiles\", userId);\r\n  }\r\n\r\n  trackSearch(query) {\r\n    this.trackUserInteraction(\"search\", \"search\", query);\r\n  }\r\n}\r\n\r\nexport const analytics = new Analytics();\r\nexport default analytics;\r\n","import React from \"react\";\r\n\r\nconst LoadingSpinner = ({\r\n  size = \"md\",\r\n  text = \"Loading...\",\r\n  fullScreen = false,\r\n}) => {\r\n  const sizeClasses = {\r\n    sm: \"h-4 w-4\",\r\n    md: \"h-8 w-8\",\r\n    lg: \"h-12 w-12\",\r\n    xl: \"h-16 w-16\",\r\n  };\r\n\r\n  const spinner = (\r\n    <div className=\"flex flex-col items-center justify-center\">\r\n      <div\r\n        className={`${sizeClasses[size]} animate-spin rounded-full border-4 border-gray-200 dark:border-gray-700 border-t-primary-600 dark:border-t-primary-400`}\r\n      />\r\n      {text && (\r\n        <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">{text}</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (fullScreen) {\r\n    return (\r\n      <div className=\"fixed inset-0 flex items-center justify-center bg-white dark:bg-gray-900 bg-opacity-75 dark:bg-opacity-75 z-50\">\r\n        {spinner}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return spinner;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport analytics from \"../../services/analytics\";\r\nimport {\r\n  ExclamationTriangleIcon,\r\n  ArrowPathIcon,\r\n  HomeIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null, errorInfo: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ errorInfo });\r\n    analytics.track(\"error_boundary\", {\r\n      error: error.message,\r\n      componentStack: errorInfo.componentStack,\r\n    });\r\n  }\r\n\r\n  handleRetry = () => {\r\n    this.setState({ hasError: false, error: null, errorInfo: null });\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center px-4 py-12 sm:px-6 lg:px-8\">\r\n          <div className=\"max-w-md w-full text-center\">\r\n            <div className=\"text-yellow-500 dark:text-yellow-400 mb-4\">\r\n              <ExclamationTriangleIcon className=\"h-12 w-12 mx-auto\" />\r\n            </div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n              Something went wrong\r\n            </h2>\r\n            <p className=\"text-gray-600 dark:text-gray-300 mb-6\">\r\n              We apologize for the inconvenience. Please try again or return to\r\n              the home page.\r\n            </p>\r\n            <div className=\"space-y-3\">\r\n              <button\r\n                onClick={this.handleRetry}\r\n                className=\"w-full inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                <ArrowPathIcon className=\"h-5 w-5 mr-2\" />\r\n                Try Again\r\n              </button>\r\n              <a\r\n                href=\"/\"\r\n                className=\"w-full inline-flex items-center justify-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                <HomeIcon className=\"h-5 w-5 mr-2\" />\r\n                Return Home\r\n              </a>\r\n            </div>\r\n            {process.env.NODE_ENV === \"development\" && (\r\n              <div className=\"mt-8 text-left\">\r\n                <details className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  <summary className=\"cursor-pointer hover:text-gray-700 dark:hover:text-gray-200\">\r\n                    Error Details\r\n                  </summary>\r\n                  <pre className=\"mt-2 p-4 bg-gray-50 dark:bg-gray-800 rounded-lg overflow-auto\">\r\n                    <code>{this.state.error?.toString()}</code>\r\n                    <br />\r\n                    <code>{this.state.errorInfo?.componentStack}</code>\r\n                  </pre>\r\n                </details>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import apiService from './apiService';\n\n/**\n * Performs a health check of the backend API\n * @returns {Promise<Object>} A promise that resolves to the health check data\n */\n/**\n * Performs a health check of the backend API\n * @returns {Promise<Object>} A promise that resolves to the health check data\n */\nexport const checkHealth = async () => {\n  try {\n    console.log('[healthService] Making health check request...');\n    // Use the healthCheck method from apiService\n    const response = await apiService.healthCheck();\n    console.log('[healthService] Health check response:', response);\n    \n    // The backend already returns the correct format, just forward it\n    return response.data;\n  } catch (error) {\n    console.error('Health check failed:', error);\n    \n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      return {\n        status: 'unhealthy',\n        timestamp: new Date().toISOString(),\n        error: {\n          status: error.response.status,\n          statusText: error.response.statusText,\n          message: error.response.data?.detail || 'API is not responding as expected',\n        }\n      };\n    } else if (error.request) {\n      // The request was made but no response was received\n      return {\n        status: 'unreachable',\n        timestamp: new Date().toISOString(),\n        error: {\n          message: 'Unable to reach the API server. Please check your network connection.',\n        }\n      };\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      return {\n        status: 'error',\n        timestamp: new Date().toISOString(),\n        error: {\n          message: error.message || 'An unexpected error occurred',\n        }\n      };\n    }\n  }\n};\n\n/**\n * Monitors the health of the backend API at regular intervals\n * @param {Function} onStatusChange - Callback function called when health status changes\n * @param {number} [interval=30000] - Health check interval in milliseconds (default: 30 seconds)\n * @returns {Function} A function to stop the health monitoring\n */\nexport const monitorHealth = (onStatusChange, interval = 30000) => {\n  let lastStatus = null;\n  \n  const checkAndNotify = async () => {\n    const health = await checkHealth();\n    \n    // Only notify if the status has changed\n    if (JSON.stringify(health) !== JSON.stringify(lastStatus)) {\n      onStatusChange(health);\n      lastStatus = health;\n    }\n  };\n  \n  // Initial check\n  checkAndNotify();\n  \n  // Set up interval for periodic checks\n  const healthCheckInterval = setInterval(checkAndNotify, interval);\n  \n  // Return a function to stop monitoring\n  return () => clearInterval(healthCheckInterval);\n};\n\n/**\n * Checks if the API is currently available\n * @returns {Promise<boolean>} A promise that resolves to true if the API is available\n */\nexport const isApiAvailable = async () => {\n  try {\n    const response = await apiService.get('/health/', { \n      timeout: 5000, // 5 second timeout\n      validateStatus: status => status < 500 // Consider any status < 500 as success\n    });\n    return response.status === 200;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default {\n  checkHealth,\n  monitorHealth,\n  isApiAvailable,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n  CheckCircleIcon, \n  ExclamationTriangleIcon, \n  ExclamationCircleIcon,\n  ArrowPathIcon\n} from '@heroicons/react/24/outline';\nimport { checkHealth } from '../../services/api/healthService';\n\n/**\n * HealthStatus component displays the current status of the backend API\n * @param {Object} props - Component props\n * @param {boolean} [props.showDetails=false] - Whether to show detailed status information\n * @param {string} [props.className] - Additional CSS classes\n * @returns {JSX.Element} The rendered component\n */\nconst HealthStatus = ({ showDetails = false, className = '' }) => {\n  const [status, setStatus] = useState({\n    status: 'checking',\n    timestamp: null,\n    details: {}\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Fetch health status when component mounts\n  useEffect(() => {\n    const fetchHealthStatus = async () => {\n      try {\n        setIsLoading(true);\n        console.log('Fetching health status...');\n        const healthData = await checkHealth();\n        console.log('Health data received:', healthData);\n        \n        // Ensure healthData is defined and has the expected structure\n        if (healthData && typeof healthData === 'object') {\n          // Handle case where the response is an Axios response object with data property\n          const responseData = healthData.data || healthData;\n          \n          // Ensure we have a valid status\n          const healthStatus = responseData.status || 'unknown';\n          const timestamp = responseData.timestamp || new Date().toISOString();\n          \n          console.log('Setting status with:', { status: healthStatus, timestamp, details: responseData });\n          \n          setStatus({\n            status: healthStatus,\n            timestamp,\n            details: responseData\n          });\n          setError(null);\n        } else {\n          // Handle case where healthData is not in the expected format\n          console.error('Unexpected health data format:', healthData);\n          setError('Invalid health data received');\n          setStatus({\n            status: 'error',\n            timestamp: new Date().toISOString(),\n            details: { error: 'Invalid health data format' }\n          });\n        }\n      } catch (err) {\n        console.error('Failed to check health status:', err);\n        setError('Failed to check system status');\n        setStatus({\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          details: { \n            error: err.message || 'Unknown error occurred',\n            stack: process.env.NODE_ENV === 'development' ? err.stack : undefined\n          }\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    // Initial check\n    fetchHealthStatus();\n    \n    // Set up polling every 30 seconds\n    const intervalId = setInterval(fetchHealthStatus, 30000);\n    \n    // Clean up interval on unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  \n  // Status indicator colors and icons\n  const statusConfig = {\n    healthy: {\n      icon: CheckCircleIcon,\n      iconColor: 'text-green-500',\n      bgColor: 'bg-green-100 dark:bg-green-900/30',\n      textColor: 'text-green-800 dark:text-green-200',\n      label: 'All systems operational'\n    },\n    unhealthy: {\n      icon: ExclamationTriangleIcon,\n      iconColor: 'text-yellow-500',\n      bgColor: 'bg-yellow-100 dark:bg-yellow-900/30',\n      textColor: 'text-yellow-800 dark:text-yellow-200',\n      label: 'Service disruption'\n    },\n    unreachable: {\n      icon: ExclamationCircleIcon,\n      iconColor: 'text-red-500',\n      bgColor: 'bg-red-100 dark:bg-red-900/30',\n      textColor: 'text-red-800 dark:text-red-200',\n      label: 'Service unavailable'\n    },\n    error: {\n      icon: ExclamationCircleIcon,\n      iconColor: 'text-red-500',\n      bgColor: 'bg-red-100 dark:bg-red-900/30',\n      textColor: 'text-red-800 dark:text-red-200',\n      label: 'Error checking status'\n    },\n    checking: {\n      icon: ArrowPathIcon,\n      iconColor: 'text-gray-500 animate-spin',\n      bgColor: 'bg-gray-100 dark:bg-gray-800',\n      textColor: 'text-gray-800 dark:text-gray-200',\n      label: 'Checking status...'\n    }\n  };\n  \n  const currentStatus = statusConfig[status.status] || statusConfig.error;\n  const StatusIcon = currentStatus.icon;\n  \n  // Format timestamp\n  const formatTimestamp = (timestamp) => {\n    if (!timestamp) return 'Just now';\n    \n    const date = new Date(timestamp);\n    return `Last checked: ${date.toLocaleString()}`;\n  };\n  \n  // Handle manual refresh\n  const handleRefresh = async () => {\n    try {\n      setIsLoading(true);\n      const healthData = await healthService.checkHealth();\n      setStatus({\n        status: healthData.status,\n        timestamp: healthData.timestamp,\n        details: healthData\n      });\n      setError(null);\n    } catch (err) {\n      console.error('Failed to refresh health status:', err);\n      setError('Failed to refresh status');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  return (\n    <div className={`rounded-md p-4 ${currentStatus.bgColor} ${className}`}>\n      <div className=\"flex items-start\">\n        <div className={`flex-shrink-0 ${currentStatus.iconColor} mt-0.5`}>\n          <StatusIcon className={`h-5 w-5 ${status.status === 'checking' ? 'animate-spin' : ''}`} />\n        </div>\n        <div className=\"ml-3 flex-1\">\n          <div className={`text-sm font-medium ${currentStatus.textColor}`}>\n            {currentStatus.label}\n            {status.timestamp && (\n              <span className=\"ml-2 text-xs opacity-80\">\n                {formatTimestamp(status.timestamp)}\n              </span>\n            )}\n          </div>\n          \n          {showDetails && status.details && (\n            <div className={`mt-2 text-sm ${currentStatus.textColor} opacity-90`}>\n              {status.status === 'healthy' ? (\n                <p>All services are operating normally.</p>\n              ) : status.status === 'unhealthy' ? (\n                <div>\n                  <p>We're experiencing issues with our service. Our team has been notified.</p>\n                  {status.details.error?.message && (\n                    <p className=\"mt-1 text-sm\">{status.details.error.message}</p>\n                  )}\n                </div>\n              ) : status.status === 'unreachable' ? (\n                <p>Unable to connect to the server. Please check your internet connection.</p>\n              ) : status.status === 'error' ? (\n                <p>An error occurred while checking the system status.</p>\n              ) : null}\n              \n              {status.details.version && (\n                <p className=\"mt-1 text-xs opacity-80\">\n                  API Version: {status.details.version}\n                </p>\n              )}\n            </div>\n          )}\n          \n          {error && (\n            <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">\n              {error}\n            </p>\n          )}\n        </div>\n        <div className=\"ml-4 flex-shrink-0\">\n          <button\n            type=\"button\"\n            onClick={handleRefresh}\n            disabled={isLoading}\n            className={`inline-flex items-center rounded-md text-sm font-medium ${currentStatus.textColor} hover:opacity-80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-${currentStatus.bgColor.split('-')[1]}-100 dark:focus:ring-offset-${currentStatus.bgColor.split('-')[1]}-900`}\n          >\n            <ArrowPathIcon \n              className={`h-4 w-4 mr-1 ${isLoading ? 'animate-spin' : ''}`} \n              aria-hidden=\"true\" \n            />\n            Refresh\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHealthStatus.propTypes = {\n  showDetails: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default HealthStatus;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport { PencilIcon, CheckIcon, XMarkIcon, UserCircleIcon } from '@heroicons/react/24/outline';\n\nconst UserProfile = () => {\n  const { userId } = useParams();\n  const { \n    user, \n    profile, \n    preferences, \n    updateProfile, \n    updatePreferences,\n    isLoading,\n    isProfileLoading\n  } = useAuth();\n  \n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    headline: '',\n    location: '',\n    bio: ''\n  });\n  const [isCurrentUser, setIsCurrentUser] = useState(false);\n\n  // Set form data when profile loads\n  useEffect(() => {\n    if (profile) {\n      setFormData({\n        firstName: profile.firstName || '',\n        lastName: profile.lastName || '',\n        headline: profile.headline || '',\n        location: profile.location || '',\n        bio: profile.bio || ''\n      });\n      \n      // Check if this is the current user's profile\n      setIsCurrentUser(user?.id === profile.userId);\n    }\n  }, [profile, user]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await updateProfile(formData);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n    }\n  };\n\n  if (isLoading || isProfileLoading) {\n    return <LoadingSpinner fullPage />;\n  }\n\n  if (!profile) {\n    return (\n      <div className=\"text-center py-12\">\n        <UserCircleIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No profile found</h3>\n        <p className=\"mt-1 text-sm text-gray-500\">The requested user profile could not be found.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-8\">\n      <div className=\"bg-white dark:bg-gray-800 shadow rounded-lg overflow-hidden\">\n        {/* Profile Header */}\n        <div className=\"px-6 py-8 bg-gradient-to-r from-blue-500 to-indigo-600 text-white\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <div className=\"h-20 w-20 rounded-full bg-white flex items-center justify-center text-2xl font-bold text-blue-600\">\n                {profile.firstName?.[0] || 'U'}\n              </div>\n              <div className=\"ml-6\">\n                <h1 className=\"text-2xl font-bold\">\n                  {profile.firstName} {profile.lastName}\n                </h1>\n                <p className=\"text-blue-100\">{profile.headline || 'No headline provided'}</p>\n                <p className=\"text-blue-100 text-sm mt-1\">\n                  {profile.location || 'Location not specified'}\n                </p>\n              </div>\n            </div>\n            {isCurrentUser && (\n              <button\n                onClick={() => setIsEditing(!isEditing)}\n                className=\"flex items-center px-4 py-2 bg-white text-blue-600 rounded-md hover:bg-blue-50 transition-colors\"\n              >\n                <PencilIcon className=\"h-4 w-4 mr-2\" />\n                {isEditing ? 'Cancel' : 'Edit Profile'}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Profile Content */}\n        <div className=\"px-6 py-8\">\n          {isEditing ? (\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n                <div>\n                  <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n                    First Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    id=\"firstName\"\n                    value={formData.firstName}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full border border-gray-300 dark:border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"lastName\"\n                    id=\"lastName\"\n                    value={formData.lastName}\n                    onChange={handleInputChange}\n                    className=\"mt-1 block w-full border border-gray-300 dark:border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label htmlFor=\"headline\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n                  Headline\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"headline\"\n                  id=\"headline\"\n                  value={formData.headline}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full border border-gray-300 dark:border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                  placeholder=\"E.g., Software Engineer at Company\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n                  Location\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"location\"\n                  id=\"location\"\n                  value={formData.location}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full border border-gray-300 dark:border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                  placeholder=\"City, Country\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\">\n                  About\n                </label>\n                <textarea\n                  id=\"bio\"\n                  name=\"bio\"\n                  rows={4}\n                  value={formData.bio}\n                  onChange={handleInputChange}\n                  className=\"mt-1 block w-full border border-gray-300 dark:border-gray-600 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\n                  placeholder=\"Tell us about yourself...\"\n                />\n              </div>\n\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => setIsEditing(false)}\n                  className=\"inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 shadow-sm text-sm font-medium rounded-md text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                >\n                  <XMarkIcon className=\"h-4 w-4 mr-2\" />\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                >\n                  <CheckIcon className=\"h-4 w-4 mr-2\" />\n                  Save Changes\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div className=\"space-y-6\">\n              <div>\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">About</h2>\n                <p className=\"mt-1 text-gray-600 dark:text-gray-300\">\n                  {profile.bio || 'No bio provided.'}\n                </p>\n              </div>\n\n              <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Contact Information</h2>\n                <dl className=\"mt-2 grid grid-cols-1 gap-x-4 gap-y-4 sm:grid-cols-2\">\n                  <div>\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Email</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 dark:text-white\">{user?.email || 'Not provided'}</dd>\n                  </div>\n                  <div>\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Location</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 dark:text-white\">\n                      {profile.location || 'Not specified'}\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n\n              <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Preferences</h2>\n                <dl className=\"mt-2 grid grid-cols-1 gap-x-4 gap-y-4 sm:grid-cols-2\">\n                  <div>\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Theme</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 dark:text-white capitalize\">\n                      {preferences.theme || 'system'}\n                    </dd>\n                  </div>\n                  <div>\n                    <dt className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Email Notifications</dt>\n                    <dd className=\"mt-1 text-sm text-gray-900 dark:text-white\">\n                      {preferences.emailNotifications ? 'Enabled' : 'Disabled'}\n                    </dd>\n                  </div>\n                </dl>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import { Navigate, useLocation } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\nimport LoadingSpinner from '../common/LoadingSpinner';\n\n/**\n * A protected route component that redirects to the login page if the user is not authenticated.\n * Shows a loading spinner while checking authentication status.\n * \n * @param {Object} props - Component props\n * @param {React.ReactNode} props.children - The child components to render if authenticated\n * @param {string} [props.redirectTo] - The path to redirect to if not authenticated (defaults to '/login')\n * @param {boolean} [props.requireAuth=true] - Whether authentication is required (defaults to true)\n * @returns {JSX.Element} The protected route component\n */\nconst ProtectedRoute = ({\n  children,\n  redirectTo = '/login',\n  requireAuth = true,\n}) => {\n  const { isAuthenticated, isLoading } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking auth status\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen w-full items-center justify-center\">\n        <LoadingSpinner size=\"xl\" />\n      </div>\n    );\n  }\n\n  // If authentication is required but user is not authenticated, redirect to login\n  if (requireAuth && !isAuthenticated) {\n    return <Navigate to={redirectTo} state={{ from: location }} replace />;\n  }\n\n  // If authentication is not required but user is authenticated, redirect to home\n  if (!requireAuth && isAuthenticated) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  // User is authenticated (or authentication is not required) and loading is complete\n  return children;\n};\n\nexport default ProtectedRoute;\n","import { Navigate, useLocation } from 'react-router-dom';\nimport useAuth from '../../hooks/useAuth';\nimport LoadingSpinner from '../common/LoadingSpinner';\n\n/**\n * A public route component that redirects to the home page if the user is already authenticated.\n * Shows a loading spinner while checking authentication status.\n * \n * @param {Object} props - Component props\n * @param {React.ReactNode} props.children - The child components to render if not authenticated\n * @param {string} [props.redirectTo] - The path to redirect to if authenticated (defaults to '/')\n * @returns {JSX.Element} The public route component\n */\nconst PublicRoute = ({\n  children,\n  redirectTo = '/',\n}) => {\n  const { isAuthenticated, isLoading } = useAuth();\n  const location = useLocation();\n  const from = location.state?.from?.pathname || redirectTo;\n\n  // Show loading spinner while checking auth status\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen w-full items-center justify-center\">\n        <LoadingSpinner size=\"xl\" />\n      </div>\n    );\n  }\n\n  // If user is already authenticated, redirect to the specified path or the previous location\n  if (isAuthenticated) {\n    return <Navigate to={from} replace />;\n  }\n\n  // User is not authenticated, render the public route\n  return children;\n};\n\nexport default PublicRoute;\n","import { Suspense, lazy, useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport PropTypes from 'prop-types';\n\n// Context Providers\nimport { ThemeProvider } from './context/ThemeContext';\nimport { Web3Provider } from './context/web3';\nimport { UserProvider } from './context/auth';\nimport { ProfileProvider } from './context/profile';\nimport { ToastProvider } from './context/toast';\n\n// Components\nimport NavigationBar from './components/layout/NavigationBar';\nimport Sidebar from './components/layout/Sidebar';\nimport LoadingSpinner from './components/common/LoadingSpinner';\nimport ErrorBoundary from './components/common/ErrorBoundary';\nimport HealthStatus from './components/common/HealthStatus';\nimport SEO from './components/common/SEO';\nimport UserProfile from './components/profile/UserProfile';\nimport ProtectedRoute from './components/auth/ProtectedRoute';\nimport PublicRoute from './components/auth/PublicRoute';\n\n// Services\nimport analytics from './services/analytics';\nimport { config } from './config/env';\n\n// Styles\nimport './index.css';\n\n// Lazy load components for better performance\nconst ProfilePage = lazy(() => import('./pages/ProfilePage'));\nconst JobList = lazy(() => import('./pages/JobList'));\nconst JobListPage = lazy(() => import('./pages/jobs/JobListPage'));\nconst JobDetail = lazy(() => import('./pages/JobDetail'));\nconst Feed = lazy(() => import('./pages/Feed'));\nconst MyNetwork = lazy(() => import('./pages/network/NetworkPage')); \nconst Messages = lazy(() => import('./pages/Messages'));\nconst SignUpPage = lazy(() => import('./pages/SignUpPage'));\nconst SignInPage = lazy(() => import('./pages/SignInPage'));\nconst NotificationPage = lazy(() => import('./pages/NotificationPage'));\nconst SubscriptionPayment = lazy(() => import('./pages/SubscriptionPayment'));\nconst SettingsPage = lazy(() => import('./pages/SettingsPage'));\nconst SavedJobsPage = lazy(() => import('./pages/SavedJobsPage'));\nconst JobApplicationsPage = lazy(() => import('./pages/JobApplicationsPage'));\nconst JobPostPage = lazy(() => import('./pages/JobPostPage'));\nconst APITest = lazy(() => import('./pages/APITest'));\n\nconst PublicLayout = lazy(() => import('./components/layout/PublicLayout'));\nconst AppLayout = lazy(() => import('./components/layout/AppLayout'));\n\nconst App = () => {\n  return (\n    <HelmetProvider>\n      <ThemeProvider>\n        <Web3Provider>\n          <UserProvider>\n            <ProfileProvider>\n              <ToastProvider>\n                <Router>\n                  <Suspense fallback={\n                    <div className=\"flex h-screen w-full items-center justify-center\">\n                      <LoadingSpinner size=\"xl\" />\n                    </div>\n                  }>\n                    <AppRoutes />\n                    <ToastContainer position=\"bottom-right\" autoClose={5000} />\n                  </Suspense>\n                </Router>\n              </ToastProvider>\n            </ProfileProvider>\n          </UserProvider>\n        </Web3Provider>\n      </ThemeProvider>\n    </HelmetProvider>\n  );\n};\n\n/**\n * Main application routes configuration.\n * Uses ProtectedRoute and PublicRoute to handle authentication.\n */\nconst AppRoutes = () => {\n  return (\n    <Routes>\n      {/* Public routes with PublicLayout */}\n      <Route element={\n        <PublicRoute>\n          <PublicLayout>\n            <Outlet />\n          </PublicLayout>\n        </PublicRoute>\n      }>\n        <Route path=\"signin\" element={<SignInPage />} />\n        <Route path=\"signup\" element={<SignUpPage />} />\n        <Route path=\"login\" element={<Navigate to=\"/signin\" replace />} />\n        <Route index element={<Navigate to=\"/signin\" replace />} />\n      </Route>\n\n      {/* Protected routes with AppLayout */}\n      <Route \n        element={\n          <ProtectedRoute>\n            <AppLayout />\n          </ProtectedRoute>\n        }\n      >\n        <Route index element={<Navigate to=\"/feed\" replace />} />\n        <Route path=\"feed\" element={<Feed />} />\n        <Route path=\"profile\" element={<ProfilePage />} />\n        <Route path=\"profile/:userId\" element={<UserProfile />} />\n        <Route path=\"jobs\" element={<JobListPage />} />\n        <Route path=\"jobs/:jobId\" element={<JobDetail />} />\n        <Route path=\"post-job\" element={<JobPostPage />} />\n        <Route path=\"network\" element={<MyNetwork />} />\n        <Route path=\"messages\" element={<Messages />} />\n        <Route path=\"notifications\" element={<NotificationPage />} />\n        <Route path=\"settings\" element={<SettingsPage />} />\n        <Route path=\"settings/subscription\" element={<SubscriptionPayment />} />\n        <Route path=\"saved-jobs\" element={<SavedJobsPage />} />\n        <Route path=\"my-applications\" element={<JobApplicationsPage />} />\n        <Route path=\"api-test\" element={<APITest />} />\n      </Route>\n\n      {/* Catch-all route - redirects to signin for unauthenticated users */}\n      <Route \n        path=\"*\" \n        element={\n          <PublicRoute>\n            <Navigate to=\"/signin\" replace />\n          </PublicRoute>\n        } \n      />\n    </Routes>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport { StrictMode } from \"react\";\r\nimport \"./index.css\";\r\nimport App from \"./App.jsx\";\r\nimport { UserProvider } from \"./context/auth\";\r\nimport { ProfileProvider } from \"./context/profile\";\r\n\r\n// MetaMask/Ethereum provider check\r\nconst initializeWeb3 = () => {\r\n  try {\r\n    if (typeof window !== \"undefined\") {\r\n      // Check if MetaMask is installed\r\n      if (window.ethereum && window.ethereum.isMetaMask) {\r\n        // MetaMask is installed\r\n        return true;\r\n      } else {\r\n        // MetaMask is not installed\r\n        window.ethereum = undefined;\r\n        // Only show warning in development\r\n        if (process.env.NODE_ENV === \"development\") {\r\n          console.info(\r\n            \"MetaMask is not installed. Web3 features are optional and not required for core functionality.\"\r\n          );\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.warn(\"Error initializing Web3:\", error);\r\n    return false;\r\n  }\r\n  return false;\r\n};\r\n\r\n// Initialize Web3\r\ninitializeWeb3();\r\n\r\n// Render the app\r\ncreateRoot(document.getElementById(\"root\")).render(\r\n  <StrictMode>\r\n    <UserProvider>\r\n      <ProfileProvider>\r\n        <App />\r\n      </ProfileProvider>\r\n    </UserProvider>\r\n  </StrictMode>\r\n);\r\n"],"file":"assets/index-DKFhryC_.js"}