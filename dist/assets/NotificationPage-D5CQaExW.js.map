{"version":3,"file":"NotificationPage-D5CQaExW.js","sources":["../../src/components/notifications/NotificationList.jsx","../../src/pages/NotificationPage.jsx"],"sourcesContent":["// components/NotificationList.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport analytics from \"../../services/analytics\";\r\nimport NotificationItem from \"./NotificationItem\";\r\nimport NotificationFilter from \"./NotificationFilter\";\r\nimport LoadingSpinner from \"../common/LoadingSpinner\";\r\nimport { BellIcon, XCircleIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst NotificationList = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeFilter, setActiveFilter] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // TODO: Implement actual API call\r\n      const response = await fetch(\"/api/notifications\");\r\n      const data = await response.json();\r\n      setNotifications(data);\r\n      analytics.track(\"view_notifications\");\r\n    } catch (err) {\r\n      setError(\"Failed to load notifications\");\r\n      analytics.track(\"notification_error\", { error: err.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMarkAsRead = async (notificationId) => {\r\n    try {\r\n      // TODO: Implement actual API call\r\n      await fetch(`/api/notifications/${notificationId}/read`, {\r\n        method: \"PUT\",\r\n      });\r\n      setNotifications((prev) =>\r\n        prev.map((notification) =>\r\n          notification.id === notificationId\r\n            ? { ...notification, read: true }\r\n            : notification\r\n        )\r\n      );\r\n      analytics.track(\"mark_notification_read\", { notificationId });\r\n    } catch (err) {\r\n      console.error(\"Failed to mark notification as read:\", err);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (filter) => {\r\n    setActiveFilter(filter);\r\n    analytics.track(\"notifications_filter\", { filter });\r\n  };\r\n\r\n  const filteredNotifications = notifications.filter((notification) => {\r\n    if (activeFilter === \"all\") return true;\r\n    return notification.type === activeFilter;\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center px-4\">\r\n        <div className=\"max-w-md w-full text-center\">\r\n          <div className=\"text-red-600 dark:text-red-400 mb-4\">\r\n            <XCircleIcon className=\"h-12 w-12 mx-auto\" />\r\n          </div>\r\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n            Error Loading Notifications\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{error}</p>\r\n          <button\r\n            onClick={fetchNotifications}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const unreadCount = notifications.filter((n) => !n.read).length;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"lg:grid lg:grid-cols-12 lg:gap-8\">\r\n          {/* Filter Sidebar */}\r\n          <div className=\"lg:col-span-3\">\r\n            <NotificationFilter\r\n              activeFilter={activeFilter}\r\n              onFilterChange={handleFilterChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Notifications List */}\r\n          <div className=\"mt-8 lg:mt-0 lg:col-span-9\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card overflow-hidden\">\r\n              <div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200 dark:border-gray-700\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                  Notifications\r\n                </h2>\r\n                {unreadCount > 0 && (\r\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">\r\n                    {unreadCount} unread\r\n                  </span>\r\n                )}\r\n              </div>\r\n              {filteredNotifications.length > 0 ? (\r\n                <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {filteredNotifications.map((notification) => (\r\n                    <NotificationItem\r\n                      key={notification.id}\r\n                      notification={notification}\r\n                      onMarkAsRead={handleMarkAsRead}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"p-8 text-center\">\r\n                  <BellIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n                    No notifications\r\n                  </h3>\r\n                  <p className=\"text-gray-500 dark:text-gray-400\">\r\n                    {activeFilter === \"all\"\r\n                      ? \"You're all caught up!\"\r\n                      : `No ${activeFilter} notifications`}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n","// pages/NotificationPage.jsx\r\nimport { useState, useEffect } from \"react\";\r\nimport NotificationList from \"../components/notifications/NotificationList\";\r\nimport NotificationFilter from \"../components/notifications/NotificationFilter\";\r\nimport Sidebar from \"../components/layout/Sidebar\";\r\n\r\n// Sample data for notifications\r\nconst sampleNotifications = [\r\n  {\r\n    id: 1,\r\n    message: \"You have a new connection request from Jane Doe\",\r\n    timestamp: \"2 hours ago\",\r\n    category: \"connection_requests\",\r\n  },\r\n  {\r\n    id: 2,\r\n    message: \"John has applied to your job listing\",\r\n    timestamp: \"1 day ago\",\r\n    category: \"job_updates\",\r\n  },\r\n  {\r\n    id: 3,\r\n    message: \"You received a new message from Sarah\",\r\n    timestamp: \"3 days ago\",\r\n    category: \"messages\",\r\n  },\r\n  {\r\n    id: 4,\r\n    message: \"Your job application was viewed by an employer\",\r\n    timestamp: \"5 days ago\",\r\n    category: \"job_updates\",\r\n  },\r\n];\r\n\r\nconst NotificationPage = () => {\r\n  const [selectedFilter, setSelectedFilter] = useState(\"all\");\r\n  const [filteredNotifications, setFilteredNotifications] =\r\n    useState(sampleNotifications);\r\n\r\n  useEffect(() => {\r\n    if (selectedFilter === \"all\") {\r\n      setFilteredNotifications(sampleNotifications);\r\n    } else {\r\n      setFilteredNotifications(\r\n        sampleNotifications.filter(\r\n          (notification) => notification.category === selectedFilter\r\n        )\r\n      );\r\n    }\r\n  }, [selectedFilter]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex\">\r\n      {/* Sidebar Navigation */}\r\n      <Sidebar />\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 ml-0 md:ml-64\">\r\n        <div className=\"container mx-auto py-8 px-4\">\r\n          <h1 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n            Notifications\r\n          </h1>\r\n\r\n          {/* Filter Component */}\r\n          <NotificationFilter\r\n            selectedFilter={selectedFilter}\r\n            onFilterChange={setSelectedFilter}\r\n          />\r\n\r\n          {/* Notifications List */}\r\n          <NotificationList notifications={filteredNotifications} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPage;\r\n"],"names":["NotificationList","notifications","setNotifications","useState","loading","setLoading","error","setError","activeFilter","setActiveFilter","useEffect","fetchNotifications","data","analytics","err","handleMarkAsRead","notificationId","prev","notification","handleFilterChange","filter","filteredNotifications","jsx","LoadingSpinner","jsxs","XCircleIcon","unreadCount","n","NotificationFilter","NotificationItem","BellIcon","sampleNotifications","NotificationPage","selectedFilter","setSelectedFilter","setFilteredNotifications","Sidebar"],"mappings":"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"}