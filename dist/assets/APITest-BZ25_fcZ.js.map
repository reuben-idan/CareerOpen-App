{"version":3,"file":"APITest-BZ25_fcZ.js","sources":["../../src/services/api/jobs.js","../../src/pages/APITest.jsx"],"sourcesContent":["import api from './api';\r\n\r\nconst jobsService = {\r\n  // Get all jobs\r\n  async getJobs(filters = {}) {\r\n    try {\r\n      const response = await api.get('/jobs/', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get a single job by ID\r\n  async getJobById(jobId) {\r\n    try {\r\n      const response = await api.get(`/jobs/${jobId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Create a new job\r\n  async createJob(jobData) {\r\n    try {\r\n      const response = await api.post('/jobs/', jobData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Update an existing job\r\n  async updateJob(jobId, jobData) {\r\n    try {\r\n      const response = await api.put(`/jobs/${jobId}/`, jobData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Delete a job\r\n  async deleteJob(jobId) {\r\n    try {\r\n      await api.delete(`/jobs/${jobId}/`);\r\n      return true;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Apply for a job\r\n  async applyForJob(jobId, applicationData) {\r\n    try {\r\n      const response = await api.post(`/jobs/${jobId}/apply/`, applicationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get applications for a job (employer only)\r\n  async getJobApplications(jobId) {\r\n    try {\r\n      const response = await api.get(`/jobs/${jobId}/applications/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Search jobs by query\r\n  async searchJobs(query) {\r\n    try {\r\n      const response = await api.get('/jobs/search/', { params: { q: query } });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get jobs by employer\r\n  async getJobsByEmployer(employerId) {\r\n    try {\r\n      const response = await api.get(`/jobs/employer/${employerId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  }\r\n};\r\n\r\nexport default jobsService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { authService, jobsService } from '../services/api';\r\n\r\nconst APITest = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  // Check if user is already logged in\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (authService.isAuthenticated()) {\r\n        try {\r\n          const userData = await authService.getCurrentUser();\r\n          setUser(userData);\r\n          // Load jobs if user is authenticated\r\n          loadJobs();\r\n        } catch (err) {\r\n          console.error('Failed to fetch user data:', err);\r\n          setError('Failed to load user data. Please log in again.');\r\n        }\r\n      }\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const userData = await authService.login(formData.email, formData.password);\r\n      setUser(userData);\r\n      // Load jobs after successful login\r\n      await loadJobs();\r\n    } catch (err) {\r\n      console.error('Login failed:', err);\r\n      setError('Login failed. Please check your credentials and try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n    setJobs([]);\r\n  };\r\n\r\n  const loadJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const jobsData = await jobsService.getJobs();\r\n      setJobs(jobsData);\r\n    } catch (err) {\r\n      console.error('Failed to load jobs:', err);\r\n      setError('Failed to load jobs. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">API Integration Test</h1>\r\n      \r\n      {!user ? (\r\n        <div className=\"max-w-md mx-auto bg-white p-6 rounded-lg shadow-md\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Login</h2>\r\n          {error && <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>}\r\n          \r\n          <form onSubmit={handleLogin} className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Logging in...' : 'Log in'}\r\n            </button>\r\n          </form>\r\n          \r\n          <div className=\"mt-4 text-sm text-gray-600\">\r\n            <p>Test credentials (if available):</p>\r\n            <p>Email: test@example.com</p>\r\n            <p>Password: testpass123</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"mb-6 p-4 bg-green-50 rounded-lg\">\r\n            <h2 className=\"text-lg font-semibold\">Welcome, {user.email}!</h2>\r\n            <p className=\"text-sm text-gray-600\">You are now logged in.</p>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"mt-2 px-4 py-1 bg-red-500 text-white rounded hover:bg-red-600 text-sm\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Jobs</h2>\r\n            {loading ? (\r\n              <p>Loading jobs...</p>\r\n            ) : jobs.length > 0 ? (\r\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {jobs.map((job) => (\r\n                  <div key={job.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                    <h3 className=\"font-semibold text-lg\">{job.title}</h3>\r\n                    <p className=\"text-gray-600 text-sm mt-1\">{job.company}</p>\r\n                    <p className=\"text-gray-700 mt-2\">{job.description?.substring(0, 100)}...</p>\r\n                    <div className=\"mt-3 flex justify-between items-center\">\r\n                      <span className=\"text-sm text-blue-600\">{job.job_type}</span>\r\n                      <span className=\"text-sm text-gray-500\">{job.location}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p>No jobs found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {error && !loading && (\r\n        <div className=\"mt-4 p-3 bg-red-100 text-red-700 rounded\">\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">API Endpoints</h2>\r\n        <ul className=\"list-disc pl-5 space-y-1 text-sm\">\r\n          <li><code>POST /api/token/</code> - Get JWT tokens</li>\r\n          <li><code>POST /api/token/refresh/</code> - Refresh access token</li>\r\n          <li><code>GET /api/users/me/</code> - Get current user</li>\r\n          <li><code>GET /api/jobs/</code> - List all jobs</li>\r\n          <li><code>POST /api/jobs/</code> - Create a new job</li>\r\n          <li><code>GET /api/jobs/&lt;id&gt;/</code> - Get job details</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APITest;\r\n"],"names":["jobsService","filters","api","error","_a","jobId","jobData","applicationData","query","employerId","APITest","user","setUser","useState","jobs","setJobs","loading","setLoading","setError","formData","setFormData","useEffect","authService","userData","loadJobs","err","handleInputChange","e","name","value","prev","handleLogin","handleLogout","jobsData","jsxs","jsx","job"],"mappings":"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"}