{"version":3,"file":"jobService-4-QWe7J2.js","sources":["../../src/services/authService.js","../../src/services/jobService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api';\r\n\r\n// Create axios instance with base URL and default headers\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include the auth token in requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle token refresh\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // If error is 401 and we haven't tried to refresh yet\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      \r\n      try {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        if (!refreshToken) {\r\n          // No refresh token, redirect to login\r\n          window.location.href = '/login';\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        // Try to refresh the token\r\n        const response = await axios.post(`${API_URL}/token/refresh/`, {\r\n          refresh: refreshToken,\r\n        });\r\n\r\n        const { access, refresh } = response.data;\r\n        \r\n        // Update tokens in storage\r\n        localStorage.setItem('accessToken', access);\r\n        if (refresh) {\r\n          localStorage.setItem('refreshToken', refresh);\r\n        }\r\n\r\n        // Update the auth header\r\n        originalRequest.headers.Authorization = `Bearer ${access}`;\r\n        \r\n        // Retry the original request\r\n        return api(originalRequest);\r\n      } catch (error) {\r\n        // If refresh fails, clear storage and redirect to login\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        window.location.href = '/login';\r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth service methods\r\nexport const authService = {\r\n  // Register a new user\r\n  register: async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register/', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Login user\r\n  login: async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login/', { email, password });\r\n      const { access, refresh, user } = response.data;\r\n      \r\n      // Store tokens in localStorage\r\n      localStorage.setItem('accessToken', access);\r\n      localStorage.setItem('refreshToken', refresh);\r\n      \r\n      // Store user data in localStorage\r\n      if (user) {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      }\r\n      \r\n      // Set default auth header\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${access}`;\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Logout user\r\n  logout: () => {\r\n    // Remove tokens from storage\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    \r\n    // Remove auth header\r\n    delete api.defaults.headers.common['Authorization'];\r\n    \r\n    // Redirect to login\r\n    window.location.href = '/login';\r\n  },\r\n\r\n  // Get current user profile\r\n  getCurrentUser: async () => {\r\n    try {\r\n      const response = await api.get('/auth/me/');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated: () => {\r\n    return !!localStorage.getItem('accessToken');\r\n  },\r\n\r\n  // Get auth header\r\n  getAuthHeader: () => {\r\n    const token = localStorage.getItem('accessToken');\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  },\r\n  // Export the API instance\r\n  api\r\n};\r\n\r\n// Export the auth service as default\r\nexport default authService;\r\n","import authService from './authService';\r\nconst { api } = authService;\r\n\r\nconst jobService = {\r\n  // Get all jobs with optional filters\r\n  getJobs: async (filters = {}) => {\r\n    try {\r\n      const response = await api.get('/jobs/', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get a single job by ID\r\n  getJobById: async (jobId) => {\r\n    try {\r\n      const response = await api.get(`/jobs/${jobId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Create a new job\r\n  createJob: async (jobData) => {\r\n    try {\r\n      const response = await api.post('/jobs/', jobData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Update a job\r\n  updateJob: async (jobId, jobData) => {\r\n    try {\r\n      const response = await api.put(`/jobs/${jobId}/`, jobData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Delete a job\r\n  deleteJob: async (jobId) => {\r\n    try {\r\n      await api.delete(`/jobs/${jobId}/`);\r\n      return true;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Search jobs\r\n  searchJobs: async (query, filters = {}) => {\r\n    try {\r\n      const response = await api.get('/jobs/search/', {\r\n        params: { search: query, ...filters },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Apply for a job\r\n  applyForJob: async (jobId, applicationData) => {\r\n    try {\r\n      const response = await api.post(`/jobs/${jobId}/apply/`, applicationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get user's job applications\r\n  getUserApplications: async () => {\r\n    try {\r\n      const response = await api.get('/jobs/applications/');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get application details\r\n  getApplicationDetails: async (applicationId) => {\r\n    try {\r\n      const response = await api.get(`/jobs/applications/${applicationId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Save/unsave a job\r\n  toggleSaveJob: async (jobId) => {\r\n    try {\r\n      const response = await api.post(`/jobs/${jobId}/save/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get saved jobs\r\n  getSavedJobs: async () => {\r\n    try {\r\n      const response = await api.get('/jobs/saved/');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n};\r\n\r\nexport default jobService;\r\n"],"names":["API_URL","api","axios","config","token","error","response","originalRequest","_a","refreshToken","access","refresh","authService","jobService","filters","jobId","jobData","query","applicationData","applicationId"],"mappings":"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"}