{"version":3,"file":"users-LFeX3K69.js","sources":["../../src/services/firebase/users.js"],"sourcesContent":["import { db } from \"../../config/firebase\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\n/**\r\n * Creates a new user profile in Firestore\r\n * @param {string} userId - The user's unique ID\r\n * @param {Object} userData - The user's profile data\r\n * @returns {Promise<void>}\r\n */\r\nexport const createUserProfile = async (userId, userData) => {\r\n  try {\r\n    const profileRef = doc(db, \"profiles\", userId);\r\n    const profileSnap = await getDoc(profileRef);\r\n    if (!profileSnap.exists()) {\r\n      // Try to migrate from 'users' collection if exists\r\n      const oldUserRef = doc(db, \"users\", userId);\r\n      const oldUserSnap = await getDoc(oldUserRef);\r\n      let dataToSave = { ...userData };\r\n      if (oldUserSnap.exists()) {\r\n        dataToSave = { ...oldUserSnap.data(), ...userData };\r\n      }\r\n      await setDoc(profileRef, {\r\n        ...dataToSave,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n      });\r\n    } else {\r\n      // Profile already exists, just update\r\n      await setDoc(\r\n        profileRef,\r\n        {\r\n          ...userData,\r\n          updatedAt: new Date().toISOString(),\r\n        },\r\n        { merge: true }\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating user profile:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Updates an existing user profile in Firestore\r\n * @param {string} userId - The user's unique ID\r\n * @param {Object} userData - The updated user profile data\r\n * @returns {Promise<void>}\r\n */\r\nexport const updateUserProfile = async (userId, userData) => {\r\n  try {\r\n    const userRef = doc(db, \"profiles\", userId); // Save to 'profiles' collection\r\n    await setDoc(\r\n      userRef,\r\n      {\r\n        ...userData,\r\n        updatedAt: new Date().toISOString(),\r\n      },\r\n      { merge: true }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error updating user profile:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Gets a user profile from Firestore\r\n * @param {string} userId - The user's unique ID\r\n * @returns {Promise<Object>} The user's profile data\r\n */\r\nexport const getUserProfile = async (userId) => {\r\n  try {\r\n    const userRef = doc(db, \"users\", userId);\r\n    const userDoc = await getDoc(userRef);\r\n\r\n    if (userDoc.exists()) {\r\n      return userDoc.data();\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error(\"Error getting user profile:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"names":["createUserProfile","async","userId","userData","profileRef","doc","db","getDoc","exists","setDoc","updatedAt","Date","toISOString","merge","oldUserRef","oldUserSnap","dataToSave","data","createdAt","error","console"],"mappings":"mQASY,MAACA,EAAoBC,MAAOC,EAAQC,KAC1C,IACF,MAAMC,EAAaC,EAAIC,EAAI,WAAYJ,GAEnC,UADsBK,EAAOH,IAChBI,eAeTC,EACJL,EACA,IACKD,EACHO,WAAW,IAAIC,MAAOC,eAExB,CAAEC,OAAO,QArBc,CAEzB,MAAMC,EAAaT,EAAIC,EAAI,QAASJ,GAC9Ba,QAAoBR,EAAOO,GAC7B,IAAAE,EAAa,IAAKb,GAClBY,EAAYP,WACdQ,EAAa,IAAKD,EAAYE,UAAWd,UAErCM,EAAOL,EAAY,IACpBY,EACHE,WAAW,IAAIP,MAAOC,cACtBF,WAAW,IAAIC,MAAOC,eAE9B,CAWG,OAAQO,GAED,MADEC,QAAAD,MAAM,+BAAgCA,GACxCA,CACP"}