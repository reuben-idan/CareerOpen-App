{"version":3,"file":"Feed-DqC3XlAT.js","sources":["../../src/components/jobs/JobFilter.jsx","../../src/components/jobs/JobStats.jsx","../../src/components/jobs/JobTrends.jsx","../../src/pages/Feed.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  FunnelIcon,\r\n  XMarkIcon,\r\n  AdjustmentsHorizontalIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobFilter = ({ onFilterChange, initialFilters = {} }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    jobType: initialFilters.jobType || \"\",\r\n    location: initialFilters.location || \"\",\r\n    experience: initialFilters.experience || \"\",\r\n    salary: initialFilters.salary || \"\",\r\n    datePosted: initialFilters.datePosted || \"\",\r\n    ...initialFilters,\r\n  });\r\n\r\n  const jobTypes = [\r\n    \"Full-time\",\r\n    \"Part-time\",\r\n    \"Contract\",\r\n    \"Temporary\",\r\n    \"Internship\",\r\n    \"Remote\",\r\n  ];\r\n\r\n  const experienceLevels = [\r\n    \"Entry Level\",\r\n    \"Junior\",\r\n    \"Mid Level\",\r\n    \"Senior\",\r\n    \"Lead\",\r\n    \"Manager\",\r\n    \"Executive\",\r\n  ];\r\n\r\n  const salaryRanges = [\"0-50k\", \"50k-100k\", \"100k-150k\", \"150k-200k\", \"200k+\"];\r\n\r\n  const datePostedOptions = [\r\n    \"Last 24 hours\",\r\n    \"Last 3 days\",\r\n    \"Last week\",\r\n    \"Last 2 weeks\",\r\n    \"Last month\",\r\n  ];\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    const newFilters = { ...filters, [key]: value };\r\n    setFilters(newFilters);\r\n    onFilterChange(newFilters);\r\n    analytics.track(\"filter_jobs\", { filter: key, value });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    const resetFilters = {\r\n      jobType: \"\",\r\n      location: \"\",\r\n      experience: \"\",\r\n      salary: \"\",\r\n      datePosted: \"\",\r\n    };\r\n    setFilters(resetFilters);\r\n    onFilterChange(resetFilters);\r\n    analytics.track(\"reset_filters\");\r\n  };\r\n\r\n  const activeFiltersCount = Object.values(filters).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n      >\r\n        <FunnelIcon className=\"h-5 w-5 mr-2\" />\r\n        Filters\r\n        {activeFiltersCount > 0 && (\r\n          <span className=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200\">\r\n            {activeFiltersCount}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"absolute z-10 mt-2 w-96 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5\">\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                Filter Jobs\r\n              </h3>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                className=\"text-gray-400 hover:text-gray-500 dark:hover:text-gray-300\"\r\n              >\r\n                <XMarkIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Job Type\r\n                </label>\r\n                <select\r\n                  value={filters.jobType}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"jobType\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Types</option>\r\n                  {jobTypes.map((type) => (\r\n                    <option key={type} value={type}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Location\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={filters.location}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"location\", e.target.value)\r\n                  }\r\n                  placeholder=\"Enter location\"\r\n                  className=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm dark:bg-gray-700 dark:text-white\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Experience Level\r\n                </label>\r\n                <select\r\n                  value={filters.experience}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"experience\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Levels</option>\r\n                  {experienceLevels.map((level) => (\r\n                    <option key={level} value={level}>\r\n                      {level}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Salary Range\r\n                </label>\r\n                <select\r\n                  value={filters.salary}\r\n                  onChange={(e) => handleFilterChange(\"salary\", e.target.value)}\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Ranges</option>\r\n                  {salaryRanges.map((range) => (\r\n                    <option key={range} value={range}>\r\n                      {range}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Date Posted\r\n                </label>\r\n                <select\r\n                  value={filters.datePosted}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"datePosted\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">Any Time</option>\r\n                  {datePostedOptions.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6 flex justify-end space-x-3\">\r\n              <button\r\n                onClick={handleReset}\r\n                className=\"inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  BriefcaseIcon,\r\n  CheckCircleIcon,\r\n  ClockIcon,\r\n  EyeIcon,\r\n  UserGroupIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobStats = ({ stats }) => {\r\n  // Provide default values if stats is undefined or incomplete\r\n  const {\r\n    totalJobs = 0,\r\n    activeApplications = 0,\r\n    savedJobs = 0,\r\n    views = 0,\r\n    connections = 0,\r\n  } = stats || {};\r\n\r\n  const statItems = [\r\n    {\r\n      name: \"Total Jobs\",\r\n      value: totalJobs,\r\n      icon: BriefcaseIcon,\r\n      color: \"text-blue-500\",\r\n      bgColor: \"bg-blue-100 dark:bg-blue-900\",\r\n    },\r\n    {\r\n      name: \"Active Applications\",\r\n      value: activeApplications,\r\n      icon: CheckCircleIcon,\r\n      color: \"text-green-500\",\r\n      bgColor: \"bg-green-100 dark:bg-green-900\",\r\n    },\r\n    {\r\n      name: \"Saved Jobs\",\r\n      value: savedJobs,\r\n      icon: ClockIcon,\r\n      color: \"text-yellow-500\",\r\n      bgColor: \"bg-yellow-100 dark:bg-yellow-900\",\r\n    },\r\n    {\r\n      name: \"Profile Views\",\r\n      value: views,\r\n      icon: EyeIcon,\r\n      color: \"text-purple-500\",\r\n      bgColor: \"bg-purple-100 dark:bg-purple-900\",\r\n    },\r\n    {\r\n      name: \"Connections\",\r\n      value: connections,\r\n      icon: UserGroupIcon,\r\n      color: \"text-pink-500\",\r\n      bgColor: \"bg-pink-100 dark:bg-pink-900\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card\">\r\n      <div className=\"p-6\">\r\n        <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-6\">\r\n          Your Job Stats\r\n        </h2>\r\n\r\n        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\r\n          {statItems.map((item) => (\r\n            <div\r\n              key={item.name}\r\n              className=\"relative overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 py-5 shadow sm:px-6 sm:py-6\"\r\n            >\r\n              <dt>\r\n                <div className={`absolute rounded-md p-3 ${item.bgColor}`}>\r\n                  <item.icon\r\n                    className={`h-6 w-6 ${item.color}`}\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </div>\r\n                <p className=\"ml-16 truncate text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  {item.name}\r\n                </p>\r\n              </dt>\r\n              <dd className=\"ml-16 flex items-baseline\">\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {item.value}\r\n                </p>\r\n              </dd>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <div className=\"relative\">\r\n            <div\r\n              className=\"absolute inset-0 flex items-center\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center\">\r\n              <span className=\"bg-white dark:bg-gray-800 px-3 text-sm text-gray-500 dark:text-gray-400\">\r\n                Last updated {new Date().toLocaleDateString()}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nJobStats.propTypes = {\r\n  stats: PropTypes.shape({\r\n    totalJobs: PropTypes.number,\r\n    activeApplications: PropTypes.number,\r\n    savedJobs: PropTypes.number,\r\n    views: PropTypes.number,\r\n    connections: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default JobStats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ChartBarIcon,\r\n  ArrowTrendingUpIcon,\r\n  ArrowTrendingDownIcon,\r\n  CalendarIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobTrends = ({ jobs, category }) => {\r\n  const [trendsData, setTrendsData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [timeRange, setTimeRange] = useState(\"3m\"); // 1m, 3m, 6m, 1y\r\n\r\n  useEffect(() => {\r\n    const processTrendsData = () => {\r\n      try {\r\n        setLoading(true);\r\n        const now = new Date();\r\n        const ranges = {\r\n          \"1m\": 30,\r\n          \"3m\": 90,\r\n          \"6m\": 180,\r\n          \"1y\": 365,\r\n        };\r\n\r\n        const days = ranges[timeRange];\r\n        const startDate = new Date(now);\r\n        startDate.setDate(startDate.getDate() - days);\r\n\r\n        // Group jobs by date\r\n        const jobsByDate = {};\r\n        const salaryByDate = {};\r\n        const skillsByDate = {};\r\n\r\n        jobs.forEach((job) => {\r\n          const jobDate = new Date(job.postedAt);\r\n          if (jobDate >= startDate) {\r\n            const dateKey = jobDate.toISOString().split(\"T\")[0];\r\n\r\n            // Count jobs\r\n            jobsByDate[dateKey] = (jobsByDate[dateKey] || 0) + 1;\r\n\r\n            // Track salaries\r\n            const salary = parseInt(job.salary.replace(/[^0-9]/g, \"\"), 10);\r\n            if (!isNaN(salary)) {\r\n              if (!salaryByDate[dateKey]) {\r\n                salaryByDate[dateKey] = { total: 0, count: 0 };\r\n              }\r\n              salaryByDate[dateKey].total += salary;\r\n              salaryByDate[dateKey].count += 1;\r\n            }\r\n\r\n            // Track skills\r\n            if (job.skills) {\r\n              job.skills.forEach((skill) => {\r\n                if (!skillsByDate[dateKey]) {\r\n                  skillsByDate[dateKey] = {};\r\n                }\r\n                skillsByDate[dateKey][skill] =\r\n                  (skillsByDate[dateKey][skill] || 0) + 1;\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        // Process data for chart\r\n        const dates = Object.keys(jobsByDate).sort();\r\n        const processedData = dates.map((date) => ({\r\n          date,\r\n          jobCount: jobsByDate[date],\r\n          averageSalary: Math.round(\r\n            salaryByDate[date].total / salaryByDate[date].count\r\n          ),\r\n          topSkills: Object.entries(skillsByDate[date] || {})\r\n            .sort(([, a], [, b]) => b - a)\r\n            .slice(0, 3)\r\n            .map(([skill]) => skill),\r\n        }));\r\n\r\n        // Calculate trends\r\n        const firstWeek = processedData.slice(0, 7);\r\n        const lastWeek = processedData.slice(-7);\r\n        const jobTrend = calculateTrend(\r\n          firstWeek.reduce((sum, day) => sum + day.jobCount, 0),\r\n          lastWeek.reduce((sum, day) => sum + day.jobCount, 0)\r\n        );\r\n        const salaryTrend = calculateTrend(\r\n          firstWeek.reduce((sum, day) => sum + day.averageSalary, 0) / 7,\r\n          lastWeek.reduce((sum, day) => sum + day.averageSalary, 0) / 7\r\n        );\r\n\r\n        setTrendsData({\r\n          dailyData: processedData,\r\n          trends: {\r\n            jobs: jobTrend,\r\n            salary: salaryTrend,\r\n          },\r\n        });\r\n\r\n        analytics.track(\"view_job_trends\", {\r\n          category,\r\n          timeRange,\r\n          jobCount: jobs.length,\r\n        });\r\n      } catch (err) {\r\n        setError(\"Failed to process trends data\");\r\n        analytics.track(\"error\", {\r\n          action: \"process_trends_data\",\r\n          error: err.message,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    processTrendsData();\r\n  }, [jobs, category, timeRange]);\r\n\r\n  const calculateTrend = (start, end) => {\r\n    const change = ((end - start) / start) * 100;\r\n    return {\r\n      value: change,\r\n      direction: change > 0 ? \"up\" : \"down\",\r\n      magnitude: Math.abs(change),\r\n    };\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n        <div className=\"animate-pulse space-y-4\">\r\n          <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\" />\r\n          <div className=\"space-y-3\">\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-5/6\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n        <div className=\"text-center\">\r\n          <ChartBarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n            {error}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card\">\r\n      <div className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            Job Market Trends\r\n          </h2>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <select\r\n              value={timeRange}\r\n              onChange={(e) => setTimeRange(e.target.value)}\r\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n            >\r\n              <option value=\"1m\">Last Month</option>\r\n              <option value=\"3m\">Last 3 Months</option>\r\n              <option value=\"6m\">Last 6 Months</option>\r\n              <option value=\"1y\">Last Year</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\r\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  Job Postings\r\n                </p>\r\n                <p className=\"mt-1 text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {trendsData.dailyData.reduce(\r\n                    (sum, day) => sum + day.jobCount,\r\n                    0\r\n                  )}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={`flex items-center ${\r\n                  trendsData.trends.jobs.direction === \"up\"\r\n                    ? \"text-green-500\"\r\n                    : \"text-red-500\"\r\n                }`}\r\n              >\r\n                {trendsData.trends.jobs.direction === \"up\" ? (\r\n                  <ArrowTrendingUpIcon className=\"h-5 w-5\" />\r\n                ) : (\r\n                  <ArrowTrendingDownIcon className=\"h-5 w-5\" />\r\n                )}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {Math.abs(trendsData.trends.jobs.value).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  Average Salary\r\n                </p>\r\n                <p className=\"mt-1 text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  $\r\n                  {Math.round(\r\n                    trendsData.dailyData.reduce(\r\n                      (sum, day) => sum + day.averageSalary,\r\n                      0\r\n                    ) / trendsData.dailyData.length\r\n                  ).toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={`flex items-center ${\r\n                  trendsData.trends.salary.direction === \"up\"\r\n                    ? \"text-green-500\"\r\n                    : \"text-red-500\"\r\n                }`}\r\n              >\r\n                {trendsData.trends.salary.direction === \"up\" ? (\r\n                  <ArrowTrendingUpIcon className=\"h-5 w-5\" />\r\n                ) : (\r\n                  <ArrowTrendingDownIcon className=\"h-5 w-5\" />\r\n                )}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {Math.abs(trendsData.trends.salary.value).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-4\">\r\n            Recent Trends\r\n          </h3>\r\n          <div className=\"space-y-4\">\r\n            {trendsData.dailyData.slice(-5).map((day) => (\r\n              <div\r\n                key={day.date}\r\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\r\n              >\r\n                <div className=\"flex items-center\">\r\n                  <CalendarIcon className=\"h-5 w-5 text-gray-400\" />\r\n                  <div className=\"ml-3\">\r\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {new Date(day.date).toLocaleDateString()}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                      {day.jobCount} jobs posted\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  <p>Top Skills:</p>\r\n                  <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                    {day.topSkills.map((skill) => (\r\n                      <span\r\n                        key={skill}\r\n                        className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200\"\r\n                      >\r\n                        {skill}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-sm text-gray-500 dark:text-gray-400\">\r\n          <p>\r\n            Based on {jobs.length} job listings. Trends are calculated by\r\n            comparing the first and last week of the selected period.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobTrends;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport analytics from \"../services/analytics\";\r\nimport JobCard from \"../components/jobs/JobCard\";\r\nimport JobSearch from \"../components/jobs/JobSearch\";\r\nimport JobFilter from \"../components/jobs/JobFilter\";\r\nimport JobStats from \"../components/jobs/JobStats\";\r\nimport JobTrends from \"../components/jobs/JobTrends\";\r\nimport LoadingSpinner from \"../components/common/LoadingSpinner\";\r\nimport Sidebar from \"../components/layout/Sidebar\";\r\nimport { EmployerLogos, PeopleGrid, GlassCard } from \"../components\";\r\nimport { BriefcaseIcon, MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst Feed = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filters, setFilters] = useState({\r\n    location: \"\",\r\n    type: \"\",\r\n    experience: \"\",\r\n    salary: \"\",\r\n  });\r\n\r\n  // Mock stats data\r\n  const [stats, setStats] = useState({\r\n    totalJobs: 0,\r\n    activeApplications: 0,\r\n    savedJobs: 0,\r\n    views: 0,\r\n    connections: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Mock job data\r\n      const mockJobs = [\r\n        {\r\n          id: 1,\r\n          title: \"Senior React Developer\",\r\n          company: \"Tech Corp\",\r\n          location: \"San Francisco, CA\",\r\n          type: \"Full-time\",\r\n          salary: \"$120,000 - $150,000\",\r\n          postedAt: \"2024-01-15\",\r\n          description:\r\n            \"We're looking for a senior React developer to join our team...\",\r\n          requirements: {\r\n            experience: \"5+ years\",\r\n            education: \"Bachelor's degree\",\r\n          },\r\n          skills: [\"React\", \"TypeScript\", \"Node.js\"],\r\n          benefits: {\r\n            healthInsurance: true,\r\n            remoteWork: true,\r\n          },\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Frontend Engineer\",\r\n          company: \"Startup Inc\",\r\n          location: \"Remote\",\r\n          type: \"Full-time\",\r\n          salary: \"$90,000 - $120,000\",\r\n          postedAt: \"2024-01-14\",\r\n          description:\r\n            \"Join our fast-growing startup as a frontend engineer...\",\r\n          requirements: {\r\n            experience: \"3+ years\",\r\n            education: \"Bachelor's degree\",\r\n          },\r\n          skills: [\"JavaScript\", \"React\", \"CSS\"],\r\n          benefits: {\r\n            healthInsurance: true,\r\n            remoteWork: true,\r\n          },\r\n        },\r\n      ];\r\n\r\n      setJobs(mockJobs);\r\n      analytics.track(\"view_job_feed\", { jobCount: mockJobs.length });\r\n    } catch (err) {\r\n      setError(\"Failed to load jobs\");\r\n      analytics.track(\"job_feed_error\", { error: err.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      // Mock stats data\r\n      const mockStats = {\r\n        totalJobs: 1250,\r\n        activeApplications: 8,\r\n        savedJobs: 23,\r\n        views: 156,\r\n        connections: 342,\r\n      };\r\n      setStats(mockStats);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch stats:\", err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    analytics.track(\"search_jobs\", { query });\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    analytics.track(\"filter_jobs\", { filters: newFilters });\r\n  };\r\n\r\n  const handleSaveJob = (jobId) => {\r\n    analytics.track(\"save_job\", { jobId });\r\n    // TODO: Implement save job functionality\r\n  };\r\n\r\n  const handleApplyJob = (jobId) => {\r\n    analytics.track(\"apply_job\", { jobId });\r\n    // TODO: Implement apply job functionality\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 px-4\">\r\n        <GlassCard className=\"max-w-md w-full text-center\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            Error Loading Jobs\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-4\">{error}</p>\r\n          <button \r\n            onClick={fetchJobs} \r\n            className=\"px-6 py-3 rounded-xl font-medium bg-blue-600 hover:bg-blue-700 text-white shadow-lg hover:shadow-xl transition-all duration-200\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </GlassCard>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 ml-0 md:ml-64\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          {/* Header Section */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-6\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center space-x-3 mb-4\">\r\n                  <div className=\"p-3 bg-blue-600 rounded-2xl\">\r\n                    <BriefcaseIcon className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <div>\r\n                    <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-2\">\r\n                      Job Feed\r\n                    </h1>\r\n                    <p className=\"text-xl text-gray-600\">\r\n                      Discover your next career opportunity\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Search Bar */}\r\n                <div className=\"relative max-w-2xl\">\r\n                  <MagnifyingGlassIcon className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-6 w-6 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => handleSearch(e.target.value)}\r\n                    placeholder=\"Search for jobs, companies, or skills...\"\r\n                    className=\"w-full pl-12 pr-4 py-4 text-lg border-0 rounded-2xl shadow-lg bg-white/80 backdrop-blur-sm focus:ring-2 focus:ring-blue-500 focus:outline-none\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {/* People Grid */}\r\n              <div className=\"hidden lg:block\">\r\n                <PeopleGrid maxImages={4} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Employer Logos */}\r\n          <div className=\"mb-8\">\r\n            <p className=\"text-center text-gray-600 mb-4\">Trusted by top companies worldwide</p>\r\n            <EmployerLogos />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n            {/* Main Content */}\r\n            <div className=\"lg:col-span-3 space-y-6\">\r\n              {/* Search and Filter */}\r\n              <GlassCard>\r\n                <JobSearch onSearch={handleSearch} />\r\n                <JobFilter\r\n                  filters={filters}\r\n                  onFilterChange={handleFilterChange}\r\n                />\r\n              </GlassCard>\r\n\r\n              {/* Job Stats */}\r\n              <JobStats stats={stats} />\r\n\r\n              {/* Job Listings */}\r\n              <div className=\"space-y-4\">\r\n                {jobs.map((job) => (\r\n                  <JobCard\r\n                    key={job.id}\r\n                    job={job}\r\n                    onSave={handleSaveJob}\r\n                    onApply={handleApplyJob}\r\n                  />\r\n                ))}\r\n              </div>\r\n\r\n              {jobs.length === 0 && (\r\n                <GlassCard className=\"text-center py-12\">\r\n                  <div className=\"max-w-md mx-auto\">\r\n                    <div className=\"text-6xl mb-4\">🔍</div>\r\n                    <h3 className=\"text-2xl font-semibold text-gray-900 mb-2\">\r\n                      No jobs found\r\n                    </h3>\r\n                    <p className=\"text-gray-600 mb-6\">\r\n                      Try adjusting your search criteria or filters.\r\n                    </p>\r\n                    <button\r\n                      onClick={() => {\r\n                        setSearchQuery(\"\");\r\n                        setFilters({\r\n                          location: \"\",\r\n                          type: \"\",\r\n                          experience: \"\",\r\n                          salary: \"\",\r\n                        });\r\n                      }}\r\n                      className=\"bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                      Clear Filters\r\n                    </button>\r\n                  </div>\r\n                </GlassCard>\r\n              )}\r\n            </div>\r\n\r\n            {/* Sidebar */}\r\n            <div className=\"space-y-6\">\r\n              {/* Job Trends */}\r\n              <JobTrends jobs={jobs} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n"],"names":["JobFilter","onFilterChange","initialFilters","isOpen","setIsOpen","useState","filters","setFilters","jobTypes","experienceLevels","salaryRanges","datePostedOptions","handleFilterChange","key","value","newFilters","analytics","handleReset","resetFilters","activeFiltersCount","jsxs","jsx","FunnelIcon","XMarkIcon","e","type","level","range","option","JobStats","stats","totalJobs","activeApplications","savedJobs","views","connections","statItems","BriefcaseIcon","CheckCircleIcon","ClockIcon","EyeIcon","UserGroupIcon","item","PropTypes","JobTrends","jobs","category","trendsData","setTrendsData","loading","setLoading","error","setError","timeRange","setTimeRange","useEffect","now","days","startDate","jobsByDate","salaryByDate","skillsByDate","job","jobDate","dateKey","salary","skill","processedData","date","a","b","firstWeek","lastWeek","jobTrend","calculateTrend","sum","day","salaryTrend","err","start","end","change","ChartBarIcon","ArrowTrendingUpIcon","ArrowTrendingDownIcon","CalendarIcon","Feed","setJobs","searchQuery","setSearchQuery","setStats","fetchJobs","fetchStats","mockJobs","handleSearch","query","handleSaveJob","jobId","handleApplyJob","LoadingSpinner","GlassCard","Sidebar","MagnifyingGlassIcon","PeopleGrid","EmployerLogos","JobSearch","JobCard"],"mappings":"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"}