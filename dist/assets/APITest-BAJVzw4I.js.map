{"version":3,"file":"APITest-BAJVzw4I.js","sources":["../../src/services/api/jobs.js","../../src/pages/APITest.jsx"],"sourcesContent":["import api from './api';\r\n\r\nconst jobsService = {\r\n  // Get all jobs\r\n  async getJobs(filters = {}) {\r\n    try {\r\n      const response = await api.get('/jobs/', { params: filters });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get a single job by ID\r\n  async getJobById(jobId) {\r\n    try {\r\n      const response = await api.get(`/jobs/${jobId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Create a new job\r\n  async createJob(jobData) {\r\n    try {\r\n      const response = await api.post('/jobs/', jobData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Update an existing job\r\n  async updateJob(jobId, jobData) {\r\n    try {\r\n      const response = await api.put(`/jobs/${jobId}/`, jobData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Delete a job\r\n  async deleteJob(jobId) {\r\n    try {\r\n      await api.delete(`/jobs/${jobId}/`);\r\n      return true;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Apply for a job\r\n  async applyForJob(jobId, applicationData) {\r\n    try {\r\n      const response = await api.post(`/jobs/${jobId}/apply/`, applicationData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get applications for a job (employer only)\r\n  async getJobApplications(jobId) {\r\n    try {\r\n      const response = await api.get(`/jobs/${jobId}/applications/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Search jobs by query\r\n  async searchJobs(query) {\r\n    try {\r\n      const response = await api.get('/jobs/search/', { params: { q: query } });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  },\r\n\r\n  // Get jobs by employer\r\n  async getJobsByEmployer(employerId) {\r\n    try {\r\n      const response = await api.get(`/jobs/employer/${employerId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error.message;\r\n    }\r\n  }\r\n};\r\n\r\nexport default jobsService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { authService, jobsService } from '../services/api';\r\n\r\nconst APITest = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  // Check if user is already logged in\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (authService.isAuthenticated()) {\r\n        try {\r\n          const userData = await authService.getCurrentUser();\r\n          setUser(userData);\r\n          // Load jobs if user is authenticated\r\n          loadJobs();\r\n        } catch (err) {\r\n          console.error('Failed to fetch user data:', err);\r\n          setError('Failed to load user data. Please log in again.');\r\n        }\r\n      }\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const userData = await authService.login(formData.email, formData.password);\r\n      setUser(userData);\r\n      // Load jobs after successful login\r\n      await loadJobs();\r\n    } catch (err) {\r\n      console.error('Login failed:', err);\r\n      setError('Login failed. Please check your credentials and try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    authService.logout();\r\n    setUser(null);\r\n    setJobs([]);\r\n  };\r\n\r\n  const loadJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const jobsData = await jobsService.getJobs();\r\n      setJobs(jobsData);\r\n    } catch (err) {\r\n      console.error('Failed to load jobs:', err);\r\n      setError('Failed to load jobs. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">API Integration Test</h1>\r\n      \r\n      {!user ? (\r\n        <div className=\"max-w-md mx-auto bg-white p-6 rounded-lg shadow-md\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Login</h2>\r\n          {error && <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>}\r\n          \r\n          <form onSubmit={handleLogin} className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading}\r\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50\"\r\n            >\r\n              {loading ? 'Logging in...' : 'Log in'}\r\n            </button>\r\n          </form>\r\n          \r\n          <div className=\"mt-4 text-sm text-gray-600\">\r\n            <p>Test credentials (if available):</p>\r\n            <p>Email: test@example.com</p>\r\n            <p>Password: testpass123</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"mb-6 p-4 bg-green-50 rounded-lg\">\r\n            <h2 className=\"text-lg font-semibold\">Welcome, {user.email}!</h2>\r\n            <p className=\"text-sm text-gray-600\">You are now logged in.</p>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"mt-2 px-4 py-1 bg-red-500 text-white rounded hover:bg-red-600 text-sm\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"mt-8\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Jobs</h2>\r\n            {loading ? (\r\n              <p>Loading jobs...</p>\r\n            ) : jobs.length > 0 ? (\r\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {jobs.map((job) => (\r\n                  <div key={job.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                    <h3 className=\"font-semibold text-lg\">{job.title}</h3>\r\n                    <p className=\"text-gray-600 text-sm mt-1\">{job.company}</p>\r\n                    <p className=\"text-gray-700 mt-2\">{job.description?.substring(0, 100)}...</p>\r\n                    <div className=\"mt-3 flex justify-between items-center\">\r\n                      <span className=\"text-sm text-blue-600\">{job.job_type}</span>\r\n                      <span className=\"text-sm text-gray-500\">{job.location}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <p>No jobs found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {error && !loading && (\r\n        <div className=\"mt-4 p-3 bg-red-100 text-red-700 rounded\">\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\r\n        <h2 className=\"text-lg font-semibold mb-2\">API Endpoints</h2>\r\n        <ul className=\"list-disc pl-5 space-y-1 text-sm\">\r\n          <li><code>POST /api/token/</code> - Get JWT tokens</li>\r\n          <li><code>POST /api/token/refresh/</code> - Refresh access token</li>\r\n          <li><code>GET /api/users/me/</code> - Get current user</li>\r\n          <li><code>GET /api/jobs/</code> - List all jobs</li>\r\n          <li><code>POST /api/jobs/</code> - Create a new job</li>\r\n          <li><code>GET /api/jobs/&lt;id&gt;/</code> - Get job details</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default APITest;\r\n"],"names":["jobsService","getJobs","filters","api","get","params","data","error","_a","response","message","getJobById","jobId","createJob","jobData","post","updateJob","put","deleteJob","delete","applyForJob","applicationData","getJobApplications","searchJobs","query","q","getJobsByEmployer","employerId","APITest","user","setUser","useState","jobs","setJobs","loading","setLoading","setError","formData","setFormData","email","password","useEffect","async","authService","isAuthenticated","userData","getCurrentUser","loadJobs","err","console","checkAuth","handleInputChange","e","name","value","target","prev","jobsData","jsxs","className","children","jsx","onClick","logout","length","map","job","title","company","description","substring","job_type","location","id","onSubmit","preventDefault","login","type","onChange","required","disabled"],"mappings":"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"}