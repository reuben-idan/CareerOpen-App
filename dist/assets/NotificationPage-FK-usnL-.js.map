{"version":3,"file":"NotificationPage-FK-usnL-.js","sources":["../../src/components/notifications/NotificationList.jsx","../../src/pages/NotificationPage.jsx"],"sourcesContent":["// components/NotificationList.jsx\nimport React, { useState, useEffect } from \"react\";\nimport analytics from \"../../services/analytics\";\nimport NotificationItem from \"./NotificationItem\";\nimport NotificationFilter from \"./NotificationFilter\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { BellIcon, XCircleIcon } from \"@heroicons/react/24/outline\";\n\nconst NotificationList = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeFilter, setActiveFilter] = useState(\"all\");\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      // TODO: Implement actual API call\n      const response = await fetch(\"/api/notifications\");\n      const data = await response.json();\n      setNotifications(data);\n      analytics.track(\"view_notifications\");\n    } catch (err) {\n      setError(\"Failed to load notifications\");\n      analytics.track(\"notification_error\", { error: err.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMarkAsRead = async (notificationId) => {\n    try {\n      // TODO: Implement actual API call\n      await fetch(`/api/notifications/${notificationId}/read`, {\n        method: \"PUT\",\n      });\n      setNotifications((prev) =>\n        prev.map((notification) =>\n          notification.id === notificationId\n            ? { ...notification, read: true }\n            : notification\n        )\n      );\n      analytics.track(\"mark_notification_read\", { notificationId });\n    } catch (err) {\n      console.error(\"Failed to mark notification as read:\", err);\n    }\n  };\n\n  const handleFilterChange = (filter) => {\n    setActiveFilter(filter);\n    analytics.track(\"notifications_filter\", { filter });\n  };\n\n  const filteredNotifications = notifications.filter((notification) => {\n    if (activeFilter === \"all\") return true;\n    return notification.type === activeFilter;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center px-4\">\n        <div className=\"max-w-md w-full text-center\">\n          <div className=\"text-red-600 dark:text-red-400 mb-4\">\n            <XCircleIcon className=\"h-12 w-12 mx-auto\" />\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n            Error Loading Notifications\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{error}</p>\n          <button\n            onClick={fetchNotifications}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const unreadCount = notifications.filter((n) => !n.read).length;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"lg:grid lg:grid-cols-12 lg:gap-8\">\n          {/* Filter Sidebar */}\n          <div className=\"lg:col-span-3\">\n            <NotificationFilter\n              activeFilter={activeFilter}\n              onFilterChange={handleFilterChange}\n            />\n          </div>\n\n          {/* Notifications List */}\n          <div className=\"mt-8 lg:mt-0 lg:col-span-9\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card overflow-hidden\">\n              <div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Notifications\n                </h2>\n                {unreadCount > 0 && (\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">\n                    {unreadCount} unread\n                  </span>\n                )}\n              </div>\n              {filteredNotifications.length > 0 ? (\n                <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n                  {filteredNotifications.map((notification) => (\n                    <NotificationItem\n                      key={notification.id}\n                      notification={notification}\n                      onMarkAsRead={handleMarkAsRead}\n                    />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"p-8 text-center\">\n                  <BellIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                    No notifications\n                  </h3>\n                  <p className=\"text-gray-500 dark:text-gray-400\">\n                    {activeFilter === \"all\"\n                      ? \"You're all caught up!\"\n                      : `No ${activeFilter} notifications`}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","// pages/NotificationPage.jsx\nimport { useState, useEffect } from \"react\";\nimport NotificationList from \"../components/notifications/NotificationList\";\nimport NotificationFilter from \"../components/notifications/NotificationFilter\";\nimport Sidebar from \"../components/layout/Sidebar\";\n\n// Sample data for notifications\nconst sampleNotifications = [\n  {\n    id: 1,\n    message: \"You have a new connection request from Jane Doe\",\n    timestamp: \"2 hours ago\",\n    category: \"connection_requests\",\n  },\n  {\n    id: 2,\n    message: \"John has applied to your job listing\",\n    timestamp: \"1 day ago\",\n    category: \"job_updates\",\n  },\n  {\n    id: 3,\n    message: \"You received a new message from Sarah\",\n    timestamp: \"3 days ago\",\n    category: \"messages\",\n  },\n  {\n    id: 4,\n    message: \"Your job application was viewed by an employer\",\n    timestamp: \"5 days ago\",\n    category: \"job_updates\",\n  },\n];\n\nconst NotificationPage = () => {\n  const [selectedFilter, setSelectedFilter] = useState(\"all\");\n  const [filteredNotifications, setFilteredNotifications] =\n    useState(sampleNotifications);\n\n  useEffect(() => {\n    if (selectedFilter === \"all\") {\n      setFilteredNotifications(sampleNotifications);\n    } else {\n      setFilteredNotifications(\n        sampleNotifications.filter(\n          (notification) => notification.category === selectedFilter\n        )\n      );\n    }\n  }, [selectedFilter]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex\">\n      {/* Sidebar Navigation */}\n      <Sidebar />\n      {/* Main Content */}\n      <div className=\"flex-1 ml-0 md:ml-64\">\n        <div className=\"container mx-auto py-8 px-4\">\n          <h1 className=\"text-2xl font-semibold text-gray-800 mb-6\">\n            Notifications\n          </h1>\n\n          {/* Filter Component */}\n          <NotificationFilter\n            selectedFilter={selectedFilter}\n            onFilterChange={setSelectedFilter}\n          />\n\n          {/* Notifications List */}\n          <NotificationList notifications={filteredNotifications} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationPage;\n"],"names":["NotificationList","notifications","setNotifications","useState","loading","setLoading","error","setError","activeFilter","setActiveFilter","useEffect","fetchNotifications","async","response","fetch","data","json","analytics","track","err","message","handleMarkAsRead","notificationId","method","prev","map","notification","id","read","console","filteredNotifications","filter","type","className","children","LoadingSpinner","size","jsxs","jsx","XCircleIcon","jsxRuntimeExports","onClick","unreadCount","n","length","NotificationFilter","onFilterChange","NotificationItem","onMarkAsRead","BellIcon","sampleNotifications","timestamp","category","NotificationPage","selectedFilter","setSelectedFilter","setFilteredNotifications","Sidebar"],"mappings":"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"}