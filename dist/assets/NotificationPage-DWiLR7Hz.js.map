{"version":3,"file":"NotificationPage-DWiLR7Hz.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../../src/components/notifications/NotificationList.jsx","../../src/pages/NotificationPage.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","// components/NotificationList.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport analytics from \"../../services/analytics\";\r\nimport NotificationItem from \"./NotificationItem\";\r\nimport NotificationFilter from \"./NotificationFilter\";\r\nimport LoadingSpinner from \"../common/LoadingSpinner\";\r\nimport { BellIcon, XCircleIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst NotificationList = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeFilter, setActiveFilter] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const fetchNotifications = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // TODO: Implement actual API call\r\n      const response = await fetch(\"/api/notifications\");\r\n      const data = await response.json();\r\n      setNotifications(data);\r\n      analytics.track(\"view_notifications\");\r\n    } catch (err) {\r\n      setError(\"Failed to load notifications\");\r\n      analytics.track(\"notification_error\", { error: err.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMarkAsRead = async (notificationId) => {\r\n    try {\r\n      // TODO: Implement actual API call\r\n      await fetch(`/api/notifications/${notificationId}/read`, {\r\n        method: \"PUT\",\r\n      });\r\n      setNotifications((prev) =>\r\n        prev.map((notification) =>\r\n          notification.id === notificationId\r\n            ? { ...notification, read: true }\r\n            : notification\r\n        )\r\n      );\r\n      analytics.track(\"mark_notification_read\", { notificationId });\r\n    } catch (err) {\r\n      console.error(\"Failed to mark notification as read:\", err);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (filter) => {\r\n    setActiveFilter(filter);\r\n    analytics.track(\"notifications_filter\", { filter });\r\n  };\r\n\r\n  const filteredNotifications = notifications.filter((notification) => {\r\n    if (activeFilter === \"all\") return true;\r\n    return notification.type === activeFilter;\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center px-4\">\r\n        <div className=\"max-w-md w-full text-center\">\r\n          <div className=\"text-red-600 dark:text-red-400 mb-4\">\r\n            <XCircleIcon className=\"h-12 w-12 mx-auto\" />\r\n          </div>\r\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n            Error Loading Notifications\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{error}</p>\r\n          <button\r\n            onClick={fetchNotifications}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const unreadCount = notifications.filter((n) => !n.read).length;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"lg:grid lg:grid-cols-12 lg:gap-8\">\r\n          {/* Filter Sidebar */}\r\n          <div className=\"lg:col-span-3\">\r\n            <NotificationFilter\r\n              activeFilter={activeFilter}\r\n              onFilterChange={handleFilterChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Notifications List */}\r\n          <div className=\"mt-8 lg:mt-0 lg:col-span-9\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card overflow-hidden\">\r\n              <div className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200 dark:border-gray-700\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                  Notifications\r\n                </h2>\r\n                {unreadCount > 0 && (\r\n                  <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">\r\n                    {unreadCount} unread\r\n                  </span>\r\n                )}\r\n              </div>\r\n              {filteredNotifications.length > 0 ? (\r\n                <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                  {filteredNotifications.map((notification) => (\r\n                    <NotificationItem\r\n                      key={notification.id}\r\n                      notification={notification}\r\n                      onMarkAsRead={handleMarkAsRead}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"p-8 text-center\">\r\n                  <BellIcon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n                    No notifications\r\n                  </h3>\r\n                  <p className=\"text-gray-500 dark:text-gray-400\">\r\n                    {activeFilter === \"all\"\r\n                      ? \"You're all caught up!\"\r\n                      : `No ${activeFilter} notifications`}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n","// pages/NotificationPage.jsx\r\nimport { useState, useEffect } from \"react\";\r\nimport NotificationList from \"../components/notifications/NotificationList\";\r\nimport NotificationFilter from \"../components/notifications/NotificationFilter\";\r\nimport Sidebar from \"../components/layout/Sidebar\";\r\n\r\n// Sample data for notifications\r\nconst sampleNotifications = [\r\n  {\r\n    id: 1,\r\n    message: \"You have a new connection request from Jane Doe\",\r\n    timestamp: \"2 hours ago\",\r\n    category: \"connection_requests\",\r\n  },\r\n  {\r\n    id: 2,\r\n    message: \"John has applied to your job listing\",\r\n    timestamp: \"1 day ago\",\r\n    category: \"job_updates\",\r\n  },\r\n  {\r\n    id: 3,\r\n    message: \"You received a new message from Sarah\",\r\n    timestamp: \"3 days ago\",\r\n    category: \"messages\",\r\n  },\r\n  {\r\n    id: 4,\r\n    message: \"Your job application was viewed by an employer\",\r\n    timestamp: \"5 days ago\",\r\n    category: \"job_updates\",\r\n  },\r\n];\r\n\r\nconst NotificationPage = () => {\r\n  const [selectedFilter, setSelectedFilter] = useState(\"all\");\r\n  const [filteredNotifications, setFilteredNotifications] =\r\n    useState(sampleNotifications);\r\n\r\n  useEffect(() => {\r\n    if (selectedFilter === \"all\") {\r\n      setFilteredNotifications(sampleNotifications);\r\n    } else {\r\n      setFilteredNotifications(\r\n        sampleNotifications.filter(\r\n          (notification) => notification.category === selectedFilter\r\n        )\r\n      );\r\n    }\r\n  }, [selectedFilter]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex\">\r\n      {/* Sidebar Navigation */}\r\n      <Sidebar />\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 ml-0 md:ml-64\">\r\n        <div className=\"container mx-auto py-8 px-4\">\r\n          <h1 className=\"text-2xl font-semibold text-gray-800 mb-6\">\r\n            Notifications\r\n          </h1>\r\n\r\n          {/* Filter Component */}\r\n          <NotificationFilter\r\n            selectedFilter={selectedFilter}\r\n            onFilterChange={setSelectedFilter}\r\n          />\r\n\r\n          {/* Notifications List */}\r\n          <NotificationList notifications={filteredNotifications} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPage;\r\n"],"names":["XCircleIcon","title","titleId","props","svgRef","React.createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ForwardRef","React.forwardRef","NotificationList","notifications","setNotifications","useState","loading","setLoading","error","setError","activeFilter","setActiveFilter","useEffect","fetchNotifications","async","response","fetch","data","json","analytics","track","err","message","handleMarkAsRead","notificationId","method","prev","map","notification","read","console","filteredNotifications","filter","type","jsx","className","children","LoadingSpinner","size","jsxs","onClick","unreadCount","n","length","NotificationFilter","onFilterChange","NotificationItem","onMarkAsRead","BellIcon","sampleNotifications","timestamp","category","NotificationPage","selectedFilter","setSelectedFilter","setFilteredNotifications","Sidebar"],"mappings":"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","x_google_ignoreList":[0]}