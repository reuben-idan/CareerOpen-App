{"version":3,"file":"Feed-CbPzWa7L.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingDownIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingUpIcon.js","../../src/components/jobs/JobFilter.jsx","../../src/components/jobs/JobStats.jsx","../../src/components/jobs/JobTrends.jsx","../../src/pages/Feed.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowTrendingDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6 9 12.75l4.286-4.286a11.948 11.948 0 0 1 4.306 6.43l.776 2.898m0 0 3.182-5.511m-3.182 5.51-5.511-3.181\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowTrendingUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingUpIcon);\nexport default ForwardRef;","import React, { useState } from \"react\";\r\nimport {\r\n  FunnelIcon,\r\n  XMarkIcon,\r\n  AdjustmentsHorizontalIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobFilter = ({ onFilterChange, initialFilters = {} }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    jobType: initialFilters.jobType || \"\",\r\n    location: initialFilters.location || \"\",\r\n    experience: initialFilters.experience || \"\",\r\n    salary: initialFilters.salary || \"\",\r\n    datePosted: initialFilters.datePosted || \"\",\r\n    ...initialFilters,\r\n  });\r\n\r\n  const jobTypes = [\r\n    \"Full-time\",\r\n    \"Part-time\",\r\n    \"Contract\",\r\n    \"Temporary\",\r\n    \"Internship\",\r\n    \"Remote\",\r\n  ];\r\n\r\n  const experienceLevels = [\r\n    \"Entry Level\",\r\n    \"Junior\",\r\n    \"Mid Level\",\r\n    \"Senior\",\r\n    \"Lead\",\r\n    \"Manager\",\r\n    \"Executive\",\r\n  ];\r\n\r\n  const salaryRanges = [\"0-50k\", \"50k-100k\", \"100k-150k\", \"150k-200k\", \"200k+\"];\r\n\r\n  const datePostedOptions = [\r\n    \"Last 24 hours\",\r\n    \"Last 3 days\",\r\n    \"Last week\",\r\n    \"Last 2 weeks\",\r\n    \"Last month\",\r\n  ];\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    const newFilters = { ...filters, [key]: value };\r\n    setFilters(newFilters);\r\n    onFilterChange(newFilters);\r\n    analytics.track(\"filter_jobs\", { filter: key, value });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    const resetFilters = {\r\n      jobType: \"\",\r\n      location: \"\",\r\n      experience: \"\",\r\n      salary: \"\",\r\n      datePosted: \"\",\r\n    };\r\n    setFilters(resetFilters);\r\n    onFilterChange(resetFilters);\r\n    analytics.track(\"reset_filters\");\r\n  };\r\n\r\n  const activeFiltersCount = Object.values(filters).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n      >\r\n        <FunnelIcon className=\"h-5 w-5 mr-2\" />\r\n        Filters\r\n        {activeFiltersCount > 0 && (\r\n          <span className=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200\">\r\n            {activeFiltersCount}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"absolute z-10 mt-2 w-96 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5\">\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                Filter Jobs\r\n              </h3>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                className=\"text-gray-400 hover:text-gray-500 dark:hover:text-gray-300\"\r\n              >\r\n                <XMarkIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Job Type\r\n                </label>\r\n                <select\r\n                  value={filters.jobType}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"jobType\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Types</option>\r\n                  {jobTypes.map((type) => (\r\n                    <option key={type} value={type}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Location\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={filters.location}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"location\", e.target.value)\r\n                  }\r\n                  placeholder=\"Enter location\"\r\n                  className=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm dark:bg-gray-700 dark:text-white\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Experience Level\r\n                </label>\r\n                <select\r\n                  value={filters.experience}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"experience\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Levels</option>\r\n                  {experienceLevels.map((level) => (\r\n                    <option key={level} value={level}>\r\n                      {level}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Salary Range\r\n                </label>\r\n                <select\r\n                  value={filters.salary}\r\n                  onChange={(e) => handleFilterChange(\"salary\", e.target.value)}\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Ranges</option>\r\n                  {salaryRanges.map((range) => (\r\n                    <option key={range} value={range}>\r\n                      {range}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Date Posted\r\n                </label>\r\n                <select\r\n                  value={filters.datePosted}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"datePosted\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">Any Time</option>\r\n                  {datePostedOptions.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6 flex justify-end space-x-3\">\r\n              <button\r\n                onClick={handleReset}\r\n                className=\"inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  BriefcaseIcon,\r\n  CheckCircleIcon,\r\n  ClockIcon,\r\n  EyeIcon,\r\n  UserGroupIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobStats = ({ stats }) => {\r\n  // Provide default values if stats is undefined or incomplete\r\n  const {\r\n    totalJobs = 0,\r\n    activeApplications = 0,\r\n    savedJobs = 0,\r\n    views = 0,\r\n    connections = 0,\r\n  } = stats || {};\r\n\r\n  const statItems = [\r\n    {\r\n      name: \"Total Jobs\",\r\n      value: totalJobs,\r\n      icon: BriefcaseIcon,\r\n      color: \"text-blue-500\",\r\n      bgColor: \"bg-blue-100 dark:bg-blue-900\",\r\n    },\r\n    {\r\n      name: \"Active Applications\",\r\n      value: activeApplications,\r\n      icon: CheckCircleIcon,\r\n      color: \"text-green-500\",\r\n      bgColor: \"bg-green-100 dark:bg-green-900\",\r\n    },\r\n    {\r\n      name: \"Saved Jobs\",\r\n      value: savedJobs,\r\n      icon: ClockIcon,\r\n      color: \"text-yellow-500\",\r\n      bgColor: \"bg-yellow-100 dark:bg-yellow-900\",\r\n    },\r\n    {\r\n      name: \"Profile Views\",\r\n      value: views,\r\n      icon: EyeIcon,\r\n      color: \"text-purple-500\",\r\n      bgColor: \"bg-purple-100 dark:bg-purple-900\",\r\n    },\r\n    {\r\n      name: \"Connections\",\r\n      value: connections,\r\n      icon: UserGroupIcon,\r\n      color: \"text-pink-500\",\r\n      bgColor: \"bg-pink-100 dark:bg-pink-900\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card\">\r\n      <div className=\"p-6\">\r\n        <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-6\">\r\n          Your Job Stats\r\n        </h2>\r\n\r\n        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\r\n          {statItems.map((item) => (\r\n            <div\r\n              key={item.name}\r\n              className=\"relative overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 py-5 shadow sm:px-6 sm:py-6\"\r\n            >\r\n              <dt>\r\n                <div className={`absolute rounded-md p-3 ${item.bgColor}`}>\r\n                  <item.icon\r\n                    className={`h-6 w-6 ${item.color}`}\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </div>\r\n                <p className=\"ml-16 truncate text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  {item.name}\r\n                </p>\r\n              </dt>\r\n              <dd className=\"ml-16 flex items-baseline\">\r\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {item.value}\r\n                </p>\r\n              </dd>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <div className=\"relative\">\r\n            <div\r\n              className=\"absolute inset-0 flex items-center\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center\">\r\n              <span className=\"bg-white dark:bg-gray-800 px-3 text-sm text-gray-500 dark:text-gray-400\">\r\n                Last updated {new Date().toLocaleDateString()}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nJobStats.propTypes = {\r\n  stats: PropTypes.shape({\r\n    totalJobs: PropTypes.number,\r\n    activeApplications: PropTypes.number,\r\n    savedJobs: PropTypes.number,\r\n    views: PropTypes.number,\r\n    connections: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default JobStats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ChartBarIcon,\r\n  ArrowTrendingUpIcon,\r\n  ArrowTrendingDownIcon,\r\n  CalendarIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobTrends = ({ jobs, category }) => {\r\n  const [trendsData, setTrendsData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [timeRange, setTimeRange] = useState(\"3m\"); // 1m, 3m, 6m, 1y\r\n\r\n  useEffect(() => {\r\n    const processTrendsData = () => {\r\n      try {\r\n        setLoading(true);\r\n        const now = new Date();\r\n        const ranges = {\r\n          \"1m\": 30,\r\n          \"3m\": 90,\r\n          \"6m\": 180,\r\n          \"1y\": 365,\r\n        };\r\n\r\n        const days = ranges[timeRange];\r\n        const startDate = new Date(now);\r\n        startDate.setDate(startDate.getDate() - days);\r\n\r\n        // Group jobs by date\r\n        const jobsByDate = {};\r\n        const salaryByDate = {};\r\n        const skillsByDate = {};\r\n\r\n        jobs.forEach((job) => {\r\n          const jobDate = new Date(job.postedAt);\r\n          if (jobDate >= startDate) {\r\n            const dateKey = jobDate.toISOString().split(\"T\")[0];\r\n\r\n            // Count jobs\r\n            jobsByDate[dateKey] = (jobsByDate[dateKey] || 0) + 1;\r\n\r\n            // Track salaries\r\n            const salary = parseInt(job.salary.replace(/[^0-9]/g, \"\"), 10);\r\n            if (!isNaN(salary)) {\r\n              if (!salaryByDate[dateKey]) {\r\n                salaryByDate[dateKey] = { total: 0, count: 0 };\r\n              }\r\n              salaryByDate[dateKey].total += salary;\r\n              salaryByDate[dateKey].count += 1;\r\n            }\r\n\r\n            // Track skills\r\n            if (job.skills) {\r\n              job.skills.forEach((skill) => {\r\n                if (!skillsByDate[dateKey]) {\r\n                  skillsByDate[dateKey] = {};\r\n                }\r\n                skillsByDate[dateKey][skill] =\r\n                  (skillsByDate[dateKey][skill] || 0) + 1;\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        // Process data for chart\r\n        const dates = Object.keys(jobsByDate).sort();\r\n        const processedData = dates.map((date) => ({\r\n          date,\r\n          jobCount: jobsByDate[date],\r\n          averageSalary: Math.round(\r\n            salaryByDate[date].total / salaryByDate[date].count\r\n          ),\r\n          topSkills: Object.entries(skillsByDate[date] || {})\r\n            .sort(([, a], [, b]) => b - a)\r\n            .slice(0, 3)\r\n            .map(([skill]) => skill),\r\n        }));\r\n\r\n        // Calculate trends\r\n        const firstWeek = processedData.slice(0, 7);\r\n        const lastWeek = processedData.slice(-7);\r\n        const jobTrend = calculateTrend(\r\n          firstWeek.reduce((sum, day) => sum + day.jobCount, 0),\r\n          lastWeek.reduce((sum, day) => sum + day.jobCount, 0)\r\n        );\r\n        const salaryTrend = calculateTrend(\r\n          firstWeek.reduce((sum, day) => sum + day.averageSalary, 0) / 7,\r\n          lastWeek.reduce((sum, day) => sum + day.averageSalary, 0) / 7\r\n        );\r\n\r\n        setTrendsData({\r\n          dailyData: processedData,\r\n          trends: {\r\n            jobs: jobTrend,\r\n            salary: salaryTrend,\r\n          },\r\n        });\r\n\r\n        analytics.track(\"view_job_trends\", {\r\n          category,\r\n          timeRange,\r\n          jobCount: jobs.length,\r\n        });\r\n      } catch (err) {\r\n        setError(\"Failed to process trends data\");\r\n        analytics.track(\"error\", {\r\n          action: \"process_trends_data\",\r\n          error: err.message,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    processTrendsData();\r\n  }, [jobs, category, timeRange]);\r\n\r\n  const calculateTrend = (start, end) => {\r\n    const change = ((end - start) / start) * 100;\r\n    return {\r\n      value: change,\r\n      direction: change > 0 ? \"up\" : \"down\",\r\n      magnitude: Math.abs(change),\r\n    };\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n        <div className=\"animate-pulse space-y-4\">\r\n          <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\" />\r\n          <div className=\"space-y-3\">\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-5/6\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n        <div className=\"text-center\">\r\n          <ChartBarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n            {error}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card\">\r\n      <div className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            Job Market Trends\r\n          </h2>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <select\r\n              value={timeRange}\r\n              onChange={(e) => setTimeRange(e.target.value)}\r\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n            >\r\n              <option value=\"1m\">Last Month</option>\r\n              <option value=\"3m\">Last 3 Months</option>\r\n              <option value=\"6m\">Last 6 Months</option>\r\n              <option value=\"1y\">Last Year</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\r\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  Job Postings\r\n                </p>\r\n                <p className=\"mt-1 text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {trendsData.dailyData.reduce(\r\n                    (sum, day) => sum + day.jobCount,\r\n                    0\r\n                  )}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={`flex items-center ${\r\n                  trendsData.trends.jobs.direction === \"up\"\r\n                    ? \"text-green-500\"\r\n                    : \"text-red-500\"\r\n                }`}\r\n              >\r\n                {trendsData.trends.jobs.direction === \"up\" ? (\r\n                  <ArrowTrendingUpIcon className=\"h-5 w-5\" />\r\n                ) : (\r\n                  <ArrowTrendingDownIcon className=\"h-5 w-5\" />\r\n                )}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {Math.abs(trendsData.trends.jobs.value).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  Average Salary\r\n                </p>\r\n                <p className=\"mt-1 text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  $\r\n                  {Math.round(\r\n                    trendsData.dailyData.reduce(\r\n                      (sum, day) => sum + day.averageSalary,\r\n                      0\r\n                    ) / trendsData.dailyData.length\r\n                  ).toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={`flex items-center ${\r\n                  trendsData.trends.salary.direction === \"up\"\r\n                    ? \"text-green-500\"\r\n                    : \"text-red-500\"\r\n                }`}\r\n              >\r\n                {trendsData.trends.salary.direction === \"up\" ? (\r\n                  <ArrowTrendingUpIcon className=\"h-5 w-5\" />\r\n                ) : (\r\n                  <ArrowTrendingDownIcon className=\"h-5 w-5\" />\r\n                )}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {Math.abs(trendsData.trends.salary.value).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-4\">\r\n            Recent Trends\r\n          </h3>\r\n          <div className=\"space-y-4\">\r\n            {trendsData.dailyData.slice(-5).map((day) => (\r\n              <div\r\n                key={day.date}\r\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\r\n              >\r\n                <div className=\"flex items-center\">\r\n                  <CalendarIcon className=\"h-5 w-5 text-gray-400\" />\r\n                  <div className=\"ml-3\">\r\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {new Date(day.date).toLocaleDateString()}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                      {day.jobCount} jobs posted\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  <p>Top Skills:</p>\r\n                  <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                    {day.topSkills.map((skill) => (\r\n                      <span\r\n                        key={skill}\r\n                        className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200\"\r\n                      >\r\n                        {skill}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-sm text-gray-500 dark:text-gray-400\">\r\n          <p>\r\n            Based on {jobs.length} job listings. Trends are calculated by\r\n            comparing the first and last week of the selected period.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobTrends;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport analytics from \"../services/analytics\";\r\nimport JobCard from \"../components/jobs/JobCard\";\r\nimport JobSearch from \"../components/jobs/JobSearch\";\r\nimport JobFilter from \"../components/jobs/JobFilter\";\r\nimport JobStats from \"../components/jobs/JobStats\";\r\nimport JobTrends from \"../components/jobs/JobTrends\";\r\nimport LoadingSpinner from \"../components/common/LoadingSpinner\";\r\nimport Sidebar from \"../components/layout/Sidebar\";\r\nimport { EmployerLogos, PeopleGrid, GlassCard } from \"../components\";\r\nimport { BriefcaseIcon, MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\r\n\r\nconst Feed = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [filters, setFilters] = useState({\r\n    location: \"\",\r\n    type: \"\",\r\n    experience: \"\",\r\n    salary: \"\",\r\n  });\r\n\r\n  // Mock stats data\r\n  const [stats, setStats] = useState({\r\n    totalJobs: 0,\r\n    activeApplications: 0,\r\n    savedJobs: 0,\r\n    views: 0,\r\n    connections: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Mock job data\r\n      const mockJobs = [\r\n        {\r\n          id: 1,\r\n          title: \"Senior React Developer\",\r\n          company: \"Tech Corp\",\r\n          location: \"San Francisco, CA\",\r\n          type: \"Full-time\",\r\n          salary: \"$120,000 - $150,000\",\r\n          postedAt: \"2024-01-15\",\r\n          description:\r\n            \"We're looking for a senior React developer to join our team...\",\r\n          requirements: {\r\n            experience: \"5+ years\",\r\n            education: \"Bachelor's degree\",\r\n          },\r\n          skills: [\"React\", \"TypeScript\", \"Node.js\"],\r\n          benefits: {\r\n            healthInsurance: true,\r\n            remoteWork: true,\r\n          },\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Frontend Engineer\",\r\n          company: \"Startup Inc\",\r\n          location: \"Remote\",\r\n          type: \"Full-time\",\r\n          salary: \"$90,000 - $120,000\",\r\n          postedAt: \"2024-01-14\",\r\n          description:\r\n            \"Join our fast-growing startup as a frontend engineer...\",\r\n          requirements: {\r\n            experience: \"3+ years\",\r\n            education: \"Bachelor's degree\",\r\n          },\r\n          skills: [\"JavaScript\", \"React\", \"CSS\"],\r\n          benefits: {\r\n            healthInsurance: true,\r\n            remoteWork: true,\r\n          },\r\n        },\r\n      ];\r\n\r\n      setJobs(mockJobs);\r\n      analytics.track(\"view_job_feed\", { jobCount: mockJobs.length });\r\n    } catch (err) {\r\n      setError(\"Failed to load jobs\");\r\n      analytics.track(\"job_feed_error\", { error: err.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      // Mock stats data\r\n      const mockStats = {\r\n        totalJobs: 1250,\r\n        activeApplications: 8,\r\n        savedJobs: 23,\r\n        views: 156,\r\n        connections: 342,\r\n      };\r\n      setStats(mockStats);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch stats:\", err);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n    analytics.track(\"search_jobs\", { query });\r\n  };\r\n\r\n  const handleFilterChange = (newFilters) => {\r\n    setFilters(newFilters);\r\n    analytics.track(\"filter_jobs\", { filters: newFilters });\r\n  };\r\n\r\n  const handleSaveJob = (jobId) => {\r\n    analytics.track(\"save_job\", { jobId });\r\n    // TODO: Implement save job functionality\r\n  };\r\n\r\n  const handleApplyJob = (jobId) => {\r\n    analytics.track(\"apply_job\", { jobId });\r\n    // TODO: Implement apply job functionality\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 px-4\">\r\n        <GlassCard className=\"max-w-md w-full text-center\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            Error Loading Jobs\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-4\">{error}</p>\r\n          <button \r\n            onClick={fetchJobs} \r\n            className=\"px-6 py-3 rounded-xl font-medium bg-blue-600 hover:bg-blue-700 text-white shadow-lg hover:shadow-xl transition-all duration-200\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </GlassCard>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex\">\r\n      <Sidebar />\r\n      <div className=\"flex-1 ml-0 md:ml-64\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          {/* Header Section */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-6\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center space-x-3 mb-4\">\r\n                  <div className=\"p-3 bg-blue-600 rounded-2xl\">\r\n                    <BriefcaseIcon className=\"h-8 w-8 text-white\" />\r\n                  </div>\r\n                  <div>\r\n                    <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-2\">\r\n                      Job Feed\r\n                    </h1>\r\n                    <p className=\"text-xl text-gray-600\">\r\n                      Discover your next career opportunity\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Search Bar */}\r\n                <div className=\"relative max-w-2xl\">\r\n                  <MagnifyingGlassIcon className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-6 w-6 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => handleSearch(e.target.value)}\r\n                    placeholder=\"Search for jobs, companies, or skills...\"\r\n                    className=\"w-full pl-12 pr-4 py-4 text-lg border-0 rounded-2xl shadow-lg bg-white/80 backdrop-blur-sm focus:ring-2 focus:ring-blue-500 focus:outline-none\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              {/* People Grid */}\r\n              <div className=\"hidden lg:block\">\r\n                <PeopleGrid maxImages={4} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Employer Logos */}\r\n          <div className=\"mb-8\">\r\n            <p className=\"text-center text-gray-600 mb-4\">Trusted by top companies worldwide</p>\r\n            <EmployerLogos />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n            {/* Main Content */}\r\n            <div className=\"lg:col-span-3 space-y-6\">\r\n              {/* Search and Filter */}\r\n              <GlassCard>\r\n                <JobSearch onSearch={handleSearch} />\r\n                <JobFilter\r\n                  filters={filters}\r\n                  onFilterChange={handleFilterChange}\r\n                />\r\n              </GlassCard>\r\n\r\n              {/* Job Stats */}\r\n              <JobStats stats={stats} />\r\n\r\n              {/* Job Listings */}\r\n              <div className=\"space-y-4\">\r\n                {jobs.map((job) => (\r\n                  <JobCard\r\n                    key={job.id}\r\n                    job={job}\r\n                    onSave={handleSaveJob}\r\n                    onApply={handleApplyJob}\r\n                  />\r\n                ))}\r\n              </div>\r\n\r\n              {jobs.length === 0 && (\r\n                <GlassCard className=\"text-center py-12\">\r\n                  <div className=\"max-w-md mx-auto\">\r\n                    <div className=\"text-6xl mb-4\">🔍</div>\r\n                    <h3 className=\"text-2xl font-semibold text-gray-900 mb-2\">\r\n                      No jobs found\r\n                    </h3>\r\n                    <p className=\"text-gray-600 mb-6\">\r\n                      Try adjusting your search criteria or filters.\r\n                    </p>\r\n                    <button\r\n                      onClick={() => {\r\n                        setSearchQuery(\"\");\r\n                        setFilters({\r\n                          location: \"\",\r\n                          type: \"\",\r\n                          experience: \"\",\r\n                          salary: \"\",\r\n                        });\r\n                      }}\r\n                      className=\"bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                      Clear Filters\r\n                    </button>\r\n                  </div>\r\n                </GlassCard>\r\n              )}\r\n            </div>\r\n\r\n            {/* Sidebar */}\r\n            <div className=\"space-y-6\">\r\n              {/* Job Trends */}\r\n              <JobTrends jobs={jobs} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n"],"names":["ArrowTrendingDownIcon","title","titleId","props","svgRef","React.createElement","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","ForwardRef","React.forwardRef","ArrowTrendingUpIcon","JobFilter","onFilterChange","initialFilters","isOpen","setIsOpen","useState","filters","setFilters","jobType","location","experience","salary","datePosted","handleFilterChange","key","value","newFilters","analytics","track","filter","activeFiltersCount","values","Boolean","length","jsxs","className","children","onClick","jsx","FunnelIcon","XMarkIcon","onChange","e","target","map","type","placeholder","level","range","option","resetFilters","JobStats","stats","totalJobs","activeApplications","savedJobs","views","connections","statItems","name","icon","BriefcaseIcon","color","bgColor","CheckCircleIcon","ClockIcon","EyeIcon","UserGroupIcon","item","Date","toLocaleDateString","propTypes","PropTypes","shape","number","JobTrends","jobs","category","trendsData","setTrendsData","loading","setLoading","error","setError","timeRange","setTimeRange","useEffect","days","startDate","setDate","getDate","jobsByDate","salaryByDate","skillsByDate","forEach","job","jobDate","postedAt","dateKey","toISOString","split","parseInt","replace","isNaN","total","count","skills","skill","processedData","keys","sort","date","jobCount","averageSalary","Math","round","topSkills","entries","a","b","slice","firstWeek","lastWeek","jobTrend","calculateTrend","reduce","sum","day","salaryTrend","dailyData","trends","err","action","message","processTrendsData","start","end","change","direction","magnitude","abs","ChartBarIcon","toFixed","toLocaleString","CalendarIcon","Feed","setJobs","searchQuery","setSearchQuery","setStats","fetchJobs","fetchStats","async","mockJobs","company","description","requirements","education","benefits","healthInsurance","remoteWork","console","handleSearch","query","handleSaveJob","jobId","handleApplyJob","LoadingSpinner","GlassCard","Sidebar","MagnifyingGlassIcon","PeopleGrid","maxImages","EmployerLogos","JobSearch","onSearch","JobCard","onSave","onApply"],"mappings":"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","x_google_ignoreList":[0,1]}