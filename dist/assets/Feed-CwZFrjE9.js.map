{"version":3,"file":"Feed-CwZFrjE9.js","sources":["../../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingDownIcon.js","../../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingUpIcon.js","../../node_modules/@heroicons/react/24/outline/esm/FunnelIcon.js","../../src/components/jobs/JobSearch.jsx","../../src/components/jobs/JobFilter.jsx","../../src/components/jobs/JobStats.jsx","../../src/components/jobs/JobTrends.jsx","../../src/pages/Feed.jsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowTrendingDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6 9 12.75l4.286-4.286a11.948 11.948 0 0 1 4.306 6.43l.776 2.898m0 0 3.182-5.511m-3.182 5.51-5.511-3.181\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowTrendingUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingUpIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction FunnelIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 0 1-.659 1.591l-5.432 5.432a2.25 2.25 0 0 0-.659 1.591v2.927a2.25 2.25 0 0 1-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 0 0-.659-1.591L3.659 7.409A2.25 2.25 0 0 1 3 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0 1 12 3Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(FunnelIcon);\nexport default ForwardRef;","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  MagnifyingGlassIcon,\n  AdjustmentsHorizontalIcon,\n} from \"@heroicons/react/24/outline\";\nimport { analytics } from \"../../services/analytics\";\n\nconst JobSearch = ({ initialQuery = \"\", onSearch }) => {\n  const navigate = useNavigate();\n  const [query, setQuery] = useState(initialQuery);\n  const [location, setLocation] = useState(\"\");\n  const [showFilters, setShowFilters] = useState(false);\n  const [filters, setFilters] = useState({\n    location: \"\",\n    type: \"\",\n    experience: \"\",\n    salary: \"\",\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const searchParams = new URLSearchParams();\n    if (query) searchParams.set(\"q\", query);\n    if (location) searchParams.set(\"location\", location);\n\n    const searchUrl = `/jobs/search?${searchParams.toString()}`;\n    navigate(searchUrl);\n    onSearch({ query, location });\n    analytics.track(\"search_jobs\", { query, location });\n  };\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters((prev) => ({ ...prev, [name]: value }));\n    onSearch({ ...filters, [name]: value });\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-4\">\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          <div className=\"flex-1\">\n            <label htmlFor=\"job-search\" className=\"sr-only\">\n              Search jobs\n            </label>\n            <div className=\"relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <MagnifyingGlassIcon\n                  className=\"h-5 w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n              <input\n                id=\"job-search\"\n                name=\"job-search\"\n                type=\"text\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder=\"Job title, keywords, or company\"\n                className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md leading-5 bg-white dark:bg-gray-800 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:placeholder-gray-400 dark:focus:placeholder-gray-300 focus:ring-1 focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex-1\">\n            <label htmlFor=\"location\" className=\"sr-only\">\n              Location\n            </label>\n            <input\n              id=\"location\"\n              name=\"location\"\n              type=\"text\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n              placeholder=\"City, state, or remote\"\n              className=\"block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md leading-5 bg-white dark:bg-gray-800 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:placeholder-gray-400 dark:focus:placeholder-gray-300 focus:ring-1 focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n            />\n          </div>\n\n          <div className=\"flex-shrink-0\">\n            <button\n              type=\"submit\"\n              className=\"w-full md:w-auto inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\n            >\n              Search Jobs\n            </button>\n          </div>\n        </div>\n\n        <div className=\"mt-4 flex flex-wrap gap-2\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setQuery(\"Software Engineer\");\n              setLocation(\"\");\n            }}\n            className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600\"\n          >\n            Software Engineer\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setQuery(\"Product Manager\");\n              setLocation(\"\");\n            }}\n            className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600\"\n          >\n            Product Manager\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setQuery(\"\");\n              setLocation(\"Remote\");\n            }}\n            className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600\"\n          >\n            Remote\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setQuery(\"\");\n              setLocation(\"New York\");\n            }}\n            className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600\"\n          >\n            New York\n          </button>\n        </div>\n\n        {showFilters && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n            <div>\n              <label\n                htmlFor=\"location\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n              >\n                Location\n              </label>\n              <input\n                type=\"text\"\n                id=\"location\"\n                name=\"location\"\n                value={filters.location}\n                onChange={handleFilterChange}\n                placeholder=\"City, State, or Remote\"\n                className=\"block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n              />\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"type\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n              >\n                Job Type\n              </label>\n              <select\n                id=\"type\"\n                name=\"type\"\n                value={filters.type}\n                onChange={handleFilterChange}\n                className=\"block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n              >\n                <option value=\"\">All Types</option>\n                <option value=\"full-time\">Full Time</option>\n                <option value=\"part-time\">Part Time</option>\n                <option value=\"contract\">Contract</option>\n                <option value=\"internship\">Internship</option>\n              </select>\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"experience\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n              >\n                Experience Level\n              </label>\n              <select\n                id=\"experience\"\n                name=\"experience\"\n                value={filters.experience}\n                onChange={handleFilterChange}\n                className=\"block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n              >\n                <option value=\"\">All Levels</option>\n                <option value=\"entry\">Entry Level</option>\n                <option value=\"mid\">Mid Level</option>\n                <option value=\"senior\">Senior Level</option>\n                <option value=\"lead\">Lead</option>\n              </select>\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"salary\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n              >\n                Salary Range\n              </label>\n              <select\n                id=\"salary\"\n                name=\"salary\"\n                value={filters.salary}\n                onChange={handleFilterChange}\n                className=\"block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:text-white\"\n              >\n                <option value=\"\">Any</option>\n                <option value=\"0-50000\">$0 - $50,000</option>\n                <option value=\"50000-100000\">$50,000 - $100,000</option>\n                <option value=\"100000-150000\">$100,000 - $150,000</option>\n                <option value=\"150000+\">$150,000+</option>\n              </select>\n            </div>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default JobSearch;\n","import React, { useState } from \"react\";\r\nimport {\r\n  FunnelIcon,\r\n  XMarkIcon,\r\n  AdjustmentsHorizontalIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobFilter = ({ onFilterChange, initialFilters = {} }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    jobType: initialFilters.jobType || \"\",\r\n    location: initialFilters.location || \"\",\r\n    experience: initialFilters.experience || \"\",\r\n    salary: initialFilters.salary || \"\",\r\n    datePosted: initialFilters.datePosted || \"\",\r\n    ...initialFilters,\r\n  });\r\n\r\n  const jobTypes = [\r\n    \"Full-time\",\r\n    \"Part-time\",\r\n    \"Contract\",\r\n    \"Temporary\",\r\n    \"Internship\",\r\n    \"Remote\",\r\n  ];\r\n\r\n  const experienceLevels = [\r\n    \"Entry Level\",\r\n    \"Junior\",\r\n    \"Mid Level\",\r\n    \"Senior\",\r\n    \"Lead\",\r\n    \"Manager\",\r\n    \"Executive\",\r\n  ];\r\n\r\n  const salaryRanges = [\"0-50k\", \"50k-100k\", \"100k-150k\", \"150k-200k\", \"200k+\"];\r\n\r\n  const datePostedOptions = [\r\n    \"Last 24 hours\",\r\n    \"Last 3 days\",\r\n    \"Last week\",\r\n    \"Last 2 weeks\",\r\n    \"Last month\",\r\n  ];\r\n\r\n  const handleFilterChange = (key, value) => {\r\n    const newFilters = { ...filters, [key]: value };\r\n    setFilters(newFilters);\r\n    onFilterChange(newFilters);\r\n    analytics.track(\"filter_jobs\", { filter: key, value });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    const resetFilters = {\r\n      jobType: \"\",\r\n      location: \"\",\r\n      experience: \"\",\r\n      salary: \"\",\r\n      datePosted: \"\",\r\n    };\r\n    setFilters(resetFilters);\r\n    onFilterChange(resetFilters);\r\n    analytics.track(\"reset_filters\");\r\n  };\r\n\r\n  const activeFiltersCount = Object.values(filters).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n      >\r\n        <FunnelIcon className=\"h-5 w-5 mr-2\" />\r\n        Filters\r\n        {activeFiltersCount > 0 && (\r\n          <span className=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200\">\r\n            {activeFiltersCount}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"absolute z-10 mt-2 w-96 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5\">\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                Filter Jobs\r\n              </h3>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                className=\"text-gray-400 hover:text-gray-500 dark:hover:text-gray-300\"\r\n              >\r\n                <XMarkIcon className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Job Type\r\n                </label>\r\n                <select\r\n                  value={filters.jobType}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"jobType\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Types</option>\r\n                  {jobTypes.map((type) => (\r\n                    <option key={type} value={type}>\r\n                      {type}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Location\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={filters.location}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"location\", e.target.value)\r\n                  }\r\n                  placeholder=\"Enter location\"\r\n                  className=\"mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm dark:bg-gray-700 dark:text-white\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Experience Level\r\n                </label>\r\n                <select\r\n                  value={filters.experience}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"experience\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Levels</option>\r\n                  {experienceLevels.map((level) => (\r\n                    <option key={level} value={level}>\r\n                      {level}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Salary Range\r\n                </label>\r\n                <select\r\n                  value={filters.salary}\r\n                  onChange={(e) => handleFilterChange(\"salary\", e.target.value)}\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">All Ranges</option>\r\n                  {salaryRanges.map((range) => (\r\n                    <option key={range} value={range}>\r\n                      {range}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                  Date Posted\r\n                </label>\r\n                <select\r\n                  value={filters.datePosted}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(\"datePosted\", e.target.value)\r\n                  }\r\n                  className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n                >\r\n                  <option value=\"\">Any Time</option>\r\n                  {datePostedOptions.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6 flex justify-end space-x-3\">\r\n              <button\r\n                onClick={handleReset}\r\n                className=\"inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500\"\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobFilter;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  BriefcaseIcon,\n  CheckCircleIcon,\n  ClockIcon,\n  EyeIcon,\n  UserGroupIcon,\n} from \"@heroicons/react/24/outline\";\nimport { analytics } from \"../../services/analytics\";\n\nconst JobStats = ({ stats }) => {\n  // Provide default values if stats is undefined or incomplete\n  const {\n    totalJobs = 0,\n    activeApplications = 0,\n    savedJobs = 0,\n    views = 0,\n    connections = 0,\n  } = stats || {};\n\n  const statItems = [\n    {\n      name: \"Total Jobs\",\n      value: totalJobs,\n      icon: BriefcaseIcon,\n      color: \"text-blue-500\",\n      bgColor: \"bg-blue-100 dark:bg-blue-900\",\n    },\n    {\n      name: \"Active Applications\",\n      value: activeApplications,\n      icon: CheckCircleIcon,\n      color: \"text-green-500\",\n      bgColor: \"bg-green-100 dark:bg-green-900\",\n    },\n    {\n      name: \"Saved Jobs\",\n      value: savedJobs,\n      icon: ClockIcon,\n      color: \"text-yellow-500\",\n      bgColor: \"bg-yellow-100 dark:bg-yellow-900\",\n    },\n    {\n      name: \"Profile Views\",\n      value: views,\n      icon: EyeIcon,\n      color: \"text-purple-500\",\n      bgColor: \"bg-purple-100 dark:bg-purple-900\",\n    },\n    {\n      name: \"Connections\",\n      value: connections,\n      icon: UserGroupIcon,\n      color: \"text-pink-500\",\n      bgColor: \"bg-pink-100 dark:bg-pink-900\",\n    },\n  ];\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card\">\n      <div className=\"p-6\">\n        <h2 className=\"text-lg font-medium text-gray-900 dark:text-white mb-6\">\n          Your Job Stats\n        </h2>\n\n        <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3\">\n          {statItems.map((item) => (\n            <div\n              key={item.name}\n              className=\"relative overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 py-5 shadow sm:px-6 sm:py-6\"\n            >\n              <dt>\n                <div className={`absolute rounded-md p-3 ${item.bgColor}`}>\n                  <item.icon\n                    className={`h-6 w-6 ${item.color}`}\n                    aria-hidden=\"true\"\n                  />\n                </div>\n                <p className=\"ml-16 truncate text-sm font-medium text-gray-500 dark:text-gray-400\">\n                  {item.name}\n                </p>\n              </dt>\n              <dd className=\"ml-16 flex items-baseline\">\n                <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n                  {item.value}\n                </p>\n              </dd>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6\">\n          <div className=\"relative\">\n            <div\n              className=\"absolute inset-0 flex items-center\"\n              aria-hidden=\"true\"\n            >\n              <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\n            </div>\n            <div className=\"relative flex justify-center\">\n              <span className=\"bg-white dark:bg-gray-800 px-3 text-sm text-gray-500 dark:text-gray-400\">\n                Last updated {new Date().toLocaleDateString()}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nJobStats.propTypes = {\n  stats: PropTypes.shape({\n    totalJobs: PropTypes.number,\n    activeApplications: PropTypes.number,\n    savedJobs: PropTypes.number,\n    views: PropTypes.number,\n    connections: PropTypes.number,\n  }),\n};\n\nexport default JobStats;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ChartBarIcon,\r\n  ArrowTrendingUpIcon,\r\n  ArrowTrendingDownIcon,\r\n  CalendarIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { analytics } from \"../../services/analytics\";\r\n\r\nconst JobTrends = ({ jobs, category }) => {\r\n  const [trendsData, setTrendsData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [timeRange, setTimeRange] = useState(\"3m\"); // 1m, 3m, 6m, 1y\r\n\r\n  useEffect(() => {\r\n    const processTrendsData = () => {\r\n      try {\r\n        setLoading(true);\r\n        const now = new Date();\r\n        const ranges = {\r\n          \"1m\": 30,\r\n          \"3m\": 90,\r\n          \"6m\": 180,\r\n          \"1y\": 365,\r\n        };\r\n\r\n        const days = ranges[timeRange];\r\n        const startDate = new Date(now);\r\n        startDate.setDate(startDate.getDate() - days);\r\n\r\n        // Group jobs by date\r\n        const jobsByDate = {};\r\n        const salaryByDate = {};\r\n        const skillsByDate = {};\r\n\r\n        jobs.forEach((job) => {\r\n          const jobDate = new Date(job.postedAt);\r\n          if (jobDate >= startDate) {\r\n            const dateKey = jobDate.toISOString().split(\"T\")[0];\r\n\r\n            // Count jobs\r\n            jobsByDate[dateKey] = (jobsByDate[dateKey] || 0) + 1;\r\n\r\n            // Track salaries\r\n            const salary = parseInt(job.salary.replace(/[^0-9]/g, \"\"), 10);\r\n            if (!isNaN(salary)) {\r\n              if (!salaryByDate[dateKey]) {\r\n                salaryByDate[dateKey] = { total: 0, count: 0 };\r\n              }\r\n              salaryByDate[dateKey].total += salary;\r\n              salaryByDate[dateKey].count += 1;\r\n            }\r\n\r\n            // Track skills\r\n            if (job.skills) {\r\n              job.skills.forEach((skill) => {\r\n                if (!skillsByDate[dateKey]) {\r\n                  skillsByDate[dateKey] = {};\r\n                }\r\n                skillsByDate[dateKey][skill] =\r\n                  (skillsByDate[dateKey][skill] || 0) + 1;\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        // Process data for chart\r\n        const dates = Object.keys(jobsByDate).sort();\r\n        const processedData = dates.map((date) => ({\r\n          date,\r\n          jobCount: jobsByDate[date],\r\n          averageSalary: Math.round(\r\n            salaryByDate[date].total / salaryByDate[date].count\r\n          ),\r\n          topSkills: Object.entries(skillsByDate[date] || {})\r\n            .sort(([, a], [, b]) => b - a)\r\n            .slice(0, 3)\r\n            .map(([skill]) => skill),\r\n        }));\r\n\r\n        // Calculate trends\r\n        const firstWeek = processedData.slice(0, 7);\r\n        const lastWeek = processedData.slice(-7);\r\n        const jobTrend = calculateTrend(\r\n          firstWeek.reduce((sum, day) => sum + day.jobCount, 0),\r\n          lastWeek.reduce((sum, day) => sum + day.jobCount, 0)\r\n        );\r\n        const salaryTrend = calculateTrend(\r\n          firstWeek.reduce((sum, day) => sum + day.averageSalary, 0) / 7,\r\n          lastWeek.reduce((sum, day) => sum + day.averageSalary, 0) / 7\r\n        );\r\n\r\n        setTrendsData({\r\n          dailyData: processedData,\r\n          trends: {\r\n            jobs: jobTrend,\r\n            salary: salaryTrend,\r\n          },\r\n        });\r\n\r\n        analytics.track(\"view_job_trends\", {\r\n          category,\r\n          timeRange,\r\n          jobCount: jobs.length,\r\n        });\r\n      } catch (err) {\r\n        setError(\"Failed to process trends data\");\r\n        analytics.track(\"error\", {\r\n          action: \"process_trends_data\",\r\n          error: err.message,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    processTrendsData();\r\n  }, [jobs, category, timeRange]);\r\n\r\n  const calculateTrend = (start, end) => {\r\n    const change = ((end - start) / start) * 100;\r\n    return {\r\n      value: change,\r\n      direction: change > 0 ? \"up\" : \"down\",\r\n      magnitude: Math.abs(change),\r\n    };\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n        <div className=\"animate-pulse space-y-4\">\r\n          <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\" />\r\n          <div className=\"space-y-3\">\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded\" />\r\n            <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-5/6\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card p-6\">\r\n        <div className=\"text-center\">\r\n          <ChartBarIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">\r\n            {error}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-card\">\r\n      <div className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n            Job Market Trends\r\n          </h2>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <select\r\n              value={timeRange}\r\n              onChange={(e) => setTimeRange(e.target.value)}\r\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md dark:bg-gray-700 dark:text-white\"\r\n            >\r\n              <option value=\"1m\">Last Month</option>\r\n              <option value=\"3m\">Last 3 Months</option>\r\n              <option value=\"6m\">Last 6 Months</option>\r\n              <option value=\"1y\">Last Year</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\r\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  Job Postings\r\n                </p>\r\n                <p className=\"mt-1 text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  {trendsData.dailyData.reduce(\r\n                    (sum, day) => sum + day.jobCount,\r\n                    0\r\n                  )}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={`flex items-center ${\r\n                  trendsData.trends.jobs.direction === \"up\"\r\n                    ? \"text-green-500\"\r\n                    : \"text-red-500\"\r\n                }`}\r\n              >\r\n                {trendsData.trends.jobs.direction === \"up\" ? (\r\n                  <ArrowTrendingUpIcon className=\"h-5 w-5\" />\r\n                ) : (\r\n                  <ArrowTrendingDownIcon className=\"h-5 w-5\" />\r\n                )}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {Math.abs(trendsData.trends.jobs.value).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">\r\n                  Average Salary\r\n                </p>\r\n                <p className=\"mt-1 text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                  $\r\n                  {Math.round(\r\n                    trendsData.dailyData.reduce(\r\n                      (sum, day) => sum + day.averageSalary,\r\n                      0\r\n                    ) / trendsData.dailyData.length\r\n                  ).toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={`flex items-center ${\r\n                  trendsData.trends.salary.direction === \"up\"\r\n                    ? \"text-green-500\"\r\n                    : \"text-red-500\"\r\n                }`}\r\n              >\r\n                {trendsData.trends.salary.direction === \"up\" ? (\r\n                  <ArrowTrendingUpIcon className=\"h-5 w-5\" />\r\n                ) : (\r\n                  <ArrowTrendingDownIcon className=\"h-5 w-5\" />\r\n                )}\r\n                <span className=\"ml-1 text-sm font-medium\">\r\n                  {Math.abs(trendsData.trends.salary.value).toFixed(1)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-4\">\r\n            Recent Trends\r\n          </h3>\r\n          <div className=\"space-y-4\">\r\n            {trendsData.dailyData.slice(-5).map((day) => (\r\n              <div\r\n                key={day.date}\r\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\r\n              >\r\n                <div className=\"flex items-center\">\r\n                  <CalendarIcon className=\"h-5 w-5 text-gray-400\" />\r\n                  <div className=\"ml-3\">\r\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {new Date(day.date).toLocaleDateString()}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                      {day.jobCount} jobs posted\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  <p>Top Skills:</p>\r\n                  <div className=\"flex flex-wrap gap-1 mt-1\">\r\n                    {day.topSkills.map((skill) => (\r\n                      <span\r\n                        key={skill}\r\n                        className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200\"\r\n                      >\r\n                        {skill}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-6 text-sm text-gray-500 dark:text-gray-400\">\r\n          <p>\r\n            Based on {jobs.length} job listings. Trends are calculated by\r\n            comparing the first and last week of the selected period.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobTrends;\r\n","import React, { useState, useEffect } from \"react\";\nimport analytics from \"../services/analytics\";\nimport JobCard from \"../components/jobs/JobCard\";\nimport JobSearch from \"../components/jobs/JobSearch\";\nimport JobFilter from \"../components/jobs/JobFilter\";\nimport JobStats from \"../components/jobs/JobStats\";\nimport JobTrends from \"../components/jobs/JobTrends\";\nimport LoadingSpinner from \"../components/common/LoadingSpinner\";\nimport Sidebar from \"../components/layout/Sidebar\";\nimport { EmployerLogos, PeopleGrid, GlassCard } from \"../components\";\nimport { BriefcaseIcon, MagnifyingGlassIcon } from \"@heroicons/react/24/outline\";\n\nconst Feed = () => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filters, setFilters] = useState({\n    location: \"\",\n    type: \"\",\n    experience: \"\",\n    salary: \"\",\n  });\n\n  // Mock stats data\n  const [stats, setStats] = useState({\n    totalJobs: 0,\n    activeApplications: 0,\n    savedJobs: 0,\n    views: 0,\n    connections: 0,\n  });\n\n  useEffect(() => {\n    fetchJobs();\n    fetchStats();\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      setLoading(true);\n      // Mock job data\n      const mockJobs = [\n        {\n          id: 1,\n          title: \"Senior React Developer\",\n          company: \"Tech Corp\",\n          location: \"San Francisco, CA\",\n          type: \"Full-time\",\n          salary: \"$120,000 - $150,000\",\n          postedAt: \"2024-01-15\",\n          description:\n            \"We're looking for a senior React developer to join our team...\",\n          requirements: {\n            experience: \"5+ years\",\n            education: \"Bachelor's degree\",\n          },\n          skills: [\"React\", \"TypeScript\", \"Node.js\"],\n          benefits: {\n            healthInsurance: true,\n            remoteWork: true,\n          },\n        },\n        {\n          id: 2,\n          title: \"Frontend Engineer\",\n          company: \"Startup Inc\",\n          location: \"Remote\",\n          type: \"Full-time\",\n          salary: \"$90,000 - $120,000\",\n          postedAt: \"2024-01-14\",\n          description:\n            \"Join our fast-growing startup as a frontend engineer...\",\n          requirements: {\n            experience: \"3+ years\",\n            education: \"Bachelor's degree\",\n          },\n          skills: [\"JavaScript\", \"React\", \"CSS\"],\n          benefits: {\n            healthInsurance: true,\n            remoteWork: true,\n          },\n        },\n      ];\n\n      setJobs(mockJobs);\n      analytics.track(\"view_job_feed\", { jobCount: mockJobs.length });\n    } catch (err) {\n      setError(\"Failed to load jobs\");\n      analytics.track(\"job_feed_error\", { error: err.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchStats = async () => {\n    try {\n      // Mock stats data\n      const mockStats = {\n        totalJobs: 1250,\n        activeApplications: 8,\n        savedJobs: 23,\n        views: 156,\n        connections: 342,\n      };\n      setStats(mockStats);\n    } catch (err) {\n      console.error(\"Failed to fetch stats:\", err);\n    }\n  };\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    analytics.track(\"search_jobs\", { query });\n  };\n\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n    analytics.track(\"filter_jobs\", { filters: newFilters });\n  };\n\n  const handleSaveJob = (jobId) => {\n    analytics.track(\"save_job\", { jobId });\n    // TODO: Implement save job functionality\n  };\n\n  const handleApplyJob = (jobId) => {\n    analytics.track(\"apply_job\", { jobId });\n    // TODO: Implement apply job functionality\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 px-4\">\n        <GlassCard className=\"max-w-md w-full text-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">\n            Error Loading Jobs\n          </h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button \n            onClick={fetchJobs} \n            className=\"px-6 py-3 rounded-xl font-medium bg-blue-600 hover:bg-blue-700 text-white shadow-lg hover:shadow-xl transition-all duration-200\"\n          >\n            Try Again\n          </button>\n        </GlassCard>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100 flex\">\n      <Sidebar />\n      <div className=\"flex-1 ml-0 md:ml-64\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {/* Header Section */}\n          <div className=\"mb-8\">\n            <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-6\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-3 mb-4\">\n                  <div className=\"p-3 bg-blue-600 rounded-2xl\">\n                    <BriefcaseIcon className=\"h-8 w-8 text-white\" />\n                  </div>\n                  <div>\n                    <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-2\">\n                      Job Feed\n                    </h1>\n                    <p className=\"text-xl text-gray-600\">\n                      Discover your next career opportunity\n                    </p>\n                  </div>\n                </div>\n                \n                {/* Search Bar */}\n                <div className=\"relative max-w-2xl\">\n                  <MagnifyingGlassIcon className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-6 w-6 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    value={searchQuery}\n                    onChange={(e) => handleSearch(e.target.value)}\n                    placeholder=\"Search for jobs, companies, or skills...\"\n                    className=\"w-full pl-12 pr-4 py-4 text-lg border-0 rounded-2xl shadow-lg bg-white/80 backdrop-blur-sm focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                  />\n                </div>\n              </div>\n              \n              {/* People Grid */}\n              <div className=\"hidden lg:block\">\n                <PeopleGrid maxImages={4} />\n              </div>\n            </div>\n          </div>\n\n          {/* Employer Logos */}\n          <div className=\"mb-8\">\n            <p className=\"text-center text-gray-600 mb-4\">Trusted by top companies worldwide</p>\n            <EmployerLogos />\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n            {/* Main Content */}\n            <div className=\"lg:col-span-3 space-y-6\">\n              {/* Search and Filter */}\n              <GlassCard>\n                <JobSearch onSearch={handleSearch} />\n                <JobFilter\n                  filters={filters}\n                  onFilterChange={handleFilterChange}\n                />\n              </GlassCard>\n\n              {/* Job Stats */}\n              <JobStats stats={stats} />\n\n              {/* Job Listings */}\n              <div className=\"space-y-4\">\n                {jobs.map((job) => (\n                  <JobCard\n                    key={job.id}\n                    job={job}\n                    onSave={handleSaveJob}\n                    onApply={handleApplyJob}\n                  />\n                ))}\n              </div>\n\n              {jobs.length === 0 && (\n                <GlassCard className=\"text-center py-12\">\n                  <div className=\"max-w-md mx-auto\">\n                    <div className=\"text-6xl mb-4\">🔍</div>\n                    <h3 className=\"text-2xl font-semibold text-gray-900 mb-2\">\n                      No jobs found\n                    </h3>\n                    <p className=\"text-gray-600 mb-6\">\n                      Try adjusting your search criteria or filters.\n                    </p>\n                    <button\n                      onClick={() => {\n                        setSearchQuery(\"\");\n                        setFilters({\n                          location: \"\",\n                          type: \"\",\n                          experience: \"\",\n                          salary: \"\",\n                        });\n                      }}\n                      className=\"bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 transition-colors\"\n                    >\n                      Clear Filters\n                    </button>\n                  </div>\n                </GlassCard>\n              )}\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"space-y-6\">\n              {/* Job Trends */}\n              <JobTrends jobs={jobs} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Feed;\n"],"names":["ArrowTrendingDownIcon","title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","React.createElement","id","strokeLinecap","strokeLinejoin","d","ForwardRef","reactExports","forwardRef","ArrowTrendingUpIcon","FunnelIcon","JobSearch","initialQuery","onSearch","navigate","useNavigate","query","setQuery","useState","location","setLocation","showFilters","setShowFilters","filters","setFilters","type","experience","salary","handleFilterChange","e","name","value","target","prev","jsxRuntimeExports","jsx","className","children","onSubmit","preventDefault","searchParams","URLSearchParams","set","searchUrl","toString","analytics","track","jsxs","htmlFor","MagnifyingGlassIcon","onChange","placeholder","onClick","JobFilter","onFilterChange","initialFilters","isOpen","setIsOpen","jobType","datePosted","key","newFilters","filter","activeFiltersCount","values","Boolean","length","XMarkIcon","map","level","range","option","resetFilters","JobStats","stats","totalJobs","activeApplications","savedJobs","views","connections","statItems","icon","BriefcaseIcon","color","bgColor","CheckCircleIcon","ClockIcon","EyeIcon","UserGroupIcon","item","Date","toLocaleDateString","propTypes","PropTypes","shape","number","JobTrends","jobs","category","trendsData","setTrendsData","loading","setLoading","error","setError","timeRange","setTimeRange","useEffect","days","startDate","setDate","getDate","jobsByDate","salaryByDate","skillsByDate","forEach","job","jobDate","postedAt","dateKey","toISOString","split","parseInt","replace","isNaN","total","count","skills","skill","processedData","keys","sort","date","jobCount","averageSalary","Math","round","topSkills","entries","a","b","slice","firstWeek","lastWeek","jobTrend","calculateTrend","reduce","sum","day","salaryTrend","dailyData","trends","err","action","message","processTrendsData","start","end","change","direction","magnitude","abs","ChartBarIcon","toFixed","toLocaleString","CalendarIcon","Feed","setJobs","searchQuery","setSearchQuery","setStats","fetchJobs","fetchStats","async","mockJobs","company","description","requirements","education","benefits","healthInsurance","remoteWork","console","handleSearch","handleSaveJob","jobId","handleApplyJob","LoadingSpinner","GlassCard","Sidebar","PeopleGrid","maxImages","EmployerLogos","JobCard","onSave","onApply"],"mappings":"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","x_google_ignoreList":[0,1,2]}