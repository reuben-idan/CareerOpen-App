# Generated by Django 5.2.3 on 2025-08-01 16:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_employer', models.BooleanField(default=False, help_text='Designates whether the user can post jobs.', verbose_name='employer status')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('bio', models.TextField(blank=True, verbose_name='bio')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='profile picture')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='location')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('github', models.URLField(blank=True, verbose_name='GitHub profile')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn profile')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter profile')),
                ('resume', models.FileField(blank=True, help_text='Upload your resume (PDF, DOC, or DOCX)', null=True, upload_to='resumes/', verbose_name='resume')),
                ('skills', models.TextField(blank=True, help_text='List your skills separated by commas', verbose_name='skills')),
                ('company_name', models.CharField(blank=True, max_length=100, verbose_name='company name')),
                ('company_description', models.TextField(blank=True, verbose_name='company description')),
                ('company_website', models.URLField(blank=True, verbose_name='company website')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='company logo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
            },
        ),
    ]
