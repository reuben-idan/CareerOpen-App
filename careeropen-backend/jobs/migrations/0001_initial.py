# Generated by Django 5.2.3 on 2025-08-01 16:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='job title')),
                ('description', models.TextField(verbose_name='job description')),
                ('requirements', models.TextField(blank=True, verbose_name='job requirements')),
                ('responsibilities', models.TextField(blank=True, verbose_name='job responsibilities')),
                ('company', models.CharField(max_length=200, verbose_name='company name')),
                ('company_description', models.TextField(blank=True, verbose_name='company description')),
                ('company_website', models.URLField(blank=True, verbose_name='company website')),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('temporary', 'Temporary')], default='full_time', max_length=20, verbose_name='job type')),
                ('location', models.CharField(max_length=200, verbose_name='job location')),
                ('is_remote', models.BooleanField(default=False, verbose_name='remote position')),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='minimum salary')),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='maximum salary')),
                ('salary_currency', models.CharField(default='USD', help_text='ISO 4217 currency code (e.g., USD, EUR, GBP)', max_length=3, verbose_name='salary currency')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('closed', 'Closed')], default='draft', max_length=20, verbose_name='status')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='closed at')),
                ('application_deadline', models.DateTimeField(blank=True, null=True, verbose_name='application deadline')),
                ('application_url', models.URLField(blank=True, help_text='External URL for job applications if not using the built-in system', verbose_name='application URL')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='slug')),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_jobs', to=settings.AUTH_USER_MODEL, verbose_name='poster')),
            ],
            options={
                'verbose_name': 'job',
                'verbose_name_plural': 'jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(blank=True, help_text='Why are you a good fit for this position?', verbose_name='cover letter')),
                ('resume', models.FileField(blank=True, help_text='Upload your resume (PDF, DOC, or DOCX)', null=True, upload_to='resumes/%Y/%m/%d/', verbose_name='resume')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('reviewing', 'Under Review'), ('interviewing', 'Interviewing'), ('shortlisted', 'Shortlisted'), ('offered', 'Job Offered'), ('hired', 'Hired'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='applied', max_length=20, verbose_name='application status')),
                ('applied_at', models.DateTimeField(auto_now_add=True, verbose_name='applied at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('notes', models.TextField(blank=True, verbose_name='internal notes')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to=settings.AUTH_USER_MODEL, verbose_name='applicant')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job', verbose_name='job')),
            ],
            options={
                'verbose_name': 'job application',
                'verbose_name_plural': 'job applications',
                'ordering': ['-applied_at'],
                'unique_together': {('job', 'applicant')},
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True, verbose_name='saved at')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='jobs.job', verbose_name='job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'saved job',
                'verbose_name_plural': 'saved jobs',
                'ordering': ['-saved_at'],
                'unique_together': {('user', 'job')},
            },
        ),
    ]
